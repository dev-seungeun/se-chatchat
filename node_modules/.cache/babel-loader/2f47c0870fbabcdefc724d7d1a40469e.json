{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\n\nconst useNotification = (title, option) => {\n  _s();\n\n  const navigate = useNavigate();\n\n  if (!(\"Notification\" in window)) {\n    return;\n  }\n\n  if (Notification.permission !== \"granted\") {\n    try {\n      Notification.requestPermission().then(permission => {\n        if (permission !== 'granted') return;\n      });\n    } catch (error) {\n      if (error instanceof TypeError) {\n        Notification.requestPermission(permission => {\n          if (permission !== 'granted') return;\n        });\n      } else {\n        console.error(error);\n      }\n    }\n  } else {\n    var notification = new Notification(title, option);\n\n    notification.onclick = function (event) {\n      event.preventDefault();\n      window.focus();\n      navigate(`/chat?room=${title}`); // notificationRef.close();\n    };\n  }\n};\n\n_s(useNotification, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\nexport default useNotification;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/useNotification.js"],"names":["useNavigate","useNotification","title","option","navigate","window","Notification","permission","requestPermission","then","error","TypeError","console","notification","onclick","event","preventDefault","focus"],"mappings":";;AACA,SAASA,WAAT,QAA4B,kBAA5B;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AAEzC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,MAAI,EAAE,kBAAkBK,MAApB,CAAJ,EAAiC;AAC/B;AACD;;AAED,MAAIC,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,QAAI;AACFD,MAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,YAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,OAFD;AAGD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd,UAAIA,KAAK,YAAYC,SAArB,EAAgC;AAC9BL,QAAAA,YAAY,CAACE,iBAAb,CAAgCD,UAAD,IAAgB;AAC7C,cAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,SAFD;AAGD,OAJD,MAIO;AACLK,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF;AACF,GAdD,MAcM;AACJ,QAAIG,YAAY,GAAG,IAAIP,YAAJ,CAAiBJ,KAAjB,EAAwBC,MAAxB,CAAnB;;AACAU,IAAAA,YAAY,CAACC,OAAb,GAAuB,UAASC,KAAT,EAAgB;AACrCA,MAAAA,KAAK,CAACC,cAAN;AACAX,MAAAA,MAAM,CAACY,KAAP;AACAb,MAAAA,QAAQ,CAAE,cAAaF,KAAM,EAArB,CAAR,CAHqC,CAIrC;AACD,KALD;AAMD;AAEF,CA/BD;;GAAMD,e;UAEaD,W;;;AA+BnB,eAAeC,eAAf","sourcesContent":["\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst useNotification = (title, option) => {\r\n\r\n  const navigate = useNavigate();\r\n  if (!(\"Notification\" in window)) {\r\n    return;\r\n  }\r\n\r\n  if (Notification.permission !== \"granted\") {\r\n    try {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission !== 'granted') return;\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof TypeError) {\r\n        Notification.requestPermission((permission) => {\r\n          if (permission !== 'granted') return;\r\n        });\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }else {\r\n    var notification = new Notification(title, option);\r\n    notification.onclick = function(event) {\r\n      event.preventDefault();\r\n      window.focus();\r\n      navigate(`/chat?room=${title}`);\r\n      // notificationRef.close();\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default useNotification;\r\n"]},"metadata":{},"sourceType":"module"}