{"ast":null,"code":"import { useNavigate } from \"react-router-dom\";\nexport function useNotification(title, option) {\n  const roomName = option.body.split(\"from \")[0];\n\n  if (!(\"Notification\" in window)) {\n    return;\n  }\n\n  if (Notification.permission !== \"granted\") {\n    try {\n      Notification.requestPermission().then(permission => {\n        if (permission !== 'granted') return;\n      });\n    } catch (error) {\n      if (error instanceof TypeError) {\n        Notification.requestPermission(permission => {\n          if (permission !== 'granted') return;\n        });\n      } else {\n        console.error(error);\n      }\n    }\n  } else {\n    var notification = new Notification(title, option); // self.addEventListener('notificationclick', function(event) {\n\n    notification.onclick = function (event) {\n      event.preventDefault();\n      window.focus();\n      const url = \"http://localhost:3000/#/chat?room=\" + roomName;\n      console.log(url);\n      window.open(url, \"_self\"); // navigate(`/chat?room=${title}`);\n      // notificationRef.close();\n    };\n  }\n}\n;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/useNotification.js"],"names":["useNavigate","useNotification","title","option","roomName","body","split","window","Notification","permission","requestPermission","then","error","TypeError","console","notification","onclick","event","preventDefault","focus","url","log","open"],"mappings":"AACA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AAE7C,QAAMC,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkB,OAAlB,EAA2B,CAA3B,CAAjB;;AACA,MAAI,EAAE,kBAAkBC,MAApB,CAAJ,EAAiC;AAC/B;AACD;;AAED,MAAIC,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,QAAI;AACFD,MAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,YAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,OAFD;AAGD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd,UAAIA,KAAK,YAAYC,SAArB,EAAgC;AAC9BL,QAAAA,YAAY,CAACE,iBAAb,CAAgCD,UAAD,IAAgB;AAC7C,cAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,SAFD;AAGD,OAJD,MAIO;AACLK,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF;AACF,GAdD,MAcM;AACJ,QAAIG,YAAY,GAAG,IAAIP,YAAJ,CAAiBN,KAAjB,EAAwBC,MAAxB,CAAnB,CADI,CAEJ;;AACAY,IAAAA,YAAY,CAACC,OAAb,GAAuB,UAASC,KAAT,EAAgB;AACrCA,MAAAA,KAAK,CAACC,cAAN;AACAX,MAAAA,MAAM,CAACY,KAAP;AACA,YAAMC,GAAG,GAAG,uCAAqChB,QAAjD;AACAU,MAAAA,OAAO,CAACO,GAAR,CAAYD,GAAZ;AACAb,MAAAA,MAAM,CAACe,IAAP,CAAYF,GAAZ,EAAiB,OAAjB,EALqC,CAOrC;AACA;AACD,KATD;AAUD;AAEF;AAAA","sourcesContent":["\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function useNotification(title, option) {\r\n\r\n  const roomName = option.body.split(\"from \")[0];\r\n  if (!(\"Notification\" in window)) {\r\n    return;\r\n  }\r\n\r\n  if (Notification.permission !== \"granted\") {\r\n    try {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission !== 'granted') return;\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof TypeError) {\r\n        Notification.requestPermission((permission) => {\r\n          if (permission !== 'granted') return;\r\n        });\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }else {\r\n    var notification = new Notification(title, option);\r\n    // self.addEventListener('notificationclick', function(event) {\r\n    notification.onclick = function(event) {\r\n      event.preventDefault();\r\n      window.focus();\r\n      const url = \"http://localhost:3000/#/chat?room=\"+roomName;\r\n      console.log(url);\r\n      window.open(url, \"_self\");\r\n\r\n      // navigate(`/chat?room=${title}`);\r\n      // notificationRef.close();\r\n    }\r\n  }\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}