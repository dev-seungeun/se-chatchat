{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\pages\\\\Chat.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { logout } from \"../helpers/auth\";\nimport { authService, database, database_ref } from \"../services/firebase\";\nimport { sendChat, getChats, getAddedChats } from \"../helpers/database\";\nimport \"../chat.css\";\nimport useNotification from \"../helpers/useNotification\"; // const { fireNotificationWithTimeout } = useNotification();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\n\nfunction Chat() {\n  _s2();\n\n  const [msg, setMsg] = useState(\"\");\n  const [chats, setChats] = useState(\"\");\n  const [startAdd, setStartAdd] = useState(false);\n  let query = useQuery();\n  const roomName = query.get(\"room\");\n  const scrollRef = useRef();\n\n  const scrollToBottom = () => {\n    scrollRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [chats]);\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  };\n\n  const toDate = timestamp => {\n    let date = new Intl.DateTimeFormat('ko-KR', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(timestamp);\n    return date;\n  };\n\n  const setChatList = (chatList, isInit) => {\n    console.log(chatList);\n\n    const myList = () => {\n      const list = chatList.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: toDate(chat.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 66\n          }, this)\n        }, createItem(index + \"time\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sender\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: chat.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 70\n          }, this)\n        }, createItem(index + \"sender\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: chat.message.split('\\n').map(line => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 66\n              }, this)]\n            }, createItem(index + \"span\"), true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this);\n          })\n        }, createItem(index + \"message\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, createItem(index + \"li\"), true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    };\n\n    setChats(myList);\n    !isInit && notify(chatList);\n  };\n\n  const notify = chatList => {\n    if (chatList.length > 0) {\n      const chat = chatList[chatList.length - 1];\n      console.log(chat.uid);\n      console.log(authService.currentUser.uid);\n      console.log(chat.uid !== authService.currentUser.uid);\n\n      if (chat.uid !== authService.currentUser.uid) {\n        console.log(\"noti!!\"); // useNotification(chat.email, {\n        //   body: `${chat.message}`\n        // });\n      }\n    }\n  };\n\n  const handleOnChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const onKeyPress = async e => {\n    if (e.key == 'Enter') {\n      if (!e.shiftKey) {\n        if (msg.trim() !== \"\") {\n          e.preventDefault();\n\n          try {\n            await sendChat(roomName, {\n              uid: authService.currentUser.uid,\n              email: authService.currentUser.email,\n              // message: msg.replaceAll(/(\\n|\\r\\n)/g, \"<br>\"),\n              message: msg,\n              timestamp: Date.now()\n            }).then(() => {\n              setMsg(\"\");\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      }\n    }\n  };\n\n  const handleGoogleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      console.log(\"useEffect > getChats()\");\n      getChats(roomName, setChatList); // if(startAdd) {\n      //   console.log(\"useEffect > getAddedChats()\");\n      //   getAddedChats(roomName, setChatList);\n      // }\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  /*\r\n    useEffect(() => {\r\n      getAddedChats(roomName, setChatList)\r\n    },[]);\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_wrap\",\n    ref: scrollRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"SE-SH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        type: \"button\",\n        onClick: handleGoogleLogOut,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: chats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      onKeyPress: onKeyPress,\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-msg\",\n        value: msg,\n        placeholder: \"Message Here.\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Chat, \"M0oUOVTOnwIEOSl46MbsmmFnxis=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/pages/Chat.js"],"names":["React","useState","useEffect","useRef","useLocation","logout","authService","database","database_ref","sendChat","getChats","getAddedChats","useNotification","useQuery","search","useMemo","URLSearchParams","Chat","msg","setMsg","chats","setChats","startAdd","setStartAdd","query","roomName","get","scrollRef","scrollToBottom","current","scrollIntoView","behavior","block","itemId","createItem","text","toDate","timestamp","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","setChatList","chatList","isInit","console","log","myList","list","map","chat","index","uid","currentUser","email","message","split","line","notify","length","handleOnChange","e","target","value","onKeyPress","key","shiftKey","trim","preventDefault","Date","now","then","error","handleGoogleLogOut"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { authService, database, database_ref } from \"../services/firebase\";\r\nimport { sendChat, getChats, getAddedChats } from \"../helpers/database\";\r\nimport \"../chat.css\";\r\nimport useNotification from \"../helpers/useNotification\";\r\n\r\n// const { fireNotificationWithTimeout } = useNotification();\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nfunction Chat() {\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chats, setChats] = useState(\"\");\r\n  const [startAdd, setStartAdd] = useState(false);\r\n\r\n  let query = useQuery();\r\n  const roomName = query.get(\"room\")\r\n\r\n  const scrollRef = useRef();\r\n  const scrollToBottom = () => {\r\n    scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' })\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chats]);\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const toDate = (timestamp) => {\r\n    let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\r\n    return date;\r\n  }\r\n\r\n  const setChatList = (chatList, isInit) => {\r\n\r\n    console.log(chatList);\r\n\r\n    const myList = () => {\r\n      const list = chatList.map((chat, index) => (\r\n        <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n          <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)}</span></div>\r\n          <div key={createItem(index+\"sender\")} className = \"sender\"><span>{chat.email}</span></div>\r\n          <div key={createItem(index+\"message\")} className = \"message\">\r\n            {chat.message.split('\\n').map( line => {\r\n              return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n             })}\r\n          </div>\r\n        </li>\r\n      ));\r\n      return <ul>{list}</ul>;\r\n    };\r\n    setChats(myList);\r\n    !isInit && notify(chatList);\r\n  };\r\n\r\n  const notify = (chatList) => {\r\n    if(chatList.length > 0) {\r\n      const chat = chatList[chatList.length-1];\r\n      console.log(chat.uid)\r\n      console.log(authService.currentUser.uid)\r\n      console.log(chat.uid !== authService.currentUser.uid)\r\n      if(chat.uid !== authService.currentUser.uid) {\r\n      console.log(\"noti!!\")\r\n        // useNotification(chat.email, {\r\n        //   body: `${chat.message}`\r\n        // });\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n  \tsetMsg(e.target.value);\r\n  };\r\n\r\n  const onKeyPress = async(e) => {\r\n    if(e.key == 'Enter') {\r\n      if(!e.shiftKey) {\r\n        if(msg.trim() !== \"\") {\r\n          e.preventDefault();\r\n          try {\r\n            await sendChat(roomName,\r\n            {\r\n              uid: authService.currentUser.uid,\r\n              email: authService.currentUser.email,\r\n              // message: msg.replaceAll(/(\\n|\\r\\n)/g, \"<br>\"),\r\n              message: msg,\r\n              timestamp: Date.now()\r\n            }).then(() => {\r\n              setMsg(\"\");\r\n            });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleGoogleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      console.log(\"useEffect > getChats()\");\r\n      getChats(roomName, setChatList);\r\n      // if(startAdd) {\r\n      //   console.log(\"useEffect > getAddedChats()\");\r\n      //   getAddedChats(roomName, setChatList);\r\n      // }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n\r\n/*\r\n  useEffect(() => {\r\n    getAddedChats(roomName, setChatList)\r\n  },[]);\r\n*/\r\n\r\n  return (\r\n\r\n    <div className=\"chat_wrap\" ref={scrollRef}>\r\n      <div className=\"header\">\r\n        <div className=\"title\">SE-SH</div>\r\n        <button\r\n          className=\"logout\"\r\n          type=\"button\"\r\n          onClick={handleGoogleLogOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"chat\">\r\n        {chats}\r\n      </div>\r\n      <div className=\"input-div\" onKeyPress={onKeyPress}>\r\n        <textarea\r\n          className=\"input-msg\"\r\n          value={msg}\r\n          placeholder=\"Message Here.\"\r\n          onChange={handleOnChange}>\r\n        </textarea>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}