{"ast":null,"code":"import{database,database_set,database_ref,database_update,database_on_value}from\"../services/firebase\";import{onChildAdded,onChildChanged,off,onValue,query,orderByKey,orderByChild,limitToLast,startAt}from\"firebase/database\";var info={roomsInfo:false,addedChats:{},selectedRoom:\"\"};export function getCommonInfo(key){return info[key];}export function setCommonInfo(key,value){info[key]=value;}export function getRoomsInfo(callback,notiCallback){console.log(\"getRoomsInfo\");var roomRef=database_ref(database,\"chats/rooms\");onValue(roomRef,function(snapshot){callback(snapshot.val());});if(!info.roomsInfo){onChildChanged(roomRef,function(snapshot){console.log(\"getRoomsInfo notiCallback\");console.log(snapshot.key);console.log(snapshot.val());notiCallback(snapshot.key,snapshot.val());});}info.roomsInfo=true;}export function getRoomsAuth(roomName,callback){var roomAuthRef=query(database_ref(database,'chats/'+roomName+\"/members\"),limitToLast(10));onValue(roomAuthRef,function(snapshot){callback(snapshot.val());});}export function sendChatTime(roomName,uid){return database_update(database_ref(database,'chats/rooms/'+roomName),{date:Date.now()+1000,uid:uid});}export function sendChat(roomName,data){var date=new Date();var today=date.getFullYear()+\"\"+(\"0\"+(date.getMonth()+1)).slice(-2)+\"\"+(\"0\"+date.getDate()).slice(-2);return database_set(database_ref(database,'chats/'+roomName+\"/messages/\"+today+\"/\"+data.timestamp),{message:data.message,timestamp:data.timestamp,email:data.email,uid:data.uid});}export function getAddedChats(roomName,callback){var date=new Date();var today=date.getFullYear()+\"\"+(\"0\"+(date.getMonth()+1)).slice(-2)+\"\"+(\"0\"+date.getDate()).slice(-2);;var chatList=[];var chatRef=query(database_ref(database,'chats/'+roomName+\"/messages/\"+today),limitToLast(10));onChildAdded(chatRef,function(snapshot){if(snapshot.val().hasOwnProperty(\"uid\")){chatList.push(snapshot.val());}callback(chatList);});callback(chatList,true);}/*\r\nexport function getChats(roomName, callback) {\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  },[]);\r\n  callback(chatList);\r\n}\r\n*/","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/database.js"],"names":["database","database_set","database_ref","database_update","database_on_value","onChildAdded","onChildChanged","off","onValue","query","orderByKey","orderByChild","limitToLast","startAt","info","roomsInfo","addedChats","selectedRoom","getCommonInfo","key","setCommonInfo","value","getRoomsInfo","callback","notiCallback","console","log","roomRef","snapshot","val","getRoomsAuth","roomName","roomAuthRef","sendChatTime","uid","date","Date","now","sendChat","data","today","getFullYear","getMonth","slice","getDate","timestamp","message","email","getAddedChats","chatList","chatRef","hasOwnProperty","push"],"mappings":"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","sourcesContent":["import { database, database_set, database_ref, database_update, database_on_value } from \"../services/firebase\";\r\nimport { onChildAdded, onChildChanged, off, onValue, query, orderByKey, orderByChild, limitToLast, startAt } from \"firebase/database\";\r\n\r\nconst info = {roomsInfo: false, addedChats: {}, selectedRoom: \"\"};\r\n\r\nexport function getCommonInfo(key) {\r\n    return info[key];\r\n}\r\nexport function setCommonInfo(key, value) {\r\n    info[key] = value;\r\n}\r\n\r\nexport function getRoomsInfo(callback, notiCallback) {\r\n  console.log(\"getRoomsInfo\")\r\n  const roomRef = database_ref(database, \"chats/rooms\");\r\n  onValue(roomRef, (snapshot) => {\r\n    callback(snapshot.val());\r\n  });\r\n  if(!info.roomsInfo) {\r\n    onChildChanged(roomRef, (snapshot) => {\r\n      console.log(\"getRoomsInfo notiCallback\")\r\n        console.log(snapshot.key)\r\n        console.log(snapshot.val())\r\n      notiCallback(snapshot.key, snapshot.val());\r\n    });\r\n  }\r\n  info.roomsInfo = true;\r\n}\r\n\r\nexport function getRoomsAuth(roomName, callback) {\r\n  const roomAuthRef = query(database_ref(database, 'chats/'+roomName+\"/members\"), limitToLast(10));\r\n  onValue(roomAuthRef, (snapshot) => {\r\n    callback(snapshot.val());\r\n  });\r\n}\r\n\r\nexport function sendChatTime(roomName, uid) {\r\n  return database_update(database_ref(database, 'chats/rooms/'+roomName), {\r\n    date: Date.now()+1000,\r\n    uid : uid\r\n  });\r\n}\r\n\r\nexport function sendChat(roomName, data) {\r\n  const date = new Date();\r\n  const today = date.getFullYear()+\"\"+(\"0\" + (date.getMonth() + 1)).slice(-2)+\"\"+(\"0\" + date.getDate()).slice(-2);\r\n  return database_set(database_ref(database, 'chats/'+roomName+\"/messages/\"+today+\"/\"+data.timestamp), {\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    email: data.email,\r\n    uid: data.uid\r\n  });\r\n}\r\n\r\nexport function getAddedChats(roomName, callback) {\r\n  const date = new Date();\r\n  const today = date.getFullYear()+\"\"+(\"0\" + (date.getMonth() + 1)).slice(-2)+\"\"+(\"0\" + date.getDate()).slice(-2);;\r\n  let chatList = [];\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName+\"/messages/\"+today), limitToLast(10));\r\n  onChildAdded(chatRef, (snapshot) => {\r\n    if(snapshot.val().hasOwnProperty(\"uid\")) {\r\n      chatList.push(snapshot.val());\r\n    }\r\n    callback(chatList);\r\n  });\r\n  callback(chatList, true);\r\n}\r\n\r\n/*\r\nexport function getChats(roomName, callback) {\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  },[]);\r\n  callback(chatList);\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}