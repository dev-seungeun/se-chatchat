{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\pages\\\\Chat.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useHistory, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { logout } from \"../helpers/auth\";\nimport { authService, database, database_ref } from \"../services/firebase\";\nimport { sendChat, sendChatTime, getChats, getAddedChats, offRef } from \"../helpers/database\";\nimport { useNotification } from \"../helpers/useNotification\";\nimport \"../chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  const query = React.useMemo(() => new URLSearchParams(search), [search]);\n  return query;\n}\n\n_s(useQuery, \"oEpefbUBhGKQodgjMPdMiKsuhFE=\", false, function () {\n  return [useLocation];\n});\n\nfunction Chat() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  let isMount = true;\n  let startAdd = false;\n  const [msg, setMsg] = useState(\"\");\n  const [chatList, setChatList] = useState(\"\");\n  const [chats, setChats] = useState(\"\");\n  const [changeRoom, setChangeRoom] = useState(\"\");\n\n  const setChatUI = (chatList, isInitEnd) => {\n    const themeData = getThemeData();\n\n    const myList = () => {\n      if (themeData.theme == \"light\") {\n        const list = chatList.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: toDate(chat.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 68\n            }, this)\n          }, createItem(index + \"time\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: chat.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 72\n            }, this)\n          }, createItem(index + \"sender\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: chat.message.split('\\n').map(line => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 68\n                }, this)]\n              }, createItem(index + \"span\"), true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 25\n              }, this);\n            })\n          }, createItem(index + \"message\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, createItem(index + \"li\"), true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this);\n      } else {\n        const list = chatList.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"C:\\\\Users\\\\\" + chat.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 72\n            }, this)\n          }, createItem(index + \"sender\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: toDate(chat.timestamp) + \" >\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 68\n            }, this)\n          }, createItem(index + \"time\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: chat.message.split('\\n').map(line => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 68\n                }, this)]\n              }, createItem(index + \"span\"), true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, this);\n            })\n          }, createItem(index + \"message\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, createItem(index + \"li\"), true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    setChats(myList);\n    setChatList(chatList);\n    const focused = document.hasFocus();\n\n    if (!focused && startAdd && isMount) {\n      notify(chatList);\n    }\n\n    if (isInitEnd) startAdd = true;\n    isMount && setTimeout(() => {\n      scrollToBottom();\n    }, 200);\n  };\n\n  const getThemeData = () => {\n    if (isMount) {\n      const chatWrap = document.querySelector(\".chat_wrap\");\n      const theme = chatWrap.getAttribute(\"data-theme\");\n      return {\n        'chatWrap': chatWrap,\n        'theme': theme\n      };\n    }\n  };\n\n  const notify = chatList => {\n    _s2();\n\n    if (chatList.length > 0) {\n      const chat = chatList[chatList.length - 1];\n\n      if (chat.uid !== authService.currentUser.uid) {\n        const res = useNotification('SESH', {\n          body: \"from '\" + roomName + \"'\"\n        });\n        console.log(res); // useNotification(chat.email, {\n        //   body: `${chat.message}`\n        // });\n      }\n    }\n  };\n\n  _s2(notify, \"1f5oqaShrgpqzmMOLHKUPFa+cro=\", false, function () {\n    return [useNotification];\n  });\n\n  const sendMsg = async (e, msg) => {\n    if (msg.trim() !== \"\") {\n      try {\n        await sendChat(roomName, {\n          uid: authService.currentUser.uid,\n          email: authService.currentUser.email,\n          message: msg,\n          timestamp: Date.now()\n        }).then(() => {\n          setMsg(\"\");\n        });\n        sendChatTime(roomName, authService.currentUser.uid);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }; // USE EFFECT  ---------------------------------------\n\n\n  useEffect(() => {\n    getAddedChats(roomName, setChatUI);\n    return () => {\n      isMount = false;\n    };\n  }, []);\n  useEffect(() => {\n    getAddedChats(roomName, setChatUI);\n  }, [changeRoom]); // HANDLE  -------------------------------------------\n\n  const handleSendMsg = async e => {\n    sendMsg(e, msg);\n  };\n\n  const handleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOnChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const handleKeyPress = async e => {\n    if (e.key == 'Enter') {\n      if (!e.shiftKey) {\n        sendMsg(e, msg);\n      }\n    }\n  };\n\n  const handleTheme = e => {\n    const modeBtn = document.getElementById(\"modeBtn\");\n    const themeData = getThemeData();\n    const chatWrap = themeData.chatWrap;\n    const theme = themeData.theme;\n\n    if (theme == \"light\") {\n      chatWrap.removeAttribute(\"data-theme\", \"light\");\n      chatWrap.setAttribute(\"data-theme\", \"dark\");\n      modeBtn.innerText = \"LIGHT\";\n    } else {\n      chatWrap.removeAttribute(\"data-theme\", \"dark\");\n      chatWrap.setAttribute(\"data-theme\", \"light\");\n      modeBtn.innerText = \"DARK\";\n    }\n\n    setChatUI(chatList);\n  }; // ETC ----------------------------------------------\n\n\n  let query = useQuery();\n  const roomName = query.get(\"room\");\n  console.log(\"query!!!\"); //setChangeRoom(roomName);\n\n  const messageRef = useRef();\n\n  const scrollToBottom = () => {\n    messageRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  };\n\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  };\n\n  const toDate = timestamp => {\n    //let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\n    let date = new Intl.DateTimeFormat('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    }).format(timestamp);\n    return date;\n  }; // --------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_wrap\",\n    \"data-theme\": \"light\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode\",\n        type: \"button\",\n        id: \"modeBtn\",\n        value: \"\",\n        onClick: handleTheme,\n        children: \"DARK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        type: \"button\",\n        onClick: handleLogOut,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [chats, /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      onKeyPress: handleKeyPress,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-msg\",\n        value: msg,\n        placeholder: \"Message Here.\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send\",\n        type: \"button\",\n        onClick: handleSendMsg,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Chat, \"Ado6MQmIhyI2ZyxBRSKfAz6Rbsk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/pages/Chat.js"],"names":["React","useState","useHistory","useEffect","useRef","useLocation","logout","authService","database","database_ref","sendChat","sendChatTime","getChats","getAddedChats","offRef","useNotification","useQuery","search","query","useMemo","URLSearchParams","Chat","isMount","startAdd","msg","setMsg","chatList","setChatList","chats","setChats","changeRoom","setChangeRoom","setChatUI","isInitEnd","themeData","getThemeData","myList","theme","list","map","chat","index","uid","currentUser","toDate","timestamp","createItem","email","message","split","line","focused","document","hasFocus","notify","setTimeout","scrollToBottom","chatWrap","querySelector","getAttribute","length","res","body","roomName","console","log","sendMsg","e","trim","Date","now","then","error","handleSendMsg","handleLogOut","handleOnChange","target","value","handleKeyPress","key","shiftKey","handleTheme","modeBtn","getElementById","removeAttribute","setAttribute","innerText","get","messageRef","current","scrollIntoView","behavior","block","itemId","text","date","Intl","DateTimeFormat","hour","minute","second","hour12","format"],"mappings":"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","sourcesContent":["import React, { useState, useHistory, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { authService, database, database_ref } from \"../services/firebase\";\r\nimport { sendChat, sendChatTime, getChats, getAddedChats, offRef } from \"../helpers/database\";\r\nimport { useNotification } from \"../helpers/useNotification\";\r\nimport \"../chat.css\";\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n  const query = React.useMemo(() => new URLSearchParams(search), [search]);\r\n  return query;\r\n}\r\n\r\nfunction Chat() {\r\n\r\n  let isMount = true;\r\n  let startAdd = false;\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chatList, setChatList] = useState(\"\");\r\n  const [chats, setChats] = useState(\"\");\r\n  const [changeRoom, setChangeRoom] = useState(\"\");\r\n\r\n  const setChatUI = (chatList, isInitEnd) => {\r\n    const themeData = getThemeData();\r\n    const myList = () => {\r\n      if(themeData.theme == \"light\") {\r\n        const list = chatList.map((chat, index) => (\r\n          <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n            <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)}</span></div>\r\n            <div key={createItem(index+\"sender\")} className = \"sender\"><span>{chat.email}</span></div>\r\n            <div key={createItem(index+\"message\")} className = \"message\">\r\n              {chat.message.split('\\n').map( line => {\r\n                return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n               })}\r\n            </div>\r\n          </li>\r\n        ));\r\n        return <ul>{list}</ul>;\r\n      }else {\r\n        const list = chatList.map((chat, index) => (\r\n          <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n            <div key={createItem(index+\"sender\")} className = \"sender\"><span>{\"C:\\\\Users\\\\\"+chat.email}</span></div>\r\n            <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)+\" >\"}</span></div>\r\n            <div key={createItem(index+\"message\")} className = \"message\">\r\n              {chat.message.split('\\n').map( line => {\r\n                return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n               })}\r\n            </div>\r\n          </li>\r\n        ));\r\n        return <ul>{list}</ul>;\r\n      }\r\n    }\r\n    setChats(myList);\r\n    setChatList(chatList);\r\n\r\n    const focused = document.hasFocus();\r\n    if(!focused && startAdd && isMount) {\r\n      notify(chatList);\r\n    }\r\n    if(isInitEnd) startAdd = true;\r\n\r\n    isMount && setTimeout(()=>{ scrollToBottom() }, 200);\r\n\r\n  };\r\n\r\n  const getThemeData = () => {\r\n    if(isMount) {\r\n      const chatWrap = document.querySelector(\".chat_wrap\")\r\n      const theme = chatWrap.getAttribute(\"data-theme\");\r\n      return {'chatWrap': chatWrap, 'theme': theme};\r\n    }\r\n  };\r\n\r\n  const notify = (chatList) => {\r\n    if(chatList.length > 0) {\r\n      const chat = chatList[chatList.length-1];\r\n      if(chat.uid !== authService.currentUser.uid) {\r\n        const res = useNotification('SESH', {\r\n          body: \"from '\"+roomName+\"'\"\r\n        });\r\n        console.log(res);\r\n        // useNotification(chat.email, {\r\n        //   body: `${chat.message}`\r\n        // });\r\n      }\r\n    }\r\n  }\r\n\r\n  const sendMsg = async (e, msg) => {\r\n    if(msg.trim() !== \"\") {\r\n      try {\r\n\r\n        await sendChat(roomName,\r\n        {\r\n          uid: authService.currentUser.uid,\r\n          email: authService.currentUser.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }).then(() => {\r\n          setMsg(\"\");\r\n        });\r\n\r\n        sendChatTime(roomName, authService.currentUser.uid);\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n// USE EFFECT  ---------------------------------------\r\n  useEffect(() => {\r\n    getAddedChats(roomName, setChatUI);\r\n    return() => {\r\n      isMount = false;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAddedChats(roomName, setChatUI);\r\n  }, [changeRoom]);\r\n\r\n\r\n// HANDLE  -------------------------------------------\r\n  const handleSendMsg = async (e) => {\r\n    sendMsg(e, msg);\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n\r\n  const handleKeyPress = async(e) => {\r\n    if(e.key == 'Enter') {\r\n      if(!e.shiftKey) {\r\n        sendMsg(e, msg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const handleTheme = (e) => {\r\n    const modeBtn = document.getElementById(\"modeBtn\");\r\n    const themeData = getThemeData();\r\n    const chatWrap = themeData.chatWrap;\r\n    const theme = themeData.theme;\r\n    if(theme == \"light\") {\r\n      chatWrap.removeAttribute(\"data-theme\", \"light\")\r\n      chatWrap.setAttribute(\"data-theme\", \"dark\")\r\n      modeBtn.innerText = \"LIGHT\"\r\n    }else {\r\n      chatWrap.removeAttribute(\"data-theme\", \"dark\")\r\n      chatWrap.setAttribute(\"data-theme\", \"light\")\r\n      modeBtn.innerText = \"DARK\"\r\n    }\r\n    setChatUI(chatList);\r\n  }\r\n\r\n\r\n// ETC ----------------------------------------------\r\n  let query = useQuery();\r\n  const roomName = query.get(\"room\");\r\n  console.log(\"query!!!\")\r\n  //setChangeRoom(roomName);\r\n\r\n  const messageRef = useRef();\r\n  const scrollToBottom = () => {\r\n    messageRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' })\r\n  }\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const toDate = (timestamp) => {\r\n    //let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\r\n    let date = new Intl.DateTimeFormat('ko-KR', {  hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }).format(timestamp);\r\n    return date;\r\n  }\r\n// --------------------------------------------------\r\n\r\n  return (\r\n\r\n    <div className=\"chat_wrap\" data-theme=\"light\">\r\n      <div className=\"header\">\r\n        <button\r\n          className=\"mode\"\r\n          type=\"button\"\r\n          id=\"modeBtn\"\r\n          value=\"\"\r\n          onClick={handleTheme}>\r\n          DARK\r\n        </button>\r\n        <div className=\"title\">{roomName}</div>\r\n        <button\r\n          className=\"logout\"\r\n          type=\"button\"\r\n          onClick={handleLogOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"chat\">\r\n        {chats}\r\n        <div ref={messageRef} />\r\n      </div>\r\n      <div className=\"input-div\" onKeyPress={handleKeyPress}>\r\n        <textarea\r\n          className=\"input-msg\"\r\n          value={msg}\r\n          placeholder=\"Message Here.\"\r\n          onChange={handleOnChange}>\r\n        </textarea>\r\n        <button\r\n          className=\"send\"\r\n          type=\"button\"\r\n          onClick={handleSendMsg}>\r\n          SEND\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}