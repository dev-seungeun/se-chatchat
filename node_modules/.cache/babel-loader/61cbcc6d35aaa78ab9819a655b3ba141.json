{"ast":null,"code":"import{database,database_set,database_ref,database_on_value}from\"../services/firebase\";import{onChildAdded,query,orderByKey,orderByChild,limitToLast,startAt}from\"firebase/database\";export function getRooms(callback){var roomRef=database_ref(database,\"chats\");onValue(roomRef,function(snapshot){callback(snapshot.val());});}export function sendChat(roomName,data){return database_set(database_ref(database,'chats/'+roomName+\"/\"+data.timestamp),{message:data.message,timestamp:data.timestamp,email:data.email,uid:data.uid});}export function getAddedChats(roomName,callback){var date=new Date();var today=new Date(date.getFullYear(),date.getMonth(),date.getDate(),0,0,0,0).getTime();var chatList=[];var chatRef=query(database_ref(database,'chats/'+roomName),orderByKey(),startAt(today.toString()),limitToLast(10));onChildAdded(chatRef,function(snapshot){chatList.push(snapshot.val());callback(chatList);});callback(chatList,true);}/*\r\nexport function getChats(roomName, callback) {\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  },[]);\r\n  callback(chatList);\r\n}\r\n*/","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/database.js"],"names":["database","database_set","database_ref","database_on_value","onChildAdded","query","orderByKey","orderByChild","limitToLast","startAt","getRooms","callback","roomRef","onValue","snapshot","val","sendChat","roomName","data","timestamp","message","email","uid","getAddedChats","date","Date","today","getFullYear","getMonth","getDate","getTime","chatList","chatRef","toString","push"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,YAAnB,CAAiCC,YAAjC,CAA+CC,iBAA/C,KAAwE,sBAAxE,CACA,OAASC,YAAT,CAAuBC,KAAvB,CAA8BC,UAA9B,CAA0CC,YAA1C,CAAwDC,WAAxD,CAAqEC,OAArE,KAAoF,mBAApF,CAEA,MAAO,SAASC,CAAAA,QAAT,CAAkBC,QAAlB,CAA4B,CACjC,GAAMC,CAAAA,OAAO,CAAGV,YAAY,CAACF,QAAD,CAAW,OAAX,CAA5B,CACAa,OAAO,CAACD,OAAD,CAAU,SAACE,QAAD,CAAc,CAC7BH,QAAQ,CAACG,QAAQ,CAACC,GAAT,EAAD,CAAR,CACD,CAFM,CAAP,CAGD,CAED,MAAO,SAASC,CAAAA,QAAT,CAAkBC,QAAlB,CAA4BC,IAA5B,CAAkC,CACvC,MAAOjB,CAAAA,YAAY,CAACC,YAAY,CAACF,QAAD,CAAW,SAASiB,QAAT,CAAkB,GAAlB,CAAsBC,IAAI,CAACC,SAAtC,CAAb,CAA+D,CAChFC,OAAO,CAAEF,IAAI,CAACE,OADkE,CAEhFD,SAAS,CAAED,IAAI,CAACC,SAFgE,CAGhFE,KAAK,CAAEH,IAAI,CAACG,KAHoE,CAIhFC,GAAG,CAAEJ,IAAI,CAACI,GAJsE,CAA/D,CAAnB,CAMD,CAED,MAAO,SAASC,CAAAA,aAAT,CAAuBN,QAAvB,CAAiCN,QAAjC,CAA2C,CAChD,GAAMa,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAMC,CAAAA,KAAK,CAAI,GAAID,CAAAA,IAAJ,CAASD,IAAI,CAACG,WAAL,EAAT,CAA6BH,IAAI,CAACI,QAAL,EAA7B,CAA8CJ,IAAI,CAACK,OAAL,EAA9C,CAA8D,CAA9D,CAAiE,CAAjE,CAAoE,CAApE,CAAuE,CAAvE,CAAD,CAA4EC,OAA5E,EAAd,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMC,CAAAA,OAAO,CAAG3B,KAAK,CAACH,YAAY,CAACF,QAAD,CAAW,SAASiB,QAApB,CAAb,CAA4CX,UAAU,EAAtD,CAA0DG,OAAO,CAACiB,KAAK,CAACO,QAAN,EAAD,CAAjE,CAAqFzB,WAAW,CAAC,EAAD,CAAhG,CAArB,CACAJ,YAAY,CAAC4B,OAAD,CAAU,SAAClB,QAAD,CAAc,CAClCiB,QAAQ,CAACG,IAAT,CAAcpB,QAAQ,CAACC,GAAT,EAAd,EACAJ,QAAQ,CAACoB,QAAD,CAAR,CACD,CAHW,CAAZ,CAIApB,QAAQ,CAACoB,QAAD,CAAW,IAAX,CAAR,CACD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { database, database_set, database_ref, database_on_value } from \"../services/firebase\";\r\nimport { onChildAdded, query, orderByKey, orderByChild, limitToLast, startAt } from \"firebase/database\";\r\n\r\nexport function getRooms(callback) {\r\n  const roomRef = database_ref(database, \"chats\");\r\n  onValue(roomRef, (snapshot) => {\r\n    callback(snapshot.val());\r\n  });\r\n}\r\n\r\nexport function sendChat(roomName, data) {\r\n  return database_set(database_ref(database, 'chats/'+roomName+\"/\"+data.timestamp), {\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    email: data.email,\r\n    uid: data.uid\r\n  });\r\n}\r\n\r\nexport function getAddedChats(roomName, callback) {\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  let chatList = [];\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  onChildAdded(chatRef, (snapshot) => {\r\n    chatList.push(snapshot.val());\r\n    callback(chatList);\r\n  });\r\n  callback(chatList, true);\r\n}\r\n\r\n/*\r\nexport function getChats(roomName, callback) {\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  },[]);\r\n  callback(chatList);\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}