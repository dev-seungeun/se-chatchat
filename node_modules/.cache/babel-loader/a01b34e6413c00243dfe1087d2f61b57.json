{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\pages\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getRooms, getRoomsAuth, getAddedChats } from \"../helpers/database\";\nimport { authService } from \"../services/firebase\";\nimport { logout } from \"../helpers/auth\";\nimport \"../rooms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Room() {\n  _s();\n\n  const [rooms, setRooms] = useState(\"\");\n  let navigate = useNavigate();\n\n  const getRoomList = async () => {\n    getRooms(function (roomObject) {\n      const myList = () => {\n        const list = Object.values(roomObject).map((roomName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"room\",\n            type: \"button\",\n            onClick: handleSelectRoom,\n            value: roomName,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: roomName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)\n          }, createItem(index + \"room\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, createItem(index + \"li\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n      };\n\n      setRooms(myList);\n      Object.values(roomObject).forEach((roomName, index) => {\n        getAddedChats(roomName, function (chatList) {\n          console.log(roomName);\n          console.log(chatList);\n        });\n      });\n    });\n  }; // USE EFFECT  ---------------------------------------\n\n\n  useEffect(() => {\n    getRoomList();\n  }, []); // HANDLE  -------------------------------------------\n\n  const handleSelectRoom = async e => {\n    e.preventDefault();\n    const roomName = e.target.value;\n\n    if (roomName == undefined || roomName == \"undefined\") {\n      alert(\"방을 다시 선택해주세요\");\n    } else {\n      getRoomsAuth(roomName, function (res) {\n        if (Object.keys(res).includes(authService.currentUser.uid)) {\n          console.log(\"[\" + roomName + \"] 입장\");\n          navigate(`/chat?room=${roomName}`);\n        } else {\n          alert(\"'\" + roomName + \"' 방 입장권한이 없습니다.\");\n        }\n      });\n    }\n  };\n\n  const handleGoogleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  }; // ETC ----------------------------------------------\n\n\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  }; // --------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-room\",\n      type: \"button\",\n      onClick: handleGoogleLogOut,\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rooms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Room, \"GWz3ZDzUTGRlQO/7yNXg66phlGc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/pages/Room.js"],"names":["useState","useEffect","useNavigate","getRooms","getRoomsAuth","getAddedChats","authService","logout","Room","rooms","setRooms","navigate","getRoomList","roomObject","myList","list","Object","values","map","roomName","index","handleSelectRoom","createItem","forEach","chatList","console","log","e","preventDefault","target","value","undefined","alert","res","keys","includes","currentUser","uid","handleGoogleLogOut","error","itemId","text"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getRooms, getRoomsAuth, getAddedChats } from \"../helpers/database\";\r\nimport { authService } from \"../services/firebase\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport \"../rooms.css\"\r\n\r\nfunction Room() {\r\n\r\n  const [rooms, setRooms] = useState(\"\");\r\n  let navigate = useNavigate();\r\n\r\n  const getRoomList = async() => {\r\n    getRooms(function(roomObject) {\r\n      const myList = () => {\r\n        const list = Object.values(roomObject).map((roomName, index) => (\r\n          <li key={createItem(index+\"li\")}>\r\n            <button\r\n              key={createItem(index+\"room\")}\r\n              className = \"room\"\r\n              type=\"button\"\r\n              onClick={handleSelectRoom}\r\n              value={roomName}>\r\n              <span>{roomName}</span>\r\n            </button>\r\n          </li>\r\n        ));\r\n        return <ul>{list}</ul>;\r\n      };\r\n\r\n      setRooms(myList);\r\n\r\n      Object.values(roomObject).forEach((roomName, index) => {\r\n        getAddedChats(roomName, function(chatList) {\r\n          console.log(roomName);\r\n          console.log(chatList);\r\n        })\r\n      });\r\n\r\n    });\r\n  };\r\n\r\n\r\n// USE EFFECT  ---------------------------------------\r\n  useEffect(() => {\r\n    getRoomList();\r\n  }, []);\r\n\r\n\r\n// HANDLE  -------------------------------------------\r\n  const handleSelectRoom = async (e) => {\r\n    e.preventDefault();\r\n    const roomName = e.target.value;\r\n    if(roomName == undefined || roomName == \"undefined\") {\r\n      alert(\"방을 다시 선택해주세요\");\r\n    }else {\r\n      getRoomsAuth(roomName, function(res) {\r\n        if(Object.keys(res).includes(authService.currentUser.uid)) {\r\n          console.log(\"[\"+roomName+\"] 입장\")\r\n          navigate(`/chat?room=${roomName}`);\r\n        }else {\r\n          alert(\"'\"+roomName+\"' 방 입장권한이 없습니다.\")\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n// ETC ----------------------------------------------\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n// --------------------------------------------------\r\n\r\n\r\n  return (\r\n    <div className=\"room-wrap\">\r\n      <button\r\n        className=\"logout-room\"\r\n        type=\"button\"\r\n        onClick={handleGoogleLogOut}>\r\n        LOGOUT\r\n      </button>\r\n      <br/><br/>\r\n      <div>\r\n        {rooms}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"]},"metadata":{},"sourceType":"module"}