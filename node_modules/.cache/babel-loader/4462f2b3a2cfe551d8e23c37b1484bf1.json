{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyDocuments\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\pages\\\\Chat.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useHistory, useEffect, useRef, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { logout } from \"../helpers/auth\";\nimport { authService, database, database_ref, storage, storage_ref, upload_byte, down_url } from \"../services/firebase\";\nimport { sendChat, sendChatTime, getChats, getAddedChats, offRef, getCommonInfo, setCommonInfo } from \"../helpers/database\";\nimport { useNotification } from \"../helpers/useNotification\";\nimport \"../chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  const query = React.useMemo(() => new URLSearchParams(search), [search]);\n  return query;\n}\n\n_s(useQuery, \"oEpefbUBhGKQodgjMPdMiKsuhFE=\", false, function () {\n  return [useLocation];\n});\n\nfunction Chat() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  let storageUrl = \"gs://sesh-chatchat.appspot.com/\";\n  let isMount = true;\n  let startAdd = false;\n  let chatTemp = [];\n  const [msg, setMsg] = useState(\"\");\n  const [chats, setChats] = useState(\"\");\n  const [chatList, setChatList] = useState(\"\");\n  const [themeInfo, setThemeInfo] = useState({\n    theme: \"\",\n    themeTxt: \"\"\n  });\n  const [src, setSrc] = useState(\"\");\n  const [imgFile, setImgFile] = useState();\n\n  const setChatUI = (dbChatList, isInitEnd, isClean) => {\n    if (isClean) {\n      $(\"#chatUL\").empty();\n    }\n\n    var list = \"\";\n    dbChatList.forEach(chat => {\n      var message = chat.message + \"\";\n\n      if (getThemeData().theme == \"dark\" || themeInfo.theme == \"dark\") {\n        list = '<li ';\n        list += chat.uid === authService.currentUser.uid ? 'right>' : 'left>';\n        list += '<div class = \"sender\"><span>C:\\\\Users\\\\' + chat.email + '</span></div>';\n        list += '<div class = \"time\"><span>' + toDate(chat.timestamp) + ' ></span></div>';\n        list += '<div class = \"message\">';\n\n        if (message.includes(\"image_send_check\")) {\n          setFileUrl(message.split(\":\")[1]);\n          list += '<img id=\"img_id_' + chat.message.split(\":\")[1] + '\" src=\"\" />';\n        } else {\n          message.split(\"\\n\").map(line => {\n            list += '<span>' + line + '<br/></span>';\n          });\n        }\n\n        list += '</div></li>';\n      } else {\n        list = '<li ';\n        list += chat.uid === authService.currentUser.uid ? 'class=\"right\">' : 'class=\"left\">';\n        list += '<div class = \"time\"><span>' + toDate(chat.timestamp) + '</span></div>';\n        list += '<div class = \"sender\"><span>' + chat.email + '</span></div>';\n        list += '<div class = \"message\">';\n\n        if (message.includes(\"image_send_check\")) {\n          setFileUrl(message.split(\":\")[1]);\n          list += '<img id=\"img_id_' + chat.message.split(\":\")[1] + '\" src=\"\" />';\n        } else {\n          message.split(\"\\n\").map(line => {\n            list += '<span>' + line + '<br/></span>';\n          });\n        }\n\n        list += '</div></li>';\n      }\n\n      $(\"#chatUL\").append(list);\n      chatTemp.push(chat);\n    });\n    console.log(chatTemp);\n    setChatList(chatTemp);\n    const focused = document.hasFocus();\n\n    if (!focused && startAdd && isMount) {\n      notify(chatList);\n    }\n\n    if (isInitEnd) startAdd = true;\n    isMount && setTimeout(() => {\n      scrollToBottom();\n    }, 200);\n  };\n\n  const getThemeData = () => {\n    if (isMount) {\n      const chatWrap = document.querySelector(\".chat_wrap\");\n      const theme = chatWrap.getAttribute(\"data-theme\");\n      return {\n        'chatWrap': chatWrap,\n        'theme': theme\n      };\n    }\n  };\n\n  const notify = chatList => {\n    _s2();\n\n    if (chatList.length > 0) {\n      const chat = chatList[chatList.length - 1];\n\n      if (chat.uid !== authService.currentUser.uid) {\n        console.log(\"NOTI > from chat\");\n        const res = useNotification('SESH', {\n          body: \"from '\" + roomName + \"'\"\n        });\n        console.log(res); // useNotification(chat.email, {\n        //   body: `${chat.message}`\n        // });\n      }\n    }\n  };\n\n  _s2(notify, \"1f5oqaShrgpqzmMOLHKUPFa+cro=\", false, function () {\n    return [useNotification];\n  });\n\n  var checkImgCnt = 0;\n  var checkImgRstCnt = 0;\n\n  const setFileUrl = fileName => {\n    checkImgCnt = checkImgCnt + 1;\n    LoadingWithMask();\n    const id = \"img_id_\" + fileName;\n    const storageRef = down_url(storage_ref(storage, getToday() + \"/\" + roomName + \"/images/\" + fileName)).then(url => {\n      const xhr = new XMLHttpRequest();\n      xhr.responseType = 'blob';\n\n      xhr.onload = event => {\n        const blob = xhr.response;\n      };\n\n      xhr.open('GET', url);\n      xhr.send();\n      document.getElementById(id).src = url;\n      checkImgRstCnt = checkImgRstCnt + 1;\n      console.log(checkImgCnt == checkImgRstCnt);\n\n      if (checkImgCnt == checkImgRstCnt) {\n        setTimeout(closeLoadingWithMask, 1000);\n      }\n    }).catch(error => {});\n  };\n\n  const getToday = () => {\n    const date = new Date();\n    const today = date.getFullYear() + \"\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"\" + (\"0\" + date.getDate()).slice(-2);\n    return today;\n  };\n\n  const sendMsg = async (e, msg) => {\n    if (src != \"\" && !src.includes(\"DONE\")) {\n      try {\n        console.log(\"sendIMG!!!\");\n        LoadingWithMask();\n        const self = this;\n        const fileName = Date.now() + \"_\" + Math.floor(Math.random() * 100) + \".png\";\n        const storageRef = storage_ref(storage, getToday() + \"/\" + roomName + \"/images/\" + fileName);\n        upload_byte(storageRef, imgFile).then(snapshot => {\n          setSrc(\"DONE-\" + fileName);\n        }, error => {\n          console.log(error);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (msg.trim() !== \"\") {\n      try {\n        console.log(\"sendMSG!!!\");\n        await sendChat(roomName, {\n          uid: authService.currentUser.uid,\n          email: authService.currentUser.email,\n          message: msg,\n          timestamp: Date.now()\n        }).then(() => {\n          setMsg(\"\");\n        });\n        sendChatTime(roomName, authService.currentUser.uid);\n\n        if (msg.includes(\"image_send_check:\")) {\n          closeLoadingWithMask();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const escFunction = useCallback(event => {\n    if (event.keyCode === 27) {\n      setSrc(\"\");\n      document.getElementById(\"input-image\").style.display = \"none\";\n    }\n  }, []); // USE EFFECT  ---------------------------------------\n\n  useEffect(() => {\n    const themeInfoTmp = getCommonInfo(\"themeInfo\");\n    setThemeInfo({\n      theme: themeInfoTmp.theme,\n      themeTxt: themeInfoTmp.themeTxt\n    });\n    getAddedChats(roomName, setChatUI);\n    document.addEventListener(\"keydown\", escFunction, false);\n    return () => {\n      isMount = false;\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  }, []);\n  useEffect(() => {\n    if (src.includes(\"DONE\")) {\n      setSrc(\"\");\n      document.getElementById(\"input-image\").style.display = \"none\";\n      const fileName = src.split(\"-\")[1];\n      sendMsg(null, \"image_send_check:\" + fileName); // closeLoadingWithMask();\n    }\n  }, [src]); // useEffect(() => {\n  //   // 이미지 전송 체크 msg 전송\n  //   sendChat(roomName,\n  //   {\n  //     uid: authService.currentUser.uid,\n  //     email: authService.currentUser.email,\n  //     message: \"image_send_check:\"+fileName,\n  //     timestamp: Date.now()\n  //   }).then(() => {\n  //   });\n  //\n  //   sendChatTime(roomName, authService.currentUser.uid);\n  //\n  //   return() => {\n  //   }\n  // }, [uploadState]);\n  // HANDLE  -------------------------------------------\n\n  const handleSendMsg = async e => {\n    sendMsg(e, msg);\n  };\n\n  const handleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOnChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const handleKeyPress = async e => {\n    if (e.key == 'Enter') {\n      if (!e.shiftKey) {\n        sendMsg(e, msg);\n      }\n    }\n  };\n\n  const handleTheme = e => {\n    const modeBtn = document.getElementById(\"modeBtn\");\n    const themeData = getThemeData();\n    const chatWrap = themeData.chatWrap;\n    const theme = themeData.theme;\n\n    if (theme == \"light\") {\n      chatWrap.removeAttribute(\"data-theme\", \"light\");\n      chatWrap.setAttribute(\"data-theme\", \"dark\");\n      modeBtn.innerText = \"LIGHT\";\n      setCommonInfo(\"themeInfo\", {\n        theme: \"dark\",\n        themeTxt: \"LIGHT\"\n      });\n    } else {\n      chatWrap.removeAttribute(\"data-theme\", \"dark\");\n      chatWrap.setAttribute(\"data-theme\", \"light\");\n      modeBtn.innerText = \"DARK\";\n      setCommonInfo(\"themeInfo\", {\n        theme: \"light\",\n        themeTxt: \"DARK\"\n      });\n    }\n\n    setChatUI(chatList, false, true);\n  };\n\n  const handleOnPaste = e => {\n    const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n    let blob = null;\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].type.indexOf(\"image\") === 0) {\n        blob = items[i].getAsFile();\n      }\n    }\n\n    if (blob !== null) {\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        setSrc(event.target.result);\n        document.getElementById(\"input-image\").style.display = \"block\";\n      };\n\n      reader.readAsDataURL(blob);\n      var file = new File([blob], Date.now() + Math.floor(Math.random() * 100));\n      setImgFile(file);\n    }\n  }; // ETC ----------------------------------------------\n\n\n  let query = useQuery();\n  const roomName = query.get(\"room\");\n  const messageRef = useRef();\n\n  const scrollToBottom = () => {\n    messageRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  };\n\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  };\n\n  const toDate = timestamp => {\n    //let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\n    let date = new Intl.DateTimeFormat('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    }).format(timestamp);\n    return date;\n  };\n\n  const LoadingWithMask = () => {\n    document.getElementById(\"loadingMask\").style.display = \"block\";\n    document.getElementById(\"loadingImg\").style.display = \"block\";\n  };\n\n  const closeLoadingWithMask = () => {\n    document.getElementById('loadingMask').style.display = \"none\";\n    document.getElementById('loadingImg').style.display = \"none\";\n  }; // --------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_wrap\",\n    \"data-theme\": themeInfo.theme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode\",\n        type: \"button\",\n        id: \"modeBtn\",\n        value: \"\",\n        onClick: handleTheme,\n        children: themeInfo.themeTxt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        type: \"button\",\n        onClick: handleLogOut,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat\",\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"chatUL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"input-image\",\n        className: \"input-image\",\n        src: src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      onKeyPress: handleKeyPress,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-msg\",\n        value: msg,\n        placeholder: \"Message Here.\",\n        onChange: handleOnChange,\n        onPaste: handleOnPaste\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send\",\n        type: \"button\",\n        onClick: handleSendMsg,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), \"// loading\", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loadingMask\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"loadingImg\",\n        src: process.env.PUBLIC_URL + '/loader.gif'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Chat, \"TI0s2ft3H7RsAjOHGdG8GH7LANk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/MyDocuments/workspaces/atom_workspace/sesh-chatchat/src/pages/Chat.js"],"names":["React","useState","useHistory","useEffect","useRef","useCallback","useLocation","logout","authService","database","database_ref","storage","storage_ref","upload_byte","down_url","sendChat","sendChatTime","getChats","getAddedChats","offRef","getCommonInfo","setCommonInfo","useNotification","useQuery","search","query","useMemo","URLSearchParams","Chat","storageUrl","isMount","startAdd","chatTemp","msg","setMsg","chats","setChats","chatList","setChatList","themeInfo","setThemeInfo","theme","themeTxt","src","setSrc","imgFile","setImgFile","setChatUI","dbChatList","isInitEnd","isClean","$","empty","list","forEach","chat","message","getThemeData","uid","currentUser","email","toDate","timestamp","includes","setFileUrl","split","map","line","append","push","console","log","focused","document","hasFocus","notify","setTimeout","scrollToBottom","chatWrap","querySelector","getAttribute","length","res","body","roomName","checkImgCnt","checkImgRstCnt","fileName","LoadingWithMask","id","storageRef","getToday","then","url","xhr","XMLHttpRequest","responseType","onload","event","blob","response","open","send","getElementById","closeLoadingWithMask","catch","error","date","Date","today","getFullYear","getMonth","slice","getDate","sendMsg","e","self","now","Math","floor","random","snapshot","trim","escFunction","keyCode","style","display","themeInfoTmp","addEventListener","removeEventListener","handleSendMsg","handleLogOut","handleOnChange","target","value","handleKeyPress","key","shiftKey","handleTheme","modeBtn","themeData","removeAttribute","setAttribute","innerText","handleOnPaste","items","clipboardData","originalEvent","i","type","indexOf","getAsFile","reader","FileReader","result","readAsDataURL","file","File","get","messageRef","current","scrollIntoView","behavior","block","itemId","createItem","text","Intl","DateTimeFormat","hour","minute","second","hour12","format","process","env","PUBLIC_URL"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,MAAjD,EAAyDC,WAAzD,QAA4E,OAA5E;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,YAAhC,EAA8CC,OAA9C,EAAuDC,WAAvD,EAAoEC,WAApE,EAAiFC,QAAjF,QAAiG,sBAAjG;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,QAAjC,EAA2CC,aAA3C,EAA0DC,MAA1D,EAAkEC,aAAlE,EAAiFC,aAAjF,QAAsG,qBAAtG;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAO,aAAP;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAalB,WAAW,EAA9B;AACA,QAAMmB,KAAK,GAAGzB,KAAK,CAAC0B,OAAN,CAAc,MAAM,IAAIC,eAAJ,CAAoBH,MAApB,CAApB,EAAiD,CAACA,MAAD,CAAjD,CAAd;AACA,SAAOC,KAAP;AACD;;GAJQF,Q;UACYjB,W;;;AAKrB,SAASsB,IAAT,GAAgB;AAAA;;AAAA;;AAEd,MAAIC,UAAU,GAAG,iCAAjB;AACA,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjC,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACkC,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsC,SAAD,EAAYC,YAAZ,IAA4BvC,QAAQ,CAAC;AAACwC,IAAAA,KAAK,EAAC,EAAP;AAAWC,IAAAA,QAAQ,EAAC;AAApB,GAAD,CAA1C;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgB3C,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAC4C,OAAD,EAAUC,UAAV,IAAwB7C,QAAQ,EAAtC;;AAEA,QAAM8C,SAAS,GAAG,CAACC,UAAD,EAAaC,SAAb,EAAwBC,OAAxB,KAAoC;AAEpD,QAAGA,OAAH,EAAY;AACVC,MAAAA,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb;AACD;;AAED,QAAIC,IAAI,GAAG,EAAX;AACAL,IAAAA,UAAU,CAACM,OAAX,CAAoBC,IAAD,IAAU;AAC3B,UAAIC,OAAO,GAAID,IAAI,CAACC,OAAL,GAAa,EAA5B;;AACA,UAAGC,YAAY,GAAGhB,KAAf,IAAwB,MAAxB,IAAkCF,SAAS,CAACE,KAAV,IAAmB,MAAxD,EAAgE;AAE9DY,QAAAA,IAAI,GAAG,MAAP;AACAA,QAAAA,IAAI,IAAIE,IAAI,CAACG,GAAL,KAAalD,WAAW,CAACmD,WAAZ,CAAwBD,GAArC,GAA2C,QAA3C,GAAsD,OAA9D;AACAL,QAAAA,IAAI,IAAI,4CAA0CE,IAAI,CAACK,KAA/C,GAAqD,eAA7D;AACAP,QAAAA,IAAI,IAAI,+BAA6BQ,MAAM,CAACN,IAAI,CAACO,SAAN,CAAnC,GAAoD,iBAA5D;AACAT,QAAAA,IAAI,IAAI,yBAAR;;AAEA,YAAGG,OAAO,CAACO,QAAR,CAAiB,kBAAjB,CAAH,EAAyC;AACvCC,UAAAA,UAAU,CAACR,OAAO,CAACS,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAAV;AACAZ,UAAAA,IAAI,IAAI,qBAAmBE,IAAI,CAACC,OAAL,CAAaS,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAnB,GAA8C,aAAtD;AACD,SAHD,MAGM;AACJT,UAAAA,OAAO,CAACS,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAyBC,IAAI,IAAI;AAC/Bd,YAAAA,IAAI,IAAI,WAASc,IAAT,GAAc,cAAtB;AACD,WAFD;AAGD;;AACDd,QAAAA,IAAI,IAAI,aAAR;AAED,OAlBD,MAkBM;AAEJA,QAAAA,IAAI,GAAG,MAAP;AACAA,QAAAA,IAAI,IAAIE,IAAI,CAACG,GAAL,KAAalD,WAAW,CAACmD,WAAZ,CAAwBD,GAArC,GAA2C,gBAA3C,GAA8D,eAAtE;AACAL,QAAAA,IAAI,IAAI,+BAA6BQ,MAAM,CAACN,IAAI,CAACO,SAAN,CAAnC,GAAoD,eAA5D;AACAT,QAAAA,IAAI,IAAI,iCAA+BE,IAAI,CAACK,KAApC,GAA0C,eAAlD;AACAP,QAAAA,IAAI,IAAI,yBAAR;;AAEA,YAAGG,OAAO,CAACO,QAAR,CAAiB,kBAAjB,CAAH,EAAyC;AACvCC,UAAAA,UAAU,CAACR,OAAO,CAACS,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAAV;AACAZ,UAAAA,IAAI,IAAI,qBAAmBE,IAAI,CAACC,OAAL,CAAaS,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAnB,GAA8C,aAAtD;AACD,SAHD,MAGM;AACJT,UAAAA,OAAO,CAACS,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAyBC,IAAI,IAAI;AAC/Bd,YAAAA,IAAI,IAAI,WAASc,IAAT,GAAc,cAAtB;AACD,WAFD;AAGD;;AAEDd,QAAAA,IAAI,IAAI,aAAR;AAED;;AAEDF,MAAAA,CAAC,CAAC,SAAD,CAAD,CAAaiB,MAAb,CAAoBf,IAApB;AACArB,MAAAA,QAAQ,CAACqC,IAAT,CAAcd,IAAd;AACD,KA3CD;AA6CAe,IAAAA,OAAO,CAACC,GAAR,CAAYvC,QAAZ;AACAM,IAAAA,WAAW,CAACN,QAAD,CAAX;AAEA,UAAMwC,OAAO,GAAGC,QAAQ,CAACC,QAAT,EAAhB;;AACA,QAAG,CAACF,OAAD,IAAYzC,QAAZ,IAAwBD,OAA3B,EAAoC;AAClC6C,MAAAA,MAAM,CAACtC,QAAD,CAAN;AACD;;AACD,QAAGY,SAAH,EAAclB,QAAQ,GAAG,IAAX;AAEdD,IAAAA,OAAO,IAAI8C,UAAU,CAAC,MAAI;AAAEC,MAAAA,cAAc;AAAI,KAAzB,EAA2B,GAA3B,CAArB;AACD,GA9DD;;AAgEA,QAAMpB,YAAY,GAAG,MAAM;AACzB,QAAG3B,OAAH,EAAY;AACV,YAAMgD,QAAQ,GAAGL,QAAQ,CAACM,aAAT,CAAuB,YAAvB,CAAjB;AACA,YAAMtC,KAAK,GAAGqC,QAAQ,CAACE,YAAT,CAAsB,YAAtB,CAAd;AACA,aAAO;AAAC,oBAAYF,QAAb;AAAuB,iBAASrC;AAAhC,OAAP;AACD;AACF,GAND;;AAQA,QAAMkC,MAAM,GAAItC,QAAD,IAAc;AAAA;;AAC3B,QAAGA,QAAQ,CAAC4C,MAAT,GAAkB,CAArB,EAAwB;AACtB,YAAM1B,IAAI,GAAGlB,QAAQ,CAACA,QAAQ,CAAC4C,MAAT,GAAgB,CAAjB,CAArB;;AACA,UAAG1B,IAAI,CAACG,GAAL,KAAalD,WAAW,CAACmD,WAAZ,CAAwBD,GAAxC,EAA6C;AAC3CY,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,cAAMW,GAAG,GAAG5D,eAAe,CAAC,MAAD,EAAS;AAClC6D,UAAAA,IAAI,EAAE,WAASC,QAAT,GAAkB;AADU,SAAT,CAA3B;AAGAd,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ,EAL2C,CAM3C;AACA;AACA;AACD;AACF;AACF,GAdD;;AArFc,MAqFRP,MArFQ;AAAA,YA0FIrD,eA1FJ;AAAA;;AAqGd,MAAI+D,WAAW,GAAG,CAAlB;AACA,MAAIC,cAAc,GAAG,CAArB;;AACA,QAAMtB,UAAU,GAAIuB,QAAD,IAAc;AAC/BF,IAAAA,WAAW,GAAGA,WAAW,GAAG,CAA5B;AACAG,IAAAA,eAAe;AACf,UAAMC,EAAE,GAAG,YAAUF,QAArB;AACA,UAAMG,UAAU,GAAG5E,QAAQ,CAACF,WAAW,CAACD,OAAD,EAAUgF,QAAQ,KAAG,GAAX,GAAeP,QAAf,GAAwB,UAAxB,GAAmCG,QAA7C,CAAZ,CAAR,CAChBK,IADgB,CACVC,GAAD,IAAS;AACX,YAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,YAAJ,GAAmB,MAAnB;;AACAF,MAAAA,GAAG,CAACG,MAAJ,GAAcC,KAAD,IAAW;AACtB,cAAMC,IAAI,GAAGL,GAAG,CAACM,QAAjB;AACD,OAFD;;AAGAN,MAAAA,GAAG,CAACO,IAAJ,CAAS,KAAT,EAAgBR,GAAhB;AACAC,MAAAA,GAAG,CAACQ,IAAJ;AACA7B,MAAAA,QAAQ,CAAC8B,cAAT,CAAwBd,EAAxB,EAA4B9C,GAA5B,GAAkCkD,GAAlC;AAEAP,MAAAA,cAAc,GAAGA,cAAc,GAAG,CAAlC;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYc,WAAW,IAAIC,cAA3B;;AACA,UAAGD,WAAW,IAAIC,cAAlB,EAAkC;AAChCV,QAAAA,UAAU,CAAC4B,oBAAD,EAAuB,IAAvB,CAAV;AACD;AAEF,KAjBc,EAkBdC,KAlBc,CAkBPC,KAAD,IAAW,CACjB,CAnBc,CAAnB;AAoBD,GAxBD;;AA0BA,QAAMf,QAAQ,GAAG,MAAM;AACrB,UAAMgB,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,WAAL,KAAmB,EAAnB,GAAsB,CAAC,OAAOH,IAAI,CAACI,QAAL,KAAkB,CAAzB,CAAD,EAA8BC,KAA9B,CAAoC,CAAC,CAArC,CAAtB,GAA8D,EAA9D,GAAiE,CAAC,MAAML,IAAI,CAACM,OAAL,EAAP,EAAuBD,KAAvB,CAA6B,CAAC,CAA9B,CAA/E;AACA,WAAOH,KAAP;AACD,GAJD;;AAMA,QAAMK,OAAO,GAAG,OAAOC,CAAP,EAAUlF,GAAV,KAAkB;AAChC,QAAGU,GAAG,IAAI,EAAP,IAAa,CAACA,GAAG,CAACoB,QAAJ,CAAa,MAAb,CAAjB,EAAuC;AACrC,UAAI;AACFO,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAiB,QAAAA,eAAe;AACf,cAAM4B,IAAI,GAAG,IAAb;AACA,cAAM7B,QAAQ,GAAGqB,IAAI,CAACS,GAAL,KAAW,GAAX,GAAeC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAf,GAA+C,MAAhE;AACA,cAAM9B,UAAU,GAAG9E,WAAW,CAACD,OAAD,EAAUgF,QAAQ,KAAG,GAAX,GAAeP,QAAf,GAAwB,UAAxB,GAAmCG,QAA7C,CAA9B;AACA1E,QAAAA,WAAW,CAAC6E,UAAD,EAAa7C,OAAb,CAAX,CACG+C,IADH,CAEK6B,QAAD,IAAc;AACZ7E,UAAAA,MAAM,CAAC,UAAQ2C,QAAT,CAAN;AACD,SAJL,EAKKmB,KAAD,IAAW;AACTpC,UAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAZ;AACD,SAPL;AASD,OAfD,CAeE,OAAOA,KAAP,EAAc;AACdpC,QAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAZ;AACD;AACF;;AAED,QAAGzE,GAAG,CAACyF,IAAJ,OAAe,EAAlB,EAAsB;AACpB,UAAI;AACFpD,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,cAAMxD,QAAQ,CAACqE,QAAD,EACd;AACE1B,UAAAA,GAAG,EAAElD,WAAW,CAACmD,WAAZ,CAAwBD,GAD/B;AAEEE,UAAAA,KAAK,EAAEpD,WAAW,CAACmD,WAAZ,CAAwBC,KAFjC;AAGEJ,UAAAA,OAAO,EAAEvB,GAHX;AAIE6B,UAAAA,SAAS,EAAE8C,IAAI,CAACS,GAAL;AAJb,SADc,CAAR,CAMHzB,IANG,CAME,MAAM;AACZ1D,UAAAA,MAAM,CAAC,EAAD,CAAN;AACD,SARK,CAAN;AAUAlB,QAAAA,YAAY,CAACoE,QAAD,EAAW5E,WAAW,CAACmD,WAAZ,CAAwBD,GAAnC,CAAZ;;AACA,YAAGzB,GAAG,CAAC8B,QAAJ,CAAa,mBAAb,CAAH,EAAsC;AACpCyC,UAAAA,oBAAoB;AACrB;AAEF,OAjBD,CAiBE,OAAOE,KAAP,EAAc;AACdpC,QAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAZ;AACD;AACF;AACF,GA5CD;;AA8CA,QAAMiB,WAAW,GAAGtH,WAAW,CAAE6F,KAAD,IAAW;AACzC,QAAGA,KAAK,CAAC0B,OAAN,KAAkB,EAArB,EAAyB;AACvBhF,MAAAA,MAAM,CAAC,EAAD,CAAN;AACA6B,MAAAA,QAAQ,CAAC8B,cAAT,CAAwB,aAAxB,EAAuCsB,KAAvC,CAA6CC,OAA7C,GAAuD,MAAvD;AACD;AACF,GAL8B,EAK5B,EAL4B,CAA/B,CArLc,CA6LhB;;AACE3H,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAM4H,YAAY,GAAG3G,aAAa,CAAC,WAAD,CAAlC;AACAoB,IAAAA,YAAY,CAAC;AAACC,MAAAA,KAAK,EAACsF,YAAY,CAACtF,KAApB;AAA2BC,MAAAA,QAAQ,EAACqF,YAAY,CAACrF;AAAjD,KAAD,CAAZ;AACAxB,IAAAA,aAAa,CAACkE,QAAD,EAAWrC,SAAX,CAAb;AACA0B,IAAAA,QAAQ,CAACuD,gBAAT,CAA0B,SAA1B,EAAqCL,WAArC,EAAkD,KAAlD;AAEA,WAAM,MAAM;AACV7F,MAAAA,OAAO,GAAG,KAAV;AACA2C,MAAAA,QAAQ,CAACwD,mBAAT,CAA6B,SAA7B,EAAwCN,WAAxC,EAAqD,KAArD;AACD,KAHD;AAID,GAXQ,EAWN,EAXM,CAAT;AAaAxH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGwC,GAAG,CAACoB,QAAJ,CAAa,MAAb,CAAH,EAAyB;AACvBnB,MAAAA,MAAM,CAAC,EAAD,CAAN;AACA6B,MAAAA,QAAQ,CAAC8B,cAAT,CAAwB,aAAxB,EAAuCsB,KAAvC,CAA6CC,OAA7C,GAAuD,MAAvD;AAEA,YAAMvC,QAAQ,GAAG5C,GAAG,CAACsB,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAjB;AACAiD,MAAAA,OAAO,CAAC,IAAD,EAAO,sBAAoB3B,QAA3B,CAAP,CALuB,CAOvB;AACD;AACF,GAVQ,EAUN,CAAC5C,GAAD,CAVM,CAAT,CA3Mc,CAuNd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;;AACE,QAAMuF,aAAa,GAAG,MAAOf,CAAP,IAAa;AACjCD,IAAAA,OAAO,CAACC,CAAD,EAAIlF,GAAJ,CAAP;AACD,GAFD;;AAIA,QAAMkG,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAM5H,MAAM,EAAZ;AACD,KAFD,CAEE,OAAOmG,KAAP,EAAc;AACfpC,MAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAZ;AACA;AACF,GAND;;AAQA,QAAM0B,cAAc,GAAIjB,CAAD,IAAO;AAC5BjF,IAAAA,MAAM,CAACiF,CAAC,CAACkB,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAKA,QAAMC,cAAc,GAAG,MAAMpB,CAAN,IAAY;AACjC,QAAGA,CAAC,CAACqB,GAAF,IAAS,OAAZ,EAAqB;AACnB,UAAG,CAACrB,CAAC,CAACsB,QAAN,EAAgB;AACdvB,QAAAA,OAAO,CAACC,CAAD,EAAIlF,GAAJ,CAAP;AACD;AACF;AACF,GAND;;AASA,QAAMyG,WAAW,GAAIvB,CAAD,IAAO;AACzB,UAAMwB,OAAO,GAAGlE,QAAQ,CAAC8B,cAAT,CAAwB,SAAxB,CAAhB;AACA,UAAMqC,SAAS,GAAGnF,YAAY,EAA9B;AACA,UAAMqB,QAAQ,GAAG8D,SAAS,CAAC9D,QAA3B;AACA,UAAMrC,KAAK,GAAGmG,SAAS,CAACnG,KAAxB;;AACA,QAAGA,KAAK,IAAI,OAAZ,EAAqB;AACnBqC,MAAAA,QAAQ,CAAC+D,eAAT,CAAyB,YAAzB,EAAuC,OAAvC;AACA/D,MAAAA,QAAQ,CAACgE,YAAT,CAAsB,YAAtB,EAAoC,MAApC;AACAH,MAAAA,OAAO,CAACI,SAAR,GAAoB,OAApB;AACA1H,MAAAA,aAAa,CAAC,WAAD,EAAc;AAACoB,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,QAAQ,EAAC;AAAxB,OAAd,CAAb;AACD,KALD,MAKM;AACJoC,MAAAA,QAAQ,CAAC+D,eAAT,CAAyB,YAAzB,EAAuC,MAAvC;AACA/D,MAAAA,QAAQ,CAACgE,YAAT,CAAsB,YAAtB,EAAoC,OAApC;AACAH,MAAAA,OAAO,CAACI,SAAR,GAAoB,MAApB;AACA1H,MAAAA,aAAa,CAAC,WAAD,EAAc;AAACoB,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,QAAQ,EAAC;AAAzB,OAAd,CAAb;AACD;;AACDK,IAAAA,SAAS,CAACV,QAAD,EAAW,KAAX,EAAkB,IAAlB,CAAT;AACD,GAjBD;;AAmBA,QAAM2G,aAAa,GAAI7B,CAAD,IAAO;AAC3B,UAAM8B,KAAK,GAAG,CAAC/C,KAAK,CAACgD,aAAN,IAAuBhD,KAAK,CAACiD,aAAN,CAAoBD,aAA5C,EAA2DD,KAAzE;AAEA,QAAI9C,IAAI,GAAG,IAAX;;AACA,SAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAAChE,MAA1B,EAAkCmE,CAAC,EAAnC,EAAuC;AACrC,UAAIH,KAAK,CAACG,CAAD,CAAL,CAASC,IAAT,CAAcC,OAAd,CAAsB,OAAtB,MAAmC,CAAvC,EAA0C;AACxCnD,QAAAA,IAAI,GAAG8C,KAAK,CAACG,CAAD,CAAL,CAASG,SAAT,EAAP;AACD;AACF;;AAED,QAAIpD,IAAI,KAAK,IAAb,EAAmB;AACjB,YAAMqD,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACvD,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC/BtD,QAAAA,MAAM,CAACsD,KAAK,CAACmC,MAAN,CAAaqB,MAAd,CAAN;AACAjF,QAAAA,QAAQ,CAAC8B,cAAT,CAAwB,aAAxB,EAAuCsB,KAAvC,CAA6CC,OAA7C,GAAuD,OAAvD;AACD,OAHD;;AAIA0B,MAAAA,MAAM,CAACG,aAAP,CAAqBxD,IAArB;AAEA,UAAIyD,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC1D,IAAD,CAAT,EAAiBS,IAAI,CAACS,GAAL,KAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAA5B,CAAX;AACA1E,MAAAA,UAAU,CAAC8G,IAAD,CAAV;AACD;AACF,GArBD,CAtRc,CA8ShB;;;AACE,MAAInI,KAAK,GAAGF,QAAQ,EAApB;AACA,QAAM6D,QAAQ,GAAG3D,KAAK,CAACqI,GAAN,CAAU,MAAV,CAAjB;AAEA,QAAMC,UAAU,GAAG3J,MAAM,EAAzB;;AACA,QAAMyE,cAAc,GAAG,MAAM;AAC3BkF,IAAAA,UAAU,CAACC,OAAX,CAAmBC,cAAnB,CAAkC;AAAEC,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAlC;AACD,GAFD;;AAIA,MAAIC,MAAM,GAAG,CAAb;;AACA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,WAAQF,MAAM,EAAP,GAAaE,IAApB;AACD,GAFD;;AAIA,QAAMzG,MAAM,GAAIC,SAAD,IAAe;AAC5B;AACA,QAAI6C,IAAI,GAAG,IAAI4D,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAGC,MAAAA,IAAI,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAE,SAA5B;AAAuCC,MAAAA,MAAM,EAAE,SAA/C;AAA0DC,MAAAA,MAAM,EAAE;AAAlE,KAAjC,EAA4GC,MAA5G,CAAmH/G,SAAnH,CAAX;AACA,WAAO6C,IAAP;AACD,GAJD;;AAMA,QAAMnB,eAAe,GAAG,MAAM;AAC5Bf,IAAAA,QAAQ,CAAC8B,cAAT,CAAwB,aAAxB,EAAuCsB,KAAvC,CAA6CC,OAA7C,GAAuD,OAAvD;AACArD,IAAAA,QAAQ,CAAC8B,cAAT,CAAwB,YAAxB,EAAsCsB,KAAtC,CAA4CC,OAA5C,GAAsD,OAAtD;AACD,GAHD;;AAKA,QAAMtB,oBAAoB,GAAG,MAAM;AACjC/B,IAAAA,QAAQ,CAAC8B,cAAT,CAAwB,aAAxB,EAAuCsB,KAAvC,CAA6CC,OAA7C,GAAuD,MAAvD;AACArD,IAAAA,QAAQ,CAAC8B,cAAT,CAAwB,YAAxB,EAAsCsB,KAAtC,CAA4CC,OAA5C,GAAsD,MAAtD;AACD,GAHD,CAvUc,CA4UhB;;;AAGE,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,kBAAYvF,SAAS,CAACE,KAAjD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,EAAE,EAAC,SAHL;AAIE,QAAA,KAAK,EAAC,EAJR;AAKE,QAAA,OAAO,EAAEiG,WALX;AAAA,kBAMGnG,SAAS,CAACG;AANb;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwB0C;AAAxB;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE+C,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAE4B;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,EAAE,EAAC,aAAR;AACK,QAAA,SAAS,EAAC,aADf;AAEK,QAAA,GAAG,EAAEpH;AAFV;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAyBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,UAAU,EAAE4F,cAAvC;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAEtG,GAFT;AAGE,QAAA,WAAW,EAAC,eAHd;AAIE,QAAA,QAAQ,EAAEmG,cAJZ;AAKE,QAAA,OAAO,EAAEY;AALX;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAEd,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,6BA2CE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAqB,QAAA,GAAG,EAAE4C,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAuB;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAoDD;;IAnYQpJ,I;UA+SKL,Q;;;KA/SLK,I;AAqYT,eAAeA,IAAf","sourcesContent":["import React, { useState, useHistory, useEffect, useRef, useCallback } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { authService, database, database_ref, storage, storage_ref, upload_byte, down_url } from \"../services/firebase\";\r\nimport { sendChat, sendChatTime, getChats, getAddedChats, offRef, getCommonInfo, setCommonInfo } from \"../helpers/database\";\r\nimport { useNotification } from \"../helpers/useNotification\";\r\nimport \"../chat.css\";\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n  const query = React.useMemo(() => new URLSearchParams(search), [search]);\r\n  return query;\r\n}\r\n\r\nfunction Chat() {\r\n\r\n  let storageUrl = \"gs://sesh-chatchat.appspot.com/\";\r\n  let isMount = true;\r\n  let startAdd = false;\r\n  let chatTemp = [];\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chats, setChats] = useState(\"\");\r\n  const [chatList, setChatList] = useState(\"\");\r\n  const [themeInfo, setThemeInfo] = useState({theme:\"\", themeTxt:\"\"});\r\n  const [src, setSrc] = useState(\"\");\r\n  const [imgFile, setImgFile] = useState();\r\n\r\n  const setChatUI = (dbChatList, isInitEnd, isClean) => {\r\n\r\n    if(isClean) {\r\n      $(\"#chatUL\").empty();\r\n    }\r\n\r\n    var list = \"\";\r\n    dbChatList.forEach((chat) => {\r\n      var message = (chat.message+\"\");\r\n      if(getThemeData().theme == \"dark\" || themeInfo.theme == \"dark\") {\r\n\r\n        list = '<li '\r\n        list += chat.uid === authService.currentUser.uid ? 'right>' : 'left>';\r\n        list += '<div class = \"sender\"><span>C:\\\\Users\\\\'+chat.email+'</span></div>';\r\n        list += '<div class = \"time\"><span>'+toDate(chat.timestamp)+' ></span></div>';\r\n        list += '<div class = \"message\">';\r\n\r\n        if(message.includes(\"image_send_check\")) {\r\n          setFileUrl(message.split(\":\")[1]);\r\n          list += '<img id=\"img_id_'+chat.message.split(\":\")[1]+'\" src=\"\" />';\r\n        }else {\r\n          message.split(\"\\n\").map( line => {\r\n            list += '<span>'+line+'<br/></span>';\r\n          });\r\n        }\r\n        list += '</div></li>';\r\n\r\n      }else {\r\n\r\n        list = '<li '\r\n        list += chat.uid === authService.currentUser.uid ? 'class=\"right\">' : 'class=\"left\">';\r\n        list += '<div class = \"time\"><span>'+toDate(chat.timestamp)+'</span></div>';\r\n        list += '<div class = \"sender\"><span>'+chat.email+'</span></div>';\r\n        list += '<div class = \"message\">';\r\n\r\n        if(message.includes(\"image_send_check\")) {\r\n          setFileUrl(message.split(\":\")[1]);\r\n          list += '<img id=\"img_id_'+chat.message.split(\":\")[1]+'\" src=\"\" />';\r\n        }else {\r\n          message.split(\"\\n\").map( line => {\r\n            list += '<span>'+line+'<br/></span>';\r\n          });\r\n        }\r\n\r\n        list += '</div></li>';\r\n\r\n      }\r\n\r\n      $(\"#chatUL\").append(list);\r\n      chatTemp.push(chat);\r\n    })\r\n\r\n    console.log(chatTemp);\r\n    setChatList(chatTemp);\r\n\r\n    const focused = document.hasFocus();\r\n    if(!focused && startAdd && isMount) {\r\n      notify(chatList);\r\n    }\r\n    if(isInitEnd) startAdd = true;\r\n\r\n    isMount && setTimeout(()=>{ scrollToBottom() }, 200);\r\n  };\r\n\r\n  const getThemeData = () => {\r\n    if(isMount) {\r\n      const chatWrap = document.querySelector(\".chat_wrap\")\r\n      const theme = chatWrap.getAttribute(\"data-theme\");\r\n      return {'chatWrap': chatWrap, 'theme': theme};\r\n    }\r\n  };\r\n\r\n  const notify = (chatList) => {\r\n    if(chatList.length > 0) {\r\n      const chat = chatList[chatList.length-1];\r\n      if(chat.uid !== authService.currentUser.uid) {\r\n        console.log(\"NOTI > from chat\")\r\n        const res = useNotification('SESH', {\r\n          body: \"from '\"+roomName+\"'\"\r\n        });\r\n        console.log(res);\r\n        // useNotification(chat.email, {\r\n        //   body: `${chat.message}`\r\n        // });\r\n      }\r\n    }\r\n  }\r\n\r\n  var checkImgCnt = 0;\r\n  var checkImgRstCnt = 0;\r\n  const setFileUrl = (fileName) => {\r\n    checkImgCnt = checkImgCnt + 1;\r\n    LoadingWithMask();\r\n    const id = \"img_id_\"+fileName;\r\n    const storageRef = down_url(storage_ref(storage, getToday()+\"/\"+roomName+\"/images/\"+fileName))\r\n      .then((url) => {\r\n          const xhr = new XMLHttpRequest();\r\n          xhr.responseType = 'blob';\r\n          xhr.onload = (event) => {\r\n            const blob = xhr.response;\r\n          };\r\n          xhr.open('GET', url);\r\n          xhr.send();\r\n          document.getElementById(id).src = url;\r\n\r\n          checkImgRstCnt = checkImgRstCnt + 1;\r\n          console.log(checkImgCnt == checkImgRstCnt)\r\n          if(checkImgCnt == checkImgRstCnt) {\r\n            setTimeout(closeLoadingWithMask, 1000);\r\n          }\r\n\r\n        })\r\n        .catch((error) => {\r\n        });\r\n  }\r\n\r\n  const getToday = () => {\r\n    const date = new Date();\r\n    const today = date.getFullYear()+\"\"+(\"0\" + (date.getMonth() + 1)).slice(-2)+\"\"+(\"0\" + date.getDate()).slice(-2);\r\n    return today;\r\n  }\r\n\r\n  const sendMsg = async (e, msg) => {\r\n    if(src != \"\" && !src.includes(\"DONE\")) {\r\n      try {\r\n        console.log(\"sendIMG!!!\");\r\n        LoadingWithMask();\r\n        const self = this;\r\n        const fileName = Date.now()+\"_\"+Math.floor(Math.random() * 100)+\".png\";\r\n        const storageRef = storage_ref(storage, getToday()+\"/\"+roomName+\"/images/\"+fileName);\r\n        upload_byte(storageRef, imgFile)\r\n          .then(\r\n            (snapshot) => {\r\n              setSrc(\"DONE-\"+fileName);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    if(msg.trim() !== \"\") {\r\n      try {\r\n        console.log(\"sendMSG!!!\");\r\n        await sendChat(roomName,\r\n        {\r\n          uid: authService.currentUser.uid,\r\n          email: authService.currentUser.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }).then(() => {\r\n          setMsg(\"\");\r\n        });\r\n\r\n        sendChatTime(roomName, authService.currentUser.uid);\r\n        if(msg.includes(\"image_send_check:\")) {\r\n          closeLoadingWithMask();\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  const escFunction = useCallback((event) => {\r\n    if(event.keyCode === 27) {\r\n      setSrc(\"\");\r\n      document.getElementById(\"input-image\").style.display = \"none\";\r\n    }\r\n  }, []);\r\n\r\n\r\n// USE EFFECT  ---------------------------------------\r\n  useEffect(() => {\r\n\r\n    const themeInfoTmp = getCommonInfo(\"themeInfo\");\r\n    setThemeInfo({theme:themeInfoTmp.theme, themeTxt:themeInfoTmp.themeTxt});\r\n    getAddedChats(roomName, setChatUI);\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n\r\n    return() => {\r\n      isMount = false;\r\n      document.removeEventListener(\"keydown\", escFunction, false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(src.includes(\"DONE\")) {\r\n      setSrc(\"\");\r\n      document.getElementById(\"input-image\").style.display = \"none\";\r\n\r\n      const fileName = src.split(\"-\")[1];\r\n      sendMsg(null, \"image_send_check:\"+fileName);\r\n\r\n      // closeLoadingWithMask();\r\n    }\r\n  }, [src]);\r\n\r\n  // useEffect(() => {\r\n  //   // 이미지 전송 체크 msg 전송\r\n  //   sendChat(roomName,\r\n  //   {\r\n  //     uid: authService.currentUser.uid,\r\n  //     email: authService.currentUser.email,\r\n  //     message: \"image_send_check:\"+fileName,\r\n  //     timestamp: Date.now()\r\n  //   }).then(() => {\r\n  //   });\r\n  //\r\n  //   sendChatTime(roomName, authService.currentUser.uid);\r\n  //\r\n  //   return() => {\r\n  //   }\r\n  // }, [uploadState]);\r\n\r\n// HANDLE  -------------------------------------------\r\n  const handleSendMsg = async (e) => {\r\n    sendMsg(e, msg);\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n\r\n  const handleKeyPress = async(e) => {\r\n    if(e.key == 'Enter') {\r\n      if(!e.shiftKey) {\r\n        sendMsg(e, msg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const handleTheme = (e) => {\r\n    const modeBtn = document.getElementById(\"modeBtn\");\r\n    const themeData = getThemeData();\r\n    const chatWrap = themeData.chatWrap;\r\n    const theme = themeData.theme;\r\n    if(theme == \"light\") {\r\n      chatWrap.removeAttribute(\"data-theme\", \"light\")\r\n      chatWrap.setAttribute(\"data-theme\", \"dark\")\r\n      modeBtn.innerText = \"LIGHT\"\r\n      setCommonInfo(\"themeInfo\", {theme:\"dark\", themeTxt:\"LIGHT\"})\r\n    }else {\r\n      chatWrap.removeAttribute(\"data-theme\", \"dark\")\r\n      chatWrap.setAttribute(\"data-theme\", \"light\")\r\n      modeBtn.innerText = \"DARK\"\r\n      setCommonInfo(\"themeInfo\", {theme:\"light\", themeTxt:\"DARK\"})\r\n    }\r\n    setChatUI(chatList, false, true);\r\n  }\r\n\r\n  const handleOnPaste = (e) => {\r\n    const items = (event.clipboardData || event.originalEvent.clipboardData).items;\r\n\r\n    let blob = null;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].type.indexOf(\"image\") === 0) {\r\n        blob = items[i].getAsFile();\r\n      }\r\n    }\r\n\r\n    if (blob !== null) {\r\n      const reader = new FileReader();\r\n      reader.onload = function (event) {\r\n        setSrc(event.target.result);\r\n        document.getElementById(\"input-image\").style.display = \"block\";\r\n      };\r\n      reader.readAsDataURL(blob);\r\n\r\n      var file = new File([blob], Date.now()+Math.floor(Math.random()*100));\r\n      setImgFile(file);\r\n    }\r\n  }\r\n\r\n\r\n// ETC ----------------------------------------------\r\n  let query = useQuery();\r\n  const roomName = query.get(\"room\");\r\n\r\n  const messageRef = useRef();\r\n  const scrollToBottom = () => {\r\n    messageRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' })\r\n  }\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const toDate = (timestamp) => {\r\n    //let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\r\n    let date = new Intl.DateTimeFormat('ko-KR', {  hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }).format(timestamp);\r\n    return date;\r\n  }\r\n\r\n  const LoadingWithMask = () => {    \r\n    document.getElementById(\"loadingMask\").style.display = \"block\";  \r\n    document.getElementById(\"loadingImg\").style.display = \"block\";\r\n  };\r\n\r\n  const closeLoadingWithMask = () => {    \r\n    document.getElementById('loadingMask').style.display = \"none\";\r\n    document.getElementById('loadingImg').style.display = \"none\";\r\n  };\r\n\r\n// --------------------------------------------------\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"chat_wrap\" data-theme={themeInfo.theme}>\r\n      <div className=\"header\">\r\n        <button\r\n          className=\"mode\"\r\n          type=\"button\"\r\n          id=\"modeBtn\"\r\n          value=\"\"\r\n          onClick={handleTheme}>\r\n          {themeInfo.themeTxt}\r\n        </button>\r\n        <div className=\"title\">{roomName}</div>\r\n        <button\r\n          className=\"logout\"\r\n          type=\"button\"\r\n          onClick={handleLogOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div id=\"chat\" className=\"chat\">\r\n        <ul id=\"chatUL\"></ul>\r\n        <div ref={messageRef} />\r\n        <img id=\"input-image\"\r\n             className=\"input-image\"\r\n             src={src} />\r\n      </div>\r\n      <div className=\"input-div\" onKeyPress={handleKeyPress}>\r\n        <textarea\r\n          className=\"input-msg\"\r\n          value={msg}\r\n          placeholder=\"Message Here.\"\r\n          onChange={handleOnChange}\r\n          onPaste={handleOnPaste}\r\n        >\r\n        </textarea>\r\n        <button\r\n          className=\"send\"\r\n          type=\"button\"\r\n          onClick={handleSendMsg}>\r\n          SEND\r\n        </button>\r\n      </div>\r\n\r\n      // loading\r\n      <div id=\"loadingMask\">\r\n        <img id=\"loadingImg\" src={process.env.PUBLIC_URL+'/loader.gif'} />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}