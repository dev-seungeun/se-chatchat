{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\atom_workspace\\\\SESH-chatchat\\\\src\\\\pages\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { logout } from \"../helpers/auth\";\nimport { authService, database, database_ref } from \"../services/firebase\";\nimport { sendChat, getChats, chatOnValue, chatOnChildAdded, chatOnChildChanged, chatOnChildRemoved } from \"../helpers/database\";\nimport \"../chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [msg, setMsg] = useState(\"\");\n  const [chats, setChats] = useState(\"\");\n  const scrollRef = useRef();\n\n  const scrollToBottom = () => {\n    scrollRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [chats]);\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  };\n\n  const toDate = timestamp => {\n    let date = new Intl.DateTimeFormat('ko-KR', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(timestamp);\n    return date;\n  };\n\n  const setBr = message => {\n    return message; // message.split('').map( line => {\n    //   return (<span>{line}<br/></span>)\n    // })\n  };\n\n  const getChatList = () => {\n    const chatList = getChats();\n\n    const myList = () => {\n      const list = chatList.map((chat, index) =>\n      /*#__PURE__*/\n      // <div style={{width:\"100%\"}} key={index} className={chat.uid === authService.currentUser.uid ? \"send\" : \"receive\"}>{chat.message}</div>\n      _jsxDEV(\"li\", {\n        className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: toDate(chat.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 66\n          }, this)\n        }, createItem(index + \"time\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sender\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: chat.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 70\n          }, this)\n        }, createItem(index + \"sender\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: setBr(chat.message)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 72\n          }, this)\n        }, createItem(index + \"message\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, createItem(index + \"li\"), true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    };\n\n    setChats(myList);\n  };\n\n  const handleOnChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const onKeyPress = async e => {\n    if (e.key == 'Enter') {\n      if (!e.shiftKey) {\n        if (msg.trim() !== \"\") {\n          e.preventDefault();\n\n          try {\n            await sendChat({\n              uid: authService.currentUser.uid,\n              email: authService.currentUser.email,\n              message: msg.replaceAll(/(\\n|\\r\\n)/g, \"<br>\"),\n              timestamp: Date.now()\n            }).then(() => {\n              setMsg(\"\");\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      }\n    }\n  };\n\n  const handleGoogleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      //chatOnChildChanged\n      const commentsRef = database_ref(database, 'chats/sesh');\n      chatOnChildAdded(commentsRef, data => {\n        getChatList();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_wrap chat-container\",\n    ref: scrollRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-top header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"SE-SH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        type: \"button\",\n        onClick: handleGoogleLogOut,\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat chat-middle\",\n      children: chats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      onKeyPress: onKeyPress,\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-msg\",\n        value: msg,\n        placeholder: \"Message Here.\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"4qUEm3SM+9cMZMAjSNX/0bzdmFI=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/workspaces/atom_workspace/SESH-chatchat/src/pages/Chat.js"],"names":["React","useState","useEffect","useRef","logout","authService","database","database_ref","sendChat","getChats","chatOnValue","chatOnChildAdded","chatOnChildChanged","chatOnChildRemoved","Chat","msg","setMsg","chats","setChats","scrollRef","scrollToBottom","current","scrollIntoView","behavior","block","itemId","createItem","text","toDate","timestamp","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","setBr","message","getChatList","chatList","myList","list","map","chat","index","uid","currentUser","email","handleOnChange","e","target","value","onKeyPress","key","shiftKey","trim","preventDefault","replaceAll","Date","now","then","error","console","log","handleGoogleLogOut","commentsRef","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { authService, database, database_ref } from \"../services/firebase\";\r\nimport { sendChat, getChats, chatOnValue, chatOnChildAdded, chatOnChildChanged, chatOnChildRemoved } from \"../helpers/database\";\r\nimport \"../chat.css\";\r\n\r\nfunction Chat() {\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chats, setChats] = useState(\"\");\r\n\r\n  const scrollRef = useRef();\r\n  const scrollToBottom = () => {\r\n    scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' })\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chats]);\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++)+text;\r\n  }\r\n\r\n  const toDate = (timestamp) => {\r\n    let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\r\n    return date;\r\n  }\r\n\r\n  const setBr = (message) => {\r\n    return message;\r\n    // message.split('').map( line => {\r\n    //   return (<span>{line}<br/></span>)\r\n    // })\r\n  }\r\n  const getChatList = () => {\r\n    const chatList = getChats();\r\n    const myList = () => {\r\n      const list = chatList.map((chat, index) => (\r\n        // <div style={{width:\"100%\"}} key={index} className={chat.uid === authService.currentUser.uid ? \"send\" : \"receive\"}>{chat.message}</div>\r\n        <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n          <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)}</span></div>\r\n          <div key={createItem(index+\"sender\")} className = \"sender\"><span>{chat.email}</span></div>\r\n\r\n          <div key={createItem(index+\"message\")} className = \"message\"><span>{setBr(chat.message)}</span></div>\r\n        </li>\r\n      ));\r\n      return <ul>{list}</ul>;\r\n    };\r\n    setChats(myList);\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n  \tsetMsg(e.target.value);\r\n  };\r\n\r\n  const onKeyPress = async(e) => {\r\n    if(e.key == 'Enter') {\r\n      if(!e.shiftKey) {\r\n        if(msg.trim() !== \"\") {\r\n          e.preventDefault();\r\n          try {\r\n            await sendChat({\r\n              uid: authService.currentUser.uid,\r\n              email: authService.currentUser.email,\r\n              message: msg.replaceAll(/(\\n|\\r\\n)/g, \"<br>\"),\r\n              timestamp: Date.now()\r\n            }).then(() => {\r\n              setMsg(\"\");\r\n            });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const handleGoogleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      //chatOnChildChanged\r\n      const commentsRef = database_ref(database, 'chats/sesh');\r\n      chatOnChildAdded(commentsRef, (data) => {\r\n        getChatList();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat_wrap chat-container\" ref={scrollRef}>\r\n      <div className=\"chat-top header\">\r\n        <div>SE-SH</div>\r\n        <button\r\n          className=\"logout\"\r\n          type=\"button\"\r\n          onClick={handleGoogleLogOut}>\r\n          로그아웃\r\n        </button>\r\n      </div>\r\n      <div className=\"chat chat-middle\">\r\n        {chats}\r\n      </div>\r\n        <div className=\"input-div\" onKeyPress={onKeyPress}>\r\n          <textarea\r\n            className=\"input-msg\"\r\n            value={msg}\r\n            placeholder=\"Message Here.\"\r\n            onChange={handleOnChange}>\r\n          </textarea>\r\n        </div>\r\n      <div className=\"chat-bottom\">\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}