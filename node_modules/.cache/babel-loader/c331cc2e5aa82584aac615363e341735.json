{"ast":null,"code":"import { database, database_set, database_ref, database_on_value } from \"../services/firebase\";\nimport { get, child, onValue, onChildAdded, onChildChanged, onChildRemoved, query, orderByKey, orderByChild, limitToLast, startAt } from \"firebase/database\";\nexport function getRooms(callback) {\n  const roomRef = database_ref(database, \"chats\");\n  onValue(roomRef, snapshot => {\n    callback(snapshot.val());\n  });\n}\nexport function sendChat(roomName, data) {\n  return database_set(database_ref(database, 'chats/' + roomName + \"/\" + data.timestamp), {\n    message: data.message,\n    timestamp: data.timestamp,\n    email: data.email,\n    uid: data.uid\n  });\n}\nexport function getChats(roomName, callback) {\n  console.log(\"database getChats()\");\n  let chatList = [];\n  const date = new Date();\n  const today = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0).getTime(); // console.log(today);\n\n  const chatRef = query(database_ref(database, 'chats/' + roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\n  const chatRef2 = database_ref(database); // const chatRef = database_ref(database, \"chats/\"+roomName);\n\n  get(child(chatRef2, 'chats/' + roomName), limitToLast(10)).then(snapshot => {\n    snapshot.forEach(row => {\n      chatList.push(row.val());\n    });\n  });\n  console.log(\"getChats\");\n  console.log(chatList);\n  callback(chatList);\n}\nexport function getAddedChats(roomName, callback) {\n  let chatList = [];\n  const chatRef = database_ref(database, 'chats/' + roomName);\n  onChildAdded(chatRef, snapshot => {\n    snapshot.forEach(row => {\n      chatList.push(row.val());\n    });\n    console.log(\"getAddedChats\");\n    console.log(chatList);\n  });\n  callback(chatList);\n}\nexport const chatOnValue = onValue;\nexport const chatOnChildAdded = onChildAdded;\nexport const chatOnChildChanged = onChildChanged;\nexport const chatOnChildRemoved = onChildRemoved;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/database.js"],"names":["database","database_set","database_ref","database_on_value","get","child","onValue","onChildAdded","onChildChanged","onChildRemoved","query","orderByKey","orderByChild","limitToLast","startAt","getRooms","callback","roomRef","snapshot","val","sendChat","roomName","data","timestamp","message","email","uid","getChats","console","log","chatList","date","Date","today","getFullYear","getMonth","getDate","getTime","chatRef","toString","chatRef2","then","forEach","row","push","getAddedChats","chatOnValue","chatOnChildAdded","chatOnChildChanged","chatOnChildRemoved"],"mappings":"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","sourcesContent":["import { database, database_set, database_ref, database_on_value } from \"../services/firebase\";\r\nimport { get, child, onValue, onChildAdded, onChildChanged, onChildRemoved, query, orderByKey, orderByChild, limitToLast, startAt } from \"firebase/database\";\r\n\r\nexport function getRooms(callback) {\r\n  const roomRef = database_ref(database, \"chats\");\r\n  onValue(roomRef, (snapshot) => {\r\n    callback(snapshot.val());\r\n  });\r\n}\r\n\r\nexport function sendChat(roomName, data) {\r\n  return database_set(database_ref(database, 'chats/'+roomName+\"/\"+data.timestamp), {\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    email: data.email,\r\n    uid: data.uid\r\n  });\r\n}\r\n\r\nexport function getChats(roomName, callback) {\r\n  console.log(\"database getChats()\")\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  // console.log(today);\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  // const chatRef = database_ref(database, \"chats/\"+roomName);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  });\r\n  console.log(\"getChats\")\r\n  console.log(chatList)\r\n  callback(chatList);\r\n}\r\n\r\nexport function getAddedChats(roomName, callback) {\r\n  let chatList = [];\r\n  const chatRef = database_ref(database, 'chats/'+roomName);\r\n  onChildAdded(chatRef, (snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n    console.log(\"getAddedChats\")\r\n    console.log(chatList)\r\n  });\r\n  callback(chatList);\r\n}\r\n\r\nexport const chatOnValue = onValue;\r\nexport const chatOnChildAdded = onChildAdded;\r\nexport const chatOnChildChanged = onChildChanged;\r\nexport const chatOnChildRemoved = onChildRemoved;\r\n"]},"metadata":{},"sourceType":"module"}