{"ast":null,"code":"const useNotification = (title, option) => {\n  if (!(\"Notification\" in window)) {\n    return;\n  }\n\n  if (Notification.permission !== \"granted\") {\n    try {\n      Notification.requestPermission().then(permission => {\n        if (permission !== 'granted') return;\n      });\n    } catch (error) {\n      if (error instanceof TypeError) {\n        Notification.requestPermission(permission => {\n          if (permission !== 'granted') return;\n        });\n      } else {\n        console.error(error);\n      }\n    }\n  } else {\n    var notification = new Notification(title, option);\n\n    notification.onclick = function (event) {\n      event.preventDefault(); // prevent the browser from focusing the Notification's tab\n\n      window.open(theLink, '_blank');\n    };\n  }\n};\n\nexport default useNotification;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/useNotification.js"],"names":["useNotification","title","option","window","Notification","permission","requestPermission","then","error","TypeError","console","notification","onclick","event","preventDefault","open","theLink"],"mappings":"AACA,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEzC,MAAI,EAAE,kBAAkBC,MAApB,CAAJ,EAAiC;AAC/B;AACD;;AAED,MAAIC,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,QAAI;AACFD,MAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,YAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,OAFD;AAGD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd,UAAIA,KAAK,YAAYC,SAArB,EAAgC;AAC9BL,QAAAA,YAAY,CAACE,iBAAb,CAAgCD,UAAD,IAAgB;AAC7C,cAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,SAFD;AAGD,OAJD,MAIO;AACLK,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF;AACF,GAdD,MAcM;AACJ,QAAIG,YAAY,GAAG,IAAIP,YAAJ,CAAiBH,KAAjB,EAAwBC,MAAxB,CAAnB;;AACAS,IAAAA,YAAY,CAACC,OAAb,GAAuB,UAASC,KAAT,EAAgB;AACrCA,MAAAA,KAAK,CAACC,cAAN,GADqC,CACb;;AACxBX,MAAAA,MAAM,CAACY,IAAP,CAAYC,OAAZ,EAAqB,QAArB;AACD,KAHD;AAID;AAEF,CA5BD;;AA8BA,eAAehB,eAAf","sourcesContent":["\r\nconst useNotification = (title, option) => {\r\n\r\n  if (!(\"Notification\" in window)) {\r\n    return;\r\n  }\r\n\r\n  if (Notification.permission !== \"granted\") {\r\n    try {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission !== 'granted') return;\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof TypeError) {\r\n        Notification.requestPermission((permission) => {\r\n          if (permission !== 'granted') return;\r\n        });\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }else {\r\n    var notification = new Notification(title, option);\r\n    notification.onclick = function(event) {\r\n      event.preventDefault(); // prevent the browser from focusing the Notification's tab\r\n      window.open(theLink, '_blank');\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default useNotification;\r\n"]},"metadata":{},"sourceType":"module"}