{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, useRef } from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { authService } from \"./services/firebase\";\nimport Chat from \"./pages/Chat\";\nimport Room from \"./pages/Room\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport useNotification from \"./helpers/useNotification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  authenticated: false,\n  loading: true\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_USER\":\n      return { ...state,\n        authenticated: action.result\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    authenticated\n  } = state;\n  var isServiceWorkerSupported = ('serviceWorker' in navigator);\n\n  if (isServiceWorkerSupported) {\n    navigator.serviceWorker.register(useNotification, {\n      scope: '/chat'\n    }).then(function (registration) {\n      console.log('[ServiceWorker] 등록 성공: ', registration.scope);\n    }).catch(function (err) {\n      console.log('[ServiceWorker] 등록 실패: ', err);\n    });\n  }\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        dispatch({\n          type: \"GET_USER\",\n          result: true\n        });\n      } else {\n        dispatch({\n          type: \"GET_USER\",\n          result: false\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          authenticated: authenticated,\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          authenticated: authenticated,\n          component: SignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          authenticated: authenticated,\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/chat\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          authenticated: authenticated,\n          component: Chat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/room\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          authenticated: authenticated,\n          component: Room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/App.js"],"names":["React","useReducer","useEffect","useRef","HashRouter","Routes","Route","authService","Chat","Room","SignUp","Login","PublicRoute","PrivateRoute","useNotification","initialState","authenticated","loading","reducer","state","action","type","result","App","dispatch","isServiceWorkerSupported","navigator","serviceWorker","register","scope","then","registration","console","log","catch","err","onAuthStateChanged","user"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useRef  } from 'react';\nimport { HashRouter, Routes, Route  } from 'react-router-dom';\nimport { authService } from \"./services/firebase\";\nimport Chat from \"./pages/Chat\";\nimport Room from \"./pages/Room\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport useNotification from \"./helpers/useNotification\";\n\nconst initialState = {\n  authenticated: false,\n  loading: true\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_USER\":\n      return { ...state, authenticated: action.result };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { authenticated } = state;\n\n  var isServiceWorkerSupported = 'serviceWorker' in navigator;\n  if (isServiceWorkerSupported) {\n    navigator.serviceWorker.register(useNotification, { scope: '/chat'})\n      .then(function(registration)\n      {\n         console.log('[ServiceWorker] 등록 성공: ', registration.scope);\n      })\n      .catch(function(err)\n      {\n         console.log('[ServiceWorker] 등록 실패: ', err);\n      });\n  }\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch({\n          type: \"GET_USER\",\n          result: true,\n        });\n      } else {\n        dispatch({\n          type: \"GET_USER\",\n          result: false,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <HashRouter>\n      <Routes>\n\n        <Route\n          path=\"/\"\n          element={<PublicRoute authenticated={authenticated} component={Login} />}\n        />\n\n        <Route\n          path=\"/signup\"\n          element={<PublicRoute authenticated={authenticated} component={SignUp} />}\n        />\n\n        <Route\n          path=\"/login\"\n          element={<PublicRoute authenticated={authenticated} component={Login} />}\n        />\n\n        <Route\n          path=\"/chat\"\n          element={<PrivateRoute authenticated={authenticated} component={Chat} />}\n        />\n\n        <Route\n          path=\"/room\"\n          element={<PrivateRoute authenticated={authenticated} component={Room} />}\n        />\n\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}