{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\App.js\";\nimport React, { Component, useReducer, useEffect, useRef } from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { authService } from \"./services/firebase\";\nimport Chat from \"./pages/Chat\";\nimport Room from \"./pages/Room\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      loading: true,\n      chatInfo: {\n        roomName: \"\",\n        chatList: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        dispatch({\n          type: \"GET_USER\",\n          result: true\n        });\n      } else {\n        dispatch({\n          type: \"GET_USER\",\n          result: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const initialState = {\n      authenticated: false,\n      loading: true\n    };\n\n    function reducer(state, action) {\n      switch (action.type) {\n        case \"GET_USER\":\n          return { ...state,\n            authenticated: action.result\n          };\n\n        default:\n          return state;\n      }\n    }\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const {\n      authenticated\n    } = state; // useEffect(() => {\n    //   authService.onAuthStateChanged((user) => {\n    //     if (user) {\n    //       dispatch({\n    //         type: \"GET_USER\",\n    //         result: true,\n    //       });\n    //     } else {\n    //       dispatch({\n    //         type: \"GET_USER\",\n    //         result: false,\n    //       });\n    //     }\n    //   });\n    // }, []);\n\n    return /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n            authenticated: authenticated,\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n            authenticated: authenticated,\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n            authenticated: authenticated,\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/chat\",\n          element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            authenticated: authenticated,\n            component: Chat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/room\",\n          element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            authenticated: authenticated,\n            component: Room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/App.js"],"names":["React","Component","useReducer","useEffect","useRef","HashRouter","Routes","Route","authService","Chat","Room","SignUp","Login","PublicRoute","PrivateRoute","App","constructor","props","state","authenticated","loading","chatInfo","roomName","chatList","componentDidMount","onAuthStateChanged","user","dispatch","type","result","render","initialState","reducer","action"],"mappings":"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","sourcesContent":["import React, { Component, useReducer, useEffect, useRef  } from 'react';\nimport { HashRouter, Routes, Route  } from 'react-router-dom';\nimport { authService } from \"./services/firebase\";\nimport Chat from \"./pages/Chat\";\nimport Room from \"./pages/Room\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nclass App extends Component {\n  state = {\n      authenticated: false,\n      loading: true,\n      chatInfo: {\n        roomName: \"\",\n        chatList: \"\"\n      }\n  };\n\n  constructor(props) {\n      super(props);\n  }\n\n  componentDidMount() {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch({\n          type: \"GET_USER\",\n          result: true,\n        });\n      } else {\n        dispatch({\n          type: \"GET_USER\",\n          result: false,\n        });\n      }\n    });\n  }\n\n  render() {\n\n    const initialState = {\n      authenticated: false,\n      loading: true\n    };\n\n    function reducer(state, action) {\n      switch (action.type) {\n        case \"GET_USER\":\n          return { ...state, authenticated: action.result };\n        default:\n          return state;\n      }\n    }\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const { authenticated } = state;\n\n    // useEffect(() => {\n    //   authService.onAuthStateChanged((user) => {\n    //     if (user) {\n    //       dispatch({\n    //         type: \"GET_USER\",\n    //         result: true,\n    //       });\n    //     } else {\n    //       dispatch({\n    //         type: \"GET_USER\",\n    //         result: false,\n    //       });\n    //     }\n    //   });\n    // }, []);\n\n    return (\n      <HashRouter>\n        <Routes>\n\n          <Route\n            path=\"/\"\n            element={<PublicRoute authenticated={authenticated} component={Login} />}\n          />\n\n          <Route\n            path=\"/signup\"\n            element={<PublicRoute authenticated={authenticated} component={SignUp} />}\n          />\n\n          <Route\n            path=\"/login\"\n            element={<PublicRoute authenticated={authenticated} component={Login} />}\n          />\n\n          <Route\n            path=\"/chat\"\n            element={<PrivateRoute authenticated={authenticated} component={Chat} />}\n          />\n\n          <Route\n            path=\"/room\"\n            element={<PrivateRoute authenticated={authenticated} component={Room} />}\n          />\n\n        </Routes>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}