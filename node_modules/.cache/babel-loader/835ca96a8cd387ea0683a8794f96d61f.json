{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\n\nfunction go(path) {\n  _s();\n\n  console.log(\"go > \" + path);\n  const navigate = useNavigate();\n  navigate(path);\n}\n\n_s(go, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\nexport function useNotification(title, option) {\n  // let navigate = useNavigate();\n  // const routeChange = (path) =>{\n  //   navigate(path);\n  // }\n  if (!(\"Notification\" in window)) {\n    return;\n  }\n\n  if (Notification.permission !== \"granted\") {\n    try {\n      Notification.requestPermission().then(permission => {\n        if (permission !== 'granted') return;\n      });\n    } catch (error) {\n      if (error instanceof TypeError) {\n        Notification.requestPermission(permission => {\n          if (permission !== 'granted') return;\n        });\n      } else {\n        console.error(error);\n      }\n    }\n  } else {\n    let roomName = option.body.split(\"from '\")[1];\n    roomName = roomName.substring(0, roomName.length - 1);\n    var notification = new Notification(title, option); // self.addEventListener('notificationclick', function(event) {\n\n    notification.onclick = function (event) {\n      event.preventDefault();\n      window.focus();\n      const path = \"http://localhost:3000/#/chat?room=\" + roomName; // routeChange(path)\n      // document.location.href = path;\n      // return path;\n\n      go(path); // console.log(url);\n      // window.open(url, \"_self\");\n      // navigate(`/chat?room=${title}`);\n      // notificationRef.close();\n    };\n  }\n}\n;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/useNotification.js"],"names":["useNavigate","go","path","console","log","navigate","useNotification","title","option","window","Notification","permission","requestPermission","then","error","TypeError","roomName","body","split","substring","length","notification","onclick","event","preventDefault","focus"],"mappings":";;AACA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,SAASC,EAAT,CAAYC,IAAZ,EAAkB;AAAA;;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAQF,IAApB;AACA,QAAMG,QAAQ,GAAGL,WAAW,EAA5B;AACAK,EAAAA,QAAQ,CAACH,IAAD,CAAR;AACD;;GAJQD,E;UAEUD,W;;;AAGnB,OAAO,SAASM,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AAE7C;AACA;AACA;AACA;AAEA,MAAI,EAAE,kBAAkBC,MAApB,CAAJ,EAAiC;AAC/B;AACD;;AAED,MAAIC,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,QAAI;AACFD,MAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,YAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,OAFD;AAGD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd,UAAIA,KAAK,YAAYC,SAArB,EAAgC;AAC9BL,QAAAA,YAAY,CAACE,iBAAb,CAAgCD,UAAD,IAAgB;AAC7C,cAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,SAFD;AAGD,OAJD,MAIO;AACLR,QAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACD;AACF;AACF,GAdD,MAcM;AACJ,QAAIE,QAAQ,GAAGR,MAAM,CAACS,IAAP,CAAYC,KAAZ,CAAkB,QAAlB,EAA4B,CAA5B,CAAf;AACAF,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,SAAT,CAAmB,CAAnB,EAAsBH,QAAQ,CAACI,MAAT,GAAgB,CAAtC,CAAX;AACA,QAAIC,YAAY,GAAG,IAAIX,YAAJ,CAAiBH,KAAjB,EAAwBC,MAAxB,CAAnB,CAHI,CAIJ;;AACAa,IAAAA,YAAY,CAACC,OAAb,GAAuB,UAASC,KAAT,EAAgB;AACrCA,MAAAA,KAAK,CAACC,cAAN;AACAf,MAAAA,MAAM,CAACgB,KAAP;AACA,YAAMvB,IAAI,GAAG,uCAAqCc,QAAlD,CAHqC,CAIrC;AACA;AACA;;AACAf,MAAAA,EAAE,CAACC,IAAD,CAAF,CAPqC,CASrC;AACA;AAEA;AACA;AACD,KAdD;AAeD;AAEF;AAAA","sourcesContent":["\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction go(path) {\r\n  console.log(\"go > \"+path)\r\n  const navigate = useNavigate();\r\n  navigate(path);\r\n}\r\nexport function useNotification(title, option) {\r\n\r\n  // let navigate = useNavigate();\r\n  // const routeChange = (path) =>{\r\n  //   navigate(path);\r\n  // }\r\n\r\n  if (!(\"Notification\" in window)) {\r\n    return;\r\n  }\r\n\r\n  if (Notification.permission !== \"granted\") {\r\n    try {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission !== 'granted') return;\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof TypeError) {\r\n        Notification.requestPermission((permission) => {\r\n          if (permission !== 'granted') return;\r\n        });\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }else {\r\n    let roomName = option.body.split(\"from '\")[1];\r\n    roomName = roomName.substring(0, roomName.length-1);\r\n    var notification = new Notification(title, option);\r\n    // self.addEventListener('notificationclick', function(event) {\r\n    notification.onclick = function(event) {\r\n      event.preventDefault();\r\n      window.focus();\r\n      const path = \"http://localhost:3000/#/chat?room=\"+roomName;\r\n      // routeChange(path)\r\n      // document.location.href = path;\r\n      // return path;\r\n      go(path)\r\n\r\n      // console.log(url);\r\n      // window.open(url, \"_self\");\r\n\r\n      // navigate(`/chat?room=${title}`);\r\n      // notificationRef.close();\r\n    }\r\n  }\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}