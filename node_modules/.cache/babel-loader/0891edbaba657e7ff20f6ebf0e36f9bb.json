{"ast":null,"code":"import _asyncToGenerator from\"C:/workspaces/atom_workspace/sesh-chatchat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/workspaces/atom_workspace/sesh-chatchat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{getRooms}from\"../helpers/database\";import\"../rooms.css\";import{jsx as _jsx}from\"react/jsx-runtime\";function Room(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),rooms=_useState2[0],setRooms=_useState2[1];var navigate=useNavigate();useEffect(function(){getRoomList();},[]);var itemId=1;var createItem=function createItem(text){return itemId++ +text;};var handleSelectRoom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var roomName;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();roomName=e.target.value;navigate(\"/chat?room=\".concat(roomName));case 3:case\"end\":return _context.stop();}}},_callee);}));return function handleSelectRoom(_x){return _ref.apply(this,arguments);};}();var getRoomList=function getRoomList(){var roomObject=getRooms();var myList=function myList(){var list=Object.keys(roomObject).map(function(roomName,index){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"room\",type:\"button\",onClick:handleSelectRoom,value:roomName,children:/*#__PURE__*/_jsx(\"span\",{children:roomName})},createItem(index+\"room\"))},createItem(index+\"li\"));});return/*#__PURE__*/_jsx(\"ul\",{children:list});};setRooms(myList);};return/*#__PURE__*/_jsx(\"div\",{className:\"room-wrap\",children:/*#__PURE__*/_jsx(\"div\",{children:rooms})});}export default Room;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/SESH-chatchat/src/pages/Room.js"],"names":["React","useState","useEffect","useNavigate","getRooms","Room","rooms","setRooms","navigate","getRoomList","itemId","createItem","text","handleSelectRoom","e","preventDefault","roomName","target","value","roomObject","myList","list","Object","keys","map","index"],"mappings":"2YAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAO,cAAP,C,2CAEA,QAASC,CAAAA,IAAT,EAAgB,CAEd,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,GAAIC,CAAAA,QAAQ,CAAGL,WAAW,EAA1B,CAEAD,SAAS,CAAC,UAAM,CACdO,WAAW,GACZ,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIC,CAAAA,MAAM,CAAG,CAAb,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAC3B,MAAQF,CAAAA,MAAM,EAAP,EAAaE,IAApB,CACD,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,0FAAG,iBAAOC,CAAP,+HACvBA,CAAC,CAACC,cAAF,GACMC,QAFiB,CAENF,CAAC,CAACG,MAAF,CAASC,KAFH,CAGvBV,QAAQ,sBAAeQ,QAAf,EAAR,CAHuB,sDAAH,kBAAhBH,CAAAA,gBAAgB,4CAAtB,CAMA,GAAMJ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMU,CAAAA,UAAU,CAAGf,QAAQ,EAA3B,CACA,GAAMgB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,GAAxB,CAA4B,SAACR,QAAD,CAAWS,KAAX,qBACvC,iCACE,eAEE,SAAS,CAAG,MAFd,CAGE,IAAI,CAAC,QAHP,CAIE,OAAO,CAAEZ,gBAJX,CAKE,KAAK,CAAEG,QALT,uBAME,sBAAOA,QAAP,EANF,EACOL,UAAU,CAACc,KAAK,CAAC,MAAP,CADjB,CADF,EAASd,UAAU,CAACc,KAAK,CAAC,IAAP,CAAnB,CADuC,EAA5B,CAAb,CAYA,mBAAO,oBAAKJ,IAAL,EAAP,CACD,CAdD,CAeAd,QAAQ,CAACa,MAAD,CAAR,CACD,CAlBD,CAoBA,mBACE,YAAK,SAAS,CAAC,WAAf,uBACE,qBACGd,KADH,EADF,EADF,CAOD,CAED,cAAeD,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getRooms } from \"../helpers/database\";\r\nimport \"../rooms.css\"\r\n\r\nfunction Room() {\r\n\r\n  const [rooms, setRooms] = useState(\"\");\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getRoomList();\r\n  }, []);\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const handleSelectRoom = async (e) => {\r\n    e.preventDefault();\r\n    const roomName = e.target.value;\r\n    navigate(`/chat?room=${roomName}`);\r\n  };\r\n\r\n  const getRoomList = () => {\r\n    const roomObject = getRooms();\r\n    const myList = () => {\r\n      const list = Object.keys(roomObject).map((roomName, index) => (\r\n        <li key={createItem(index+\"li\")}>\r\n          <button\r\n            key={createItem(index+\"room\")}\r\n            className = \"room\"\r\n            type=\"button\"\r\n            onClick={handleSelectRoom}\r\n            value={roomName}>\r\n            <span>{roomName}</span>\r\n          </button>\r\n        </li>\r\n      ));\r\n      return <ul>{list}</ul>;\r\n    };\r\n    setRooms(myList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-wrap\">\r\n      <div>\r\n        {rooms}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"]},"metadata":{},"sourceType":"module"}