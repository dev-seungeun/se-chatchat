{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef } from 'react';\n\nconst usePushNotification = () => {\n  _s();\n\n  const notificationRef = useRef(null); // Notification이 지원되지 않는 브라우저가 있을 수 있기 때문에, 이를 대비해 Early return 문을 걸어준다.\n\n  if (!Notification) {\n    return;\n  } // 만약 이미 유저가 푸시 알림을 허용해놓지 않았다면,\n\n\n  if (Notification.permission !== 'granted') {\n    // Chrome - 유저에게 푸시 알림을 허용하겠냐고 물어보고, 허용하지 않으면 return!\n    try {\n      Notification.requestPermission().then(permission => {\n        if (permission !== 'granted') return;\n      });\n    } catch (error) {\n      // Safari - 유저에게 푸시 알림을 허용하겠냐고 물어보고, 허용하지 않으면 return!\n      if (error instanceof TypeError) {\n        Notification.requestPermission().then(permission => {\n          if (permission !== 'granted') return;\n        });\n      } else {\n        console.error(error);\n      }\n    }\n  } // 유저가 푸시 알림을 클릭하면, 푸시 알림이 일어난 화면으로 이동하기\n\n\n  const setNotificationClickEvent = () => {\n    notificationRef.current.onclick = event => {\n      event.preventDefault();\n      window.focus();\n      notificationRef.current.close();\n    };\n  };\n\n  const fireNotification = () => {\n    const newOption = {\n      badge: '',\n      icon: '',\n      ...options\n    }; // notificationRef에 Notification을 넣어준다. 이 친구는 이렇게 할당만해도 바로 실행된다.\n\n    notificationRef.current = new Notification(title, newOption); // 위에서 만든 클릭 이벤트 걸어주기\n\n    setNotificationClickEvent();\n  };\n\n  return {\n    fireNotification\n  };\n};\n\n_s(usePushNotification, \"abLyEvfuqRUbh9djv4+XOQEnONg=\");\n\nexport default usePushNotification;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/usePushNotification.js"],"names":["useRef","usePushNotification","notificationRef","Notification","permission","requestPermission","then","error","TypeError","console","setNotificationClickEvent","current","onclick","event","preventDefault","window","focus","close","fireNotification","newOption","badge","icon","options","title"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,OAAvB;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAMC,eAAe,GAAGF,MAAM,CAAC,IAAD,CAA9B,CADgC,CAGhC;;AACA,MAAI,CAACG,YAAL,EAAmB;AACjB;AACD,GAN+B,CAQhC;;;AACA,MAAIA,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzC;AACA,QAAI;AACFD,MAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,YAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,OAFD;AAGD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd;AACA,UAAIA,KAAK,YAAYC,SAArB,EAAgC;AAC9BL,QAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,cAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,SAFD;AAGD,OAJD,MAIO;AACNK,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA;AACF;AACF,GAzB+B,CA2BhC;;;AACA,QAAMG,yBAAyB,GAAG,MAAM;AACtCR,IAAAA,eAAe,CAACS,OAAhB,CAAwBC,OAAxB,GAAmCC,KAAD,IAAW;AAC3CA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,MAAM,CAACC,KAAP;AACAd,MAAAA,eAAe,CAACS,OAAhB,CAAwBM,KAAxB;AACD,KAJD;AAKD,GAND;;AAQA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,SAAS,GAAG;AAChBC,MAAAA,KAAK,EAAE,EADS;AAEhBC,MAAAA,IAAI,EAAE,EAFU;AAGhB,SAAGC;AAHa,KAAlB,CAD6B,CAO7B;;AACApB,IAAAA,eAAe,CAACS,OAAhB,GAA0B,IAAIR,YAAJ,CAAiBoB,KAAjB,EAAwBJ,SAAxB,CAA1B,CAR6B,CAU7B;;AACAT,IAAAA,yBAAyB;AAC1B,GAZD;;AAcA,SAAO;AAAEQ,IAAAA;AAAF,GAAP;AACD,CAnDD;;GAAMjB,mB;;AAqDN,eAAeA,mBAAf","sourcesContent":["import { useRef } from 'react';\r\n\r\nconst usePushNotification = () => {\r\n  const notificationRef = useRef(null);\r\n\r\n  // Notification이 지원되지 않는 브라우저가 있을 수 있기 때문에, 이를 대비해 Early return 문을 걸어준다.\r\n  if (!Notification) {\r\n    return;\r\n  }\r\n\r\n  // 만약 이미 유저가 푸시 알림을 허용해놓지 않았다면,\r\n  if (Notification.permission !== 'granted') {\r\n    // Chrome - 유저에게 푸시 알림을 허용하겠냐고 물어보고, 허용하지 않으면 return!\r\n    try {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission !== 'granted') return;\r\n      });\r\n    } catch (error) {\r\n      // Safari - 유저에게 푸시 알림을 허용하겠냐고 물어보고, 허용하지 않으면 return!\r\n      if (error instanceof TypeError) {\r\n        Notification.requestPermission().then((permission) => {\r\n          if (permission !== 'granted') return;\r\n        });\r\n      } else {\r\n      \tconsole.error(error)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 유저가 푸시 알림을 클릭하면, 푸시 알림이 일어난 화면으로 이동하기\r\n  const setNotificationClickEvent = () => {\r\n    notificationRef.current.onclick = (event) => {\r\n      event.preventDefault();\r\n      window.focus();\r\n      notificationRef.current.close();\r\n    };\r\n  };\r\n\r\n  const fireNotification = () => {\r\n    const newOption = {\r\n      badge: '',\r\n      icon: '',\r\n      ...options\r\n    }\r\n\r\n    // notificationRef에 Notification을 넣어준다. 이 친구는 이렇게 할당만해도 바로 실행된다.\r\n    notificationRef.current = new Notification(title, newOption)\r\n\r\n    // 위에서 만든 클릭 이벤트 걸어주기\r\n    setNotificationClickEvent();\r\n  }\r\n\r\n  return { fireNotification }\r\n}\r\n\r\nexport default usePushNotification;\r\n"]},"metadata":{},"sourceType":"module"}