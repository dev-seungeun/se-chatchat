{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\pages\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getRooms } from \"../helpers/database\";\nimport { logout } from \"../helpers/auth\";\nimport \"../rooms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Room() {\n  _s();\n\n  const [rooms, setRooms] = useState(\"\");\n  let navigate = useNavigate();\n  useEffect(() => {\n    getRoomList();\n  }, []);\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  };\n\n  const handleSelectRoom = async e => {\n    e.preventDefault();\n    const roomName = e.target.value;\n    navigate(`/chat?room=${roomName}`);\n  };\n\n  const handleGoogleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRoomList = async () => {\n    console.log(\"getRoomList()\");\n    await getRooms().then(roomObject => {\n      console.log(\"getRooms() then\");\n      console.log(roomObject);\n\n      const myList = () => {\n        const list = Object.keys(roomObject).map((roomName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"room\",\n            type: \"button\",\n            onClick: handleSelectRoom,\n            value: roomName,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: roomName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, createItem(index + \"room\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, createItem(index + \"li\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      };\n\n      setRooms(myList);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-room\",\n      type: \"button\",\n      onClick: handleGoogleLogOut,\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rooms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Room, \"GWz3ZDzUTGRlQO/7yNXg66phlGc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/pages/Room.js"],"names":["React","useState","useEffect","useNavigate","getRooms","logout","Room","rooms","setRooms","navigate","getRoomList","itemId","createItem","text","handleSelectRoom","e","preventDefault","roomName","target","value","handleGoogleLogOut","error","console","log","then","roomObject","myList","list","Object","keys","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAO,cAAP;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIQ,QAAQ,GAAGN,WAAW,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIC,MAAM,GAAG,CAAb;;AACA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,WAAQF,MAAM,EAAP,GAAaE,IAApB;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAGF,CAAC,CAACG,MAAF,CAASC,KAA1B;AACAV,IAAAA,QAAQ,CAAE,cAAaQ,QAAS,EAAxB,CAAR;AACD,GAJD;;AAMA,QAAMG,kBAAkB,GAAG,YAAY;AACrC,QAAI;AACF,YAAMf,MAAM,EAAZ;AACD,KAFD,CAEE,OAAOgB,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACF,GAND;;AAQA,QAAMX,WAAW,GAAG,YAAW;AAE7BY,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMnB,QAAQ,GAAGoB,IAAX,CAAiBC,UAAD,IAAc;AAElCH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,UAAZ;;AACA,YAAMC,MAAM,GAAG,MAAM;AACnB,cAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,GAAxB,CAA4B,CAACb,QAAD,EAAWc,KAAX,kBACvC;AAAA,iCACE;AAEE,YAAA,SAAS,EAAG,MAFd;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,OAAO,EAAEjB,gBAJX;AAKE,YAAA,KAAK,EAAEG,QALT;AAAA,mCAME;AAAA,wBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AANF,aACOL,UAAU,CAACmB,KAAK,GAAC,MAAP,CADjB;AAAA;AAAA;AAAA;AAAA;AADF,WAASnB,UAAU,CAACmB,KAAK,GAAC,IAAP,CAAnB;AAAA;AAAA;AAAA;AAAA,gBADW,CAAb;AAYA,4BAAO;AAAA,oBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAdD;;AAgBAnB,MAAAA,QAAQ,CAACkB,MAAD,CAAR;AAED,KAtBK,CAAN;AAuBD,GA1BD;;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAEN,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,gBACGb;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArEQD,I;UAGQH,W;;;KAHRG,I;AAuET,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getRooms } from \"../helpers/database\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport \"../rooms.css\"\r\n\r\nfunction Room() {\r\n\r\n  const [rooms, setRooms] = useState(\"\");\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getRoomList();\r\n  }, []);\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const handleSelectRoom = async (e) => {\r\n    e.preventDefault();\r\n    const roomName = e.target.value;\r\n    navigate(`/chat?room=${roomName}`);\r\n  };\r\n\r\n  const handleGoogleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  const getRoomList = async() => {\r\n\r\n    console.log(\"getRoomList()\");\r\n    await getRooms().then((roomObject)=>{\r\n\r\n      console.log(\"getRooms() then\");\r\n      console.log(roomObject);\r\n      const myList = () => {\r\n        const list = Object.keys(roomObject).map((roomName, index) => (\r\n          <li key={createItem(index+\"li\")}>\r\n            <button\r\n              key={createItem(index+\"room\")}\r\n              className = \"room\"\r\n              type=\"button\"\r\n              onClick={handleSelectRoom}\r\n              value={roomName}>\r\n              <span>{roomName}</span>\r\n            </button>\r\n          </li>\r\n        ));\r\n        return <ul>{list}</ul>;\r\n      };\r\n\r\n      setRooms(myList);\r\n\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-wrap\">\r\n      <button\r\n        className=\"logout-room\"\r\n        type=\"button\"\r\n        onClick={handleGoogleLogOut}>\r\n        LOGOUT\r\n      </button>\r\n      <div>\r\n        {rooms}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"]},"metadata":{},"sourceType":"module"}