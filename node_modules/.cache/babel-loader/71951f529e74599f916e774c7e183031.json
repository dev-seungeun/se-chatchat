{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\pages\\\\Chat.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { logout } from \"../helpers/auth\";\nimport { authService, database, database_ref } from \"../services/firebase\";\nimport { sendChat, getChats, getAddedChats } from \"../helpers/database\";\nimport useNotification from \"../helpers/useNotification\";\nimport \"../chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\n\nfunction Chat() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  let startAdd = false;\n  const [msg, setMsg] = useState(\"\");\n  const [chats, setChats] = useState(\"\");\n\n  const setChatList = (chatList, isInitEnd) => {\n    const myList = () => {\n      const list = chatList.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: toDate(chat.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 66\n          }, this)\n        }, createItem(index + \"time\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sender\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: chat.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 70\n          }, this)\n        }, createItem(index + \"sender\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: chat.message.split('\\n').map(line => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 66\n              }, this)]\n            }, createItem(index + \"span\"), true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 23\n            }, this);\n          })\n        }, createItem(index + \"message\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, createItem(index + \"li\"), true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    };\n\n    setChats(myList);\n    const focused = document.hasFocus();\n\n    if (!focused && startAdd) {\n      notify(chatList);\n    }\n\n    if (isInitEnd) startAdd = true;\n    setTimeout(() => {\n      scrollToBottom();\n    }, 200);\n  };\n\n  const notify = chatList => {\n    _s2();\n\n    if (chatList.length > 0) {\n      const chat = chatList[chatList.length - 1];\n\n      if (chat.uid !== authService.currentUser.uid) {\n        useNotification('SESH', {\n          body: ''\n        }); // useNotification(chat.email, {\n        //   body: `${chat.message}`\n        // });\n      }\n    }\n  };\n\n  _s2(notify, \"5Wvo13JDZyE5NG8yw+lSYQ3PyGg=\", false, function () {\n    return [useNotification];\n  });\n\n  const sendMsg = async (e, msg) => {\n    if (msg.trim() !== \"\") {\n      try {\n        await sendChat(roomName, {\n          uid: authService.currentUser.uid,\n          email: authService.currentUser.email,\n          // message: msg.replaceAll(/(\\n|\\r\\n)/g, \"<br>\"),\n          message: msg,\n          timestamp: Date.now()\n        }).then(() => {\n          setMsg(\"\");\n          scrollToBottom();\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }; // USE EFFECT  ---------------------------------------\n\n\n  useEffect(() => {\n    try {\n      getAddedChats(roomName, setChatList);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []); // HANDLE  -------------------------------------------\n\n  const handleSendMsg = async e => {\n    sendMsg(e, msg);\n  };\n\n  const handleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOnChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const handleKeyPress = async e => {\n    if (e.key == 'Enter') {\n      if (!e.shiftKey) {\n        sendMsg(e, msg);\n      }\n    }\n  };\n\n  const handleModal = async e => {\n    console.log(document);\n    console.log(document.querySelector(\".chat_wrap\"));\n    console.log(document.querySelector(\".mode\"));\n    const modeBtn = document.getElementById(\"modeBtn\");\n    modeBtn.innerText = \"TEST\";\n  }; // ETC ----------------------------------------------\n\n\n  let query = useQuery();\n  const roomName = query.get(\"room\");\n  const scrollRef = useRef();\n\n  const scrollToBottom = () => {\n    scrollRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end',\n      inline: 'nearest'\n    });\n  };\n\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  };\n\n  const toDate = timestamp => {\n    let date = new Intl.DateTimeFormat('ko-KR', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(timestamp);\n    return date;\n  }; // --------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_wrap\",\n    ref: scrollRef,\n    \"user-theme\": \"dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode\",\n        type: \"button\",\n        id: \"modeBtn\",\n        value: \"\",\n        onClick: handleModal,\n        children: \"MODE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"SE-SH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        type: \"button\",\n        onClick: handleLogOut,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: chats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      onKeyPress: handleKeyPress,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-msg\",\n        value: msg,\n        placeholder: \"Message Here.\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send\",\n        type: \"button\",\n        onClick: handleSendMsg,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Chat, \"lU7N3xymEsBGQdu4O5Ck2dUIKkk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/pages/Chat.js"],"names":["React","useState","useEffect","useRef","useLocation","logout","authService","database","database_ref","sendChat","getChats","getAddedChats","useNotification","useQuery","search","useMemo","URLSearchParams","Chat","startAdd","msg","setMsg","chats","setChats","setChatList","chatList","isInitEnd","myList","list","map","chat","index","uid","currentUser","toDate","timestamp","createItem","email","message","split","line","focused","document","hasFocus","notify","setTimeout","scrollToBottom","length","body","sendMsg","e","trim","roomName","Date","now","then","error","console","log","handleSendMsg","handleLogOut","handleOnChange","target","value","handleKeyPress","key","shiftKey","handleModal","querySelector","modeBtn","getElementById","innerText","query","get","scrollRef","current","scrollIntoView","behavior","block","inline","itemId","text","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { authService, database, database_ref } from \"../services/firebase\";\r\nimport { sendChat, getChats, getAddedChats } from \"../helpers/database\";\r\nimport useNotification from \"../helpers/useNotification\";\r\nimport \"../chat.css\";\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nfunction Chat() {\r\n\r\n  let startAdd = false;\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chats, setChats] = useState(\"\");\r\n\r\n  const setChatList = (chatList, isInitEnd) => {\r\n    const myList = () => {\r\n      const list = chatList.map((chat, index) => (\r\n        <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n          <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)}</span></div>\r\n          <div key={createItem(index+\"sender\")} className = \"sender\"><span>{chat.email}</span></div>\r\n          <div key={createItem(index+\"message\")} className = \"message\">\r\n            {chat.message.split('\\n').map( line => {\r\n              return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n             })}\r\n          </div>\r\n        </li>\r\n      ));\r\n      return <ul>{list}</ul>;\r\n    };\r\n\r\n    setChats(myList);\r\n\r\n    const focused = document.hasFocus();\r\n    if(!focused && startAdd) {\r\n      notify(chatList);\r\n    }\r\n    if(isInitEnd) startAdd = true;\r\n\r\n    setTimeout(()=>{ scrollToBottom() }, 200);\r\n\r\n  };\r\n\r\n  const notify = (chatList) => {\r\n    if(chatList.length > 0) {\r\n      const chat = chatList[chatList.length-1];\r\n      if(chat.uid !== authService.currentUser.uid) {\r\n        useNotification('SESH', {\r\n          body: ''\r\n        });\r\n        // useNotification(chat.email, {\r\n        //   body: `${chat.message}`\r\n        // });\r\n      }\r\n    }\r\n  }\r\n\r\n  const sendMsg = async (e, msg) => {\r\n    if(msg.trim() !== \"\") {\r\n      try {\r\n        await sendChat(roomName,\r\n        {\r\n          uid: authService.currentUser.uid,\r\n          email: authService.currentUser.email,\r\n          // message: msg.replaceAll(/(\\n|\\r\\n)/g, \"<br>\"),\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }).then(() => {\r\n          setMsg(\"\");\r\n          scrollToBottom();\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n// USE EFFECT  ---------------------------------------\r\n  useEffect(() => {\r\n    try {\r\n      getAddedChats(roomName, setChatList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n\r\n// HANDLE  -------------------------------------------\r\n  const handleSendMsg = async (e) => {\r\n    sendMsg(e, msg);\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n\r\n  const handleKeyPress = async(e) => {\r\n    if(e.key == 'Enter') {\r\n      if(!e.shiftKey) {\r\n        sendMsg(e, msg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const handleModal = async(e) => {\r\n    console.log(document);\r\n    console.log(document.querySelector(\".chat_wrap\"));\r\n    console.log(document.querySelector(\".mode\"));\r\n\r\n    const modeBtn = document.getElementById(\"modeBtn\");\r\n    modeBtn.innerText  = \"TEST\"\r\n  }\r\n\r\n\r\n// ETC ----------------------------------------------\r\n  let query = useQuery();\r\n  const roomName = query.get(\"room\")\r\n\r\n  const scrollRef = useRef();\r\n  const scrollToBottom = () => {\r\n    scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' })\r\n  }\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const toDate = (timestamp) => {\r\n    let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\r\n    return date;\r\n  }\r\n// --------------------------------------------------\r\n\r\n  return (\r\n\r\n    <div className=\"chat_wrap\" ref={scrollRef} user-theme=\"dark\">\r\n      <div className=\"header\">\r\n        <button\r\n          className=\"mode\"\r\n          type=\"button\"\r\n          id=\"modeBtn\"\r\n          value=\"\"\r\n          onClick={handleModal}>MODE\r\n        </button>\r\n        <div className=\"title\">SE-SH</div>\r\n        <button\r\n          className=\"logout\"\r\n          type=\"button\"\r\n          onClick={handleLogOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"chat\">\r\n        {chats}\r\n      </div>\r\n      <div className=\"input-div\" onKeyPress={handleKeyPress}>\r\n        <textarea\r\n          className=\"input-msg\"\r\n          value={msg}\r\n          placeholder=\"Message Here.\"\r\n          onChange={handleOnChange}>\r\n        </textarea>\r\n        <button\r\n          className=\"send\"\r\n          type=\"button\"\r\n          onClick={handleSendMsg}>\r\n          SEND\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}