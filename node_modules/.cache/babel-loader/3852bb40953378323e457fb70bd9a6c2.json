{"ast":null,"code":"import { database, database_set, database_ref, database_update, database_on_value } from \"../services/firebase\";\nimport { onChildAdded, off, onValue, query, orderByKey, orderByChild, limitToLast, startAt } from \"firebase/database\";\nexport function getRooms(callback) {\n  const roomRef = database_ref(database, \"chats/rooms\");\n  onChildAdded(roomRef, snapshot => {\n    console.log(snapshot.key);\n    console.log(snapshot.toJSON());\n    callback(snapshot.toJSON());\n  });\n}\nexport function getRoomsAuth(roomName, callback) {\n  const roomAuthRef = query(database_ref(database, 'chats/' + roomName + \"/members\"), limitToLast(10));\n  onValue(roomAuthRef, snapshot => {\n    callback(snapshot.val());\n  });\n}\nexport function sendChatTime(roomName) {\n  const date = new Date();\n  return database_update(database_ref(database, 'chats/rooms/'), {\n    roomName: date\n  });\n}\nexport function sendChat(roomName, data) {\n  const date = new Date();\n  const today = date.getFullYear() + \"\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"\" + (\"0\" + date.getDate()).slice(-2);\n  return database_set(database_ref(database, 'chats/' + roomName + \"/messages/\" + today + \"/\" + data.timestamp), {\n    message: data.message,\n    timestamp: data.timestamp,\n    email: data.email,\n    uid: data.uid\n  });\n}\nexport function getAddedChats(roomName, callback) {\n  const date = new Date();\n  const today = date.getFullYear() + \"\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"\" + (\"0\" + date.getDate()).slice(-2);\n  ;\n  let chatList = [];\n  const chatRef = query(database_ref(database, 'chats/' + roomName + \"/messages/\" + today), limitToLast(10));\n  onChildAdded(chatRef, snapshot => {\n    if (snapshot.val().hasOwnProperty(\"uid\")) {\n      chatList.push(snapshot.val());\n    }\n\n    callback(chatList);\n  });\n  callback(chatList, true);\n}\n/*\r\nexport function getChats(roomName, callback) {\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  },[]);\r\n  callback(chatList);\r\n}\r\n*/","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/database.js"],"names":["database","database_set","database_ref","database_update","database_on_value","onChildAdded","off","onValue","query","orderByKey","orderByChild","limitToLast","startAt","getRooms","callback","roomRef","snapshot","console","log","key","toJSON","getRoomsAuth","roomName","roomAuthRef","val","sendChatTime","date","Date","sendChat","data","today","getFullYear","getMonth","slice","getDate","timestamp","message","email","uid","getAddedChats","chatList","chatRef","hasOwnProperty","push"],"mappings":"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","sourcesContent":["import { database, database_set, database_ref, database_update, database_on_value } from \"../services/firebase\";\r\nimport { onChildAdded, off, onValue, query, orderByKey, orderByChild, limitToLast, startAt } from \"firebase/database\";\r\n\r\nexport function getRooms(callback) {\r\n  const roomRef = database_ref(database, \"chats/rooms\");\r\n  onChildAdded(roomRef, (snapshot) => {\r\n    console.log(snapshot.key);\r\n    console.log(snapshot.toJSON());\r\n    callback(snapshot.toJSON());\r\n  });\r\n}\r\n\r\nexport function getRoomsAuth(roomName, callback) {\r\n  const roomAuthRef = query(database_ref(database, 'chats/'+roomName+\"/members\"), limitToLast(10));\r\n  onValue(roomAuthRef, (snapshot) => {\r\n    callback(snapshot.val());\r\n  });\r\n}\r\n\r\nexport function sendChatTime(roomName) {\r\n  const date = new Date();\r\n  return database_update(database_ref(database, 'chats/rooms/'), {\r\n    roomName: date\r\n  });\r\n}\r\n\r\nexport function sendChat(roomName, data) {\r\n  const date = new Date();\r\n  const today = date.getFullYear()+\"\"+(\"0\" + (date.getMonth() + 1)).slice(-2)+\"\"+(\"0\" + date.getDate()).slice(-2);\r\n  return database_set(database_ref(database, 'chats/'+roomName+\"/messages/\"+today+\"/\"+data.timestamp), {\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    email: data.email,\r\n    uid: data.uid\r\n  });\r\n}\r\n\r\nexport function getAddedChats(roomName, callback) {\r\n  const date = new Date();\r\n  const today = date.getFullYear()+\"\"+(\"0\" + (date.getMonth() + 1)).slice(-2)+\"\"+(\"0\" + date.getDate()).slice(-2);;\r\n  let chatList = [];\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName+\"/messages/\"+today), limitToLast(10));\r\n  onChildAdded(chatRef, (snapshot) => {\r\n    if(snapshot.val().hasOwnProperty(\"uid\")) {\r\n      chatList.push(snapshot.val());\r\n    }\r\n    callback(chatList);\r\n  });\r\n  callback(chatList, true);\r\n}\r\n\r\n/*\r\nexport function getChats(roomName, callback) {\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  },[]);\r\n  callback(chatList);\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}