{"ast":null,"code":"import _asyncToGenerator from\"C:/workspaces/atom_workspace/sesh-chatchat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/workspaces/atom_workspace/sesh-chatchat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect,useRef}from\"react\";import{useLocation}from\"react-router-dom\";import{logout}from\"../helpers/auth\";import{authService,database,database_ref}from\"../services/firebase\";import{sendChat,getChats,getAddedChats}from\"../helpers/database\";import useNotification from\"../helpers/useNotification\";import\"../chat.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function useQuery(){var _useLocation=useLocation(),search=_useLocation.search;return React.useMemo(function(){return new URLSearchParams(search);},[search]);}function Chat(){var startAdd=false;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),msg=_useState2[0],setMsg=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),chats=_useState4[0],setChats=_useState4[1];var setChatList=function setChatList(chatList,isInitEnd){var myList=function myList(){var list=chatList.map(function(chat,index){return/*#__PURE__*/_jsxs(\"li\",{className:chat.uid===authService.currentUser.uid?\"right\":\"left\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"time\",children:/*#__PURE__*/_jsx(\"span\",{children:toDate(chat.timestamp)})},createItem(index+\"time\")),/*#__PURE__*/_jsx(\"div\",{className:\"sender\",children:/*#__PURE__*/_jsx(\"span\",{children:chat.email})},createItem(index+\"sender\")),/*#__PURE__*/_jsx(\"div\",{className:\"message\",children:chat.message.split('\\n').map(function(line){return/*#__PURE__*/_jsxs(\"span\",{children:[line,/*#__PURE__*/_jsx(\"br\",{})]},createItem(index+\"span\"));})},createItem(index+\"message\"))]},createItem(index+\"li\"));});return/*#__PURE__*/_jsx(\"ul\",{children:list});};setChats(myList);if(startAdd)notify(chatList);if(isInitEnd)startAdd=true;};var notify=function notify(chatList){if(chatList.length>0){var chat=chatList[chatList.length-1];if(chat.uid!==authService.currentUser.uid){useNotification(chat.email,{body:\"\".concat(chat.message)});}}};// USE EFFECT  ---------------------------------------\nuseEffect(function(){try{getAddedChats(roomName,setChatList);}catch(error){console.log(error);}},[]);useEffect(function(){scrollToBottom();},[chats]);// HANDLE  -------------------------------------------\nvar handleGoogleLogOut=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return logout();case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 8:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function handleGoogleLogOut(){return _ref.apply(this,arguments);};}();var handleOnChange=function handleOnChange(e){setMsg(e.target.value);};var handleKeyPress=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(e.key=='Enter')){_context2.next=12;break;}if(e.shiftKey){_context2.next=12;break;}if(!(msg.trim()!==\"\")){_context2.next=12;break;}e.preventDefault();_context2.prev=4;_context2.next=7;return sendChat(roomName,{uid:authService.currentUser.uid,email:authService.currentUser.email,// message: msg.replaceAll(/(\\n|\\r\\n)/g, \"<br>\"),\nmessage:msg,timestamp:Date.now()}).then(function(){setMsg(\"\");});case 7:_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](4);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[4,9]]);}));return function handleKeyPress(_x){return _ref2.apply(this,arguments);};}();// ETC ----------------------------------------------\nvar query=useQuery();var roomName=query.get(\"room\");var scrollRef=useRef();var scrollToBottom=function scrollToBottom(){scrollRef.current.scrollIntoView({behavior:'smooth',block:'end'});};var itemId=1;var createItem=function createItem(text){return itemId++ +text;};var toDate=function toDate(timestamp){var date=new Intl.DateTimeFormat('ko-KR',{year:'numeric',month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit',second:'2-digit'}).format(timestamp);return date;};// --------------------------------------------------\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"chat_wrap\",ref:scrollRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"SE-SH\"}),/*#__PURE__*/_jsx(\"button\",{className:\"logout\",type:\"button\",onClick:handleGoogleLogOut,children:\"LOGOUT\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat\",children:chats}),/*#__PURE__*/_jsx(\"div\",{className:\"input-div\",onKeyPress:handleKeyPress,children:/*#__PURE__*/_jsx(\"textarea\",{className:\"input-msg\",value:msg,placeholder:\"Message Here.\",onChange:handleOnChange})})]});}export default Chat;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/pages/Chat.js"],"names":["React","useState","useEffect","useRef","useLocation","logout","authService","database","database_ref","sendChat","getChats","getAddedChats","useNotification","useQuery","search","useMemo","URLSearchParams","Chat","startAdd","msg","setMsg","chats","setChats","setChatList","chatList","isInitEnd","myList","list","map","chat","index","uid","currentUser","toDate","timestamp","createItem","email","message","split","line","notify","length","body","roomName","error","console","log","scrollToBottom","handleGoogleLogOut","handleOnChange","e","target","value","handleKeyPress","key","shiftKey","trim","preventDefault","Date","now","then","query","get","scrollRef","current","scrollIntoView","behavior","block","itemId","text","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { authService, database, database_ref } from \"../services/firebase\";\r\nimport { sendChat, getChats, getAddedChats } from \"../helpers/database\";\r\nimport useNotification from \"../helpers/useNotification\";\r\nimport \"../chat.css\";\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nfunction Chat() {\r\n\r\n  let startAdd = false;\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chats, setChats] = useState(\"\");\r\n\r\n  const setChatList = (chatList, isInitEnd) => {\r\n\r\n    const myList = () => {\r\n      const list = chatList.map((chat, index) => (\r\n        <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n          <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)}</span></div>\r\n          <div key={createItem(index+\"sender\")} className = \"sender\"><span>{chat.email}</span></div>\r\n          <div key={createItem(index+\"message\")} className = \"message\">\r\n            {chat.message.split('\\n').map( line => {\r\n              return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n             })}\r\n          </div>\r\n        </li>\r\n      ));\r\n      return <ul>{list}</ul>;\r\n    };\r\n\r\n    setChats(myList);\r\n    if(startAdd) notify(chatList);\r\n    if(isInitEnd) startAdd = true;\r\n\r\n  };\r\n\r\n  const notify = (chatList) => {\r\n    if(chatList.length > 0) {\r\n      const chat = chatList[chatList.length-1];\r\n      if(chat.uid !== authService.currentUser.uid) {\r\n        useNotification(chat.email, {\r\n          body: `${chat.message}`\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n// USE EFFECT  ---------------------------------------\r\n  useEffect(() => {\r\n    try {\r\n      getAddedChats(roomName, setChatList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chats]);\r\n\r\n\r\n// HANDLE  -------------------------------------------\r\n  const handleGoogleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n\r\n  const handleKeyPress = async(e) => {\r\n    if(e.key == 'Enter') {\r\n      if(!e.shiftKey) {\r\n        if(msg.trim() !== \"\") {\r\n          e.preventDefault();\r\n          try {\r\n            await sendChat(roomName,\r\n            {\r\n              uid: authService.currentUser.uid,\r\n              email: authService.currentUser.email,\r\n              // message: msg.replaceAll(/(\\n|\\r\\n)/g, \"<br>\"),\r\n              message: msg,\r\n              timestamp: Date.now()\r\n            }).then(() => {\r\n              setMsg(\"\");\r\n            });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n// ETC ----------------------------------------------\r\n  let query = useQuery();\r\n  const roomName = query.get(\"room\")\r\n\r\n  const scrollRef = useRef();\r\n  const scrollToBottom = () => {\r\n    scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' })\r\n  }\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const toDate = (timestamp) => {\r\n    let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\r\n    return date;\r\n  }\r\n// --------------------------------------------------\r\n\r\n  return (\r\n\r\n    <div className=\"chat_wrap\" ref={scrollRef}>\r\n      <div className=\"header\">\r\n        <div className=\"title\">SE-SH</div>\r\n        <button\r\n          className=\"logout\"\r\n          type=\"button\"\r\n          onClick={handleGoogleLogOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"chat\">\r\n        {chats}\r\n      </div>\r\n      <div className=\"input-div\" onKeyPress={handleKeyPress}>\r\n        <textarea\r\n          className=\"input-msg\"\r\n          value={msg}\r\n          placeholder=\"Message Here.\"\r\n          onChange={handleOnChange}>\r\n        </textarea>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}