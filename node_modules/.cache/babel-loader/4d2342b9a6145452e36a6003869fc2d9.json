{"ast":null,"code":"const useNotification = (title, options) => {\n  console.log(\"useNotification\");\n  console.log(!(\"Notification\" in window));\n\n  if (!(\"Notification\" in window)) {\n    return;\n  } // const fireNotif = () => {\n\n\n  console.log(\"fireNotif\");\n  console.log(Notification.permission);\n\n  if (Notification.permission !== \"granted\") {\n    Notification.requestPermission().then(permission => {\n      if (permission === \"granted\") {\n        new Notification(title, options);\n      } else {\n        return;\n      }\n    });\n  } else {\n    new Notification(title, options);\n  } // };\n  // return fireNotif;\n  // Notification을 위한 타이머를 설정하는 함수!\n\n\n  const setNotificationTimer = timeout => {\n    // clearTimeout을 하기 위해 timerRef에 저장해준다.\n    timerRef.current = setTimeout(() => {\n      // timeout에 넣어준 시간만큼 흐르면, 콜백이 실행되면서 timerRef.current에 null이 담기게 된다.\n      timerRef.current = null; // 시간이 다 흘렀으면 푸시 알림이 꺼지도록 해준다.\n\n      notificationRef.current.close(); // 그리고 역할을 다한 notificationRef를 null로 초기화해준다.\n\n      notificationRef.current = null;\n    }, timeout);\n  }; // 어떤 알림을 보낼 것인지, 몇 초마다 알림을 보낼 것인지에 대한 함수\n\n\n  const fireNotificationWithTimeout = function (title, timeout) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    // 만약 유저가 푸시 알림을 꺼놓았다면 함수가 실행되지 않게 미리 return을 해준다.\n    // 그런데 가드를 세워놨음에도 불구하고, Safari에서 실행되지 않는 문제점이 있었다. 이 문제는 해결중이다 ㅜㅜ!\n    if (Notification.permission !== 'granted') return; // Notification API는 두 번째 인자로 option 값을 받는데, 뱃지 이미지와 아이콘 등을 설정해 줄 수 있다.\n    // 초기 badge, icon을 설정해주었다.\n\n    const newOption = {\n      badge: 'https://babble.gg/img/logos/babble-speech-bubble.png',\n      icon: 'https://babble.gg/img/logos/babble-speech-bubble.png',\n      ...options\n    }; // 만약 notificationRef가 아직 초기화되지 않았다면, 타이머가 아직 동작하고 있는거니까 notificationRef가 없을 때에만 새로운 알림을 만든다.\n\n    if (!notificationRef.current) {\n      // 여기 들어왔다는건 타이머가 실행되지 않고 있다는 것이니까, 타이머를 만들어준다.\n      setNotificationTimer(timeout); // 푸시 알림에서 보여줄 title과 위에서 우리가 만든 custom option을 넣어준다.\n      // 이 Notification 함수는 할당해도 바로 실행되기 때문에 첫 이벤트는 무조건 실행되고, 그 이후부터 타이머가 작동한다.\n\n      notificationRef.current = new Notification(title, newOption); // Notification의 Click Event를 새로 붙여준다.\n\n      setNotificationClickEvent();\n    }\n  };\n\n  return {\n    fireNotificationWithTimeout\n  };\n};\n\nexport default useNotification;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/useNotification.js"],"names":["useNotification","title","options","console","log","window","Notification","permission","requestPermission","then","setNotificationTimer","timeout","timerRef","current","setTimeout","notificationRef","close","fireNotificationWithTimeout","newOption","badge","icon","setNotificationClickEvent"],"mappings":"AAAA,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAE1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAE,kBAAkBC,MAApB,CAAZ;;AACA,MAAI,EAAE,kBAAkBA,MAApB,CAAJ,EAAiC;AAC/B;AACD,GANyC,CAO1C;;;AACEF,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYE,YAAY,CAACC,UAAzB;;AACA,MAAID,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzCD,IAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,UAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC5B,YAAID,YAAJ,CAAiBL,KAAjB,EAAwBC,OAAxB;AACD,OAFD,MAEO;AACL;AACD;AACF,KAND;AAOD,GARD,MAQO;AACL,QAAII,YAAJ,CAAiBL,KAAjB,EAAwBC,OAAxB;AACD,GApBuC,CAqB1C;AACA;AAEA;;;AACA,QAAMQ,oBAAoB,GAAIC,OAAD,IAAa;AACxC;AACAC,IAAAA,QAAQ,CAACC,OAAT,GAAmBC,UAAU,CAAC,MAAM;AAClC;AACAF,MAAAA,QAAQ,CAACC,OAAT,GAAmB,IAAnB,CAFkC,CAIlC;;AACAE,MAAAA,eAAe,CAACF,OAAhB,CAAwBG,KAAxB,GALkC,CAMlC;;AACAD,MAAAA,eAAe,CAACF,OAAhB,GAA0B,IAA1B;AACD,KAR4B,EAQ1BF,OAR0B,CAA7B;AASD,GAXD,CAzB0C,CAsC1C;;;AACA,QAAMM,2BAA2B,GAAG,UAAChB,KAAD,EAAQU,OAAR,EAAkC;AAAA,QAAjBT,OAAiB,uEAAP,EAAO;AACpE;AACA;AACA,QAAII,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C,OAHyB,CAKpE;AACA;;AACA,UAAMW,SAAS,GAAG;AAChBC,MAAAA,KAAK,EAAE,sDADS;AAEhBC,MAAAA,IAAI,EAAE,sDAFU;AAGhB,SAAGlB;AAHa,KAAlB,CAPoE,CAapE;;AACA,QAAI,CAACa,eAAe,CAACF,OAArB,EAA8B;AAC5B;AACAH,MAAAA,oBAAoB,CAACC,OAAD,CAApB,CAF4B,CAI5B;AACA;;AACAI,MAAAA,eAAe,CAACF,OAAhB,GAA0B,IAAIP,YAAJ,CAAiBL,KAAjB,EAAwBiB,SAAxB,CAA1B,CAN4B,CAQ5B;;AACAG,MAAAA,yBAAyB;AAC1B;AACF,GAzBD;;AA2BA,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AAED,CApED;;AAsEA,eAAejB,eAAf","sourcesContent":["const useNotification = (title, options) => {\r\n\r\n  console.log(\"useNotification\");\r\n  console.log(!(\"Notification\" in window));\r\n  if (!(\"Notification\" in window)) {\r\n    return;\r\n  }\r\n  // const fireNotif = () => {\r\n    console.log(\"fireNotif\");\r\n    console.log(Notification.permission);\r\n    if (Notification.permission !== \"granted\") {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission === \"granted\") {\r\n          new Notification(title, options);\r\n        } else {\r\n          return;\r\n        }\r\n      });\r\n    } else {\r\n      new Notification(title, options);\r\n    }\r\n  // };\r\n  // return fireNotif;\r\n\r\n  // Notification을 위한 타이머를 설정하는 함수!\r\n  const setNotificationTimer = (timeout) => {\r\n    // clearTimeout을 하기 위해 timerRef에 저장해준다.\r\n    timerRef.current = setTimeout(() => {\r\n      // timeout에 넣어준 시간만큼 흐르면, 콜백이 실행되면서 timerRef.current에 null이 담기게 된다.\r\n      timerRef.current = null;\r\n\r\n      // 시간이 다 흘렀으면 푸시 알림이 꺼지도록 해준다.\r\n      notificationRef.current.close();\r\n      // 그리고 역할을 다한 notificationRef를 null로 초기화해준다.\r\n      notificationRef.current = null;\r\n    }, timeout);\r\n  };\r\n\r\n  // 어떤 알림을 보낼 것인지, 몇 초마다 알림을 보낼 것인지에 대한 함수\r\n  const fireNotificationWithTimeout = (title, timeout, options = {}) => {\r\n    // 만약 유저가 푸시 알림을 꺼놓았다면 함수가 실행되지 않게 미리 return을 해준다.\r\n    // 그런데 가드를 세워놨음에도 불구하고, Safari에서 실행되지 않는 문제점이 있었다. 이 문제는 해결중이다 ㅜㅜ!\r\n    if (Notification.permission !== 'granted') return;\r\n\r\n    // Notification API는 두 번째 인자로 option 값을 받는데, 뱃지 이미지와 아이콘 등을 설정해 줄 수 있다.\r\n    // 초기 badge, icon을 설정해주었다.\r\n    const newOption = {\r\n      badge: 'https://babble.gg/img/logos/babble-speech-bubble.png',\r\n      icon: 'https://babble.gg/img/logos/babble-speech-bubble.png',\r\n      ...options,\r\n    };\r\n\r\n    // 만약 notificationRef가 아직 초기화되지 않았다면, 타이머가 아직 동작하고 있는거니까 notificationRef가 없을 때에만 새로운 알림을 만든다.\r\n    if (!notificationRef.current) {\r\n      // 여기 들어왔다는건 타이머가 실행되지 않고 있다는 것이니까, 타이머를 만들어준다.\r\n      setNotificationTimer(timeout);\r\n\r\n      // 푸시 알림에서 보여줄 title과 위에서 우리가 만든 custom option을 넣어준다.\r\n      // 이 Notification 함수는 할당해도 바로 실행되기 때문에 첫 이벤트는 무조건 실행되고, 그 이후부터 타이머가 작동한다.\r\n      notificationRef.current = new Notification(title, newOption);\r\n\r\n      // Notification의 Click Event를 새로 붙여준다.\r\n      setNotificationClickEvent();\r\n    }\r\n  };\r\n\r\n  return { fireNotificationWithTimeout };\r\n\r\n};\r\n\r\nexport default useNotification;\r\n"]},"metadata":{},"sourceType":"module"}