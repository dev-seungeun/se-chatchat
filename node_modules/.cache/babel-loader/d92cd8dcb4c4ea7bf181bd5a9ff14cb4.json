{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyDocuments\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\pages\\\\Chat.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useHistory, useEffect, useRef, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { logout } from \"../helpers/auth\";\nimport { authService, database, database_ref, storage, storage_ref, upload_byte, down_url } from \"../services/firebase\";\nimport { sendChat, sendChatTime, getChats, getAddedChats, offRef, getCommonInfo, setCommonInfo } from \"../helpers/database\";\nimport { useNotification } from \"../helpers/useNotification\";\nimport \"../chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  const query = React.useMemo(() => new URLSearchParams(search), [search]);\n  return query;\n}\n\n_s(useQuery, \"oEpefbUBhGKQodgjMPdMiKsuhFE=\", false, function () {\n  return [useLocation];\n});\n\nfunction Chat() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  let isMount = true;\n  let startAdd = false;\n  const [msg, setMsg] = useState(\"\");\n  const [chatList, setChatList] = useState(\"\");\n  const [chats, setChats] = useState(\"\");\n  const [themeInfo, setThemeInfo] = useState({\n    theme: \"\",\n    themeTxt: \"\"\n  });\n  const [src, setSrc] = useState(\"\");\n  const [imgFile, setImgFile] = useState();\n  const [percent, setPercent] = useState(0);\n\n  const setChatUI = (chatList, isInitEnd) => {\n    const themeData = getThemeData();\n\n    const myList = () => {\n      if (themeData.theme == \"light\") {\n        const list = chatList.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: toDate(chat.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 68\n            }, this)\n          }, createItem(index + \"time\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: chat.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 72\n            }, this)\n          }, createItem(index + \"sender\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: chat.message.split('\\n').map(line => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 68\n                }, this)]\n              }, createItem(index + \"span\"), true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 25\n              }, this);\n            })\n          }, createItem(index + \"message\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, createItem(index + \"li\"), true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      } else {\n        const list = chatList.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"C:\\\\Users\\\\\" + chat.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 72\n            }, this)\n          }, createItem(index + \"sender\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: toDate(chat.timestamp) + \" >\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 68\n            }, this)\n          }, createItem(index + \"time\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: chat.message.split('\\n').map(line => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 68\n                }, this)]\n              }, createItem(index + \"span\"), true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this);\n            })\n          }, createItem(index + \"message\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, createItem(index + \"li\"), true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    setChats(myList);\n    setChatList(chatList);\n    const focused = document.hasFocus();\n\n    if (!focused && startAdd && isMount) {\n      notify(chatList);\n    }\n\n    if (isInitEnd) startAdd = true;\n    isMount && setTimeout(() => {\n      scrollToBottom();\n    }, 200);\n  };\n\n  const getThemeData = () => {\n    if (isMount) {\n      const chatWrap = document.querySelector(\".chat_wrap\");\n      const theme = chatWrap.getAttribute(\"data-theme\");\n      console.log(theme);\n      return {\n        'chatWrap': chatWrap,\n        'theme': theme\n      };\n    }\n  };\n\n  const notify = chatList => {\n    _s2();\n\n    if (chatList.length > 0) {\n      const chat = chatList[chatList.length - 1];\n\n      if (chat.uid !== authService.currentUser.uid) {\n        console.log(\"NOTI > from chat\");\n        const res = useNotification('SESH', {\n          body: \"from '\" + roomName + \"'\"\n        });\n        console.log(res); // useNotification(chat.email, {\n        //   body: `${chat.message}`\n        // });\n      }\n    }\n  };\n\n  _s2(notify, \"1f5oqaShrgpqzmMOLHKUPFa+cro=\", false, function () {\n    return [useNotification];\n  });\n\n  const sendMsg = async (e, msg) => {\n    if (src !== \"\") {\n      try {\n        // const file = document.getElementById(\"input-image\").files[0];\n        const fileName = Date.now() + \"_\" + Math.floor(Math.random() * 100);\n        const storageRef = storage_ref(storage, 'test/' + fileName);\n        console.log(imgFile);\n        console.log(imgFile.name);\n        upload_byte(storageRef, imgFile).then(snapshot => {\n          console.log(snapshot);\n          const perc = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          setPercent(perc);\n        }, error => {\n          console.log(error);\n        }, () => {\n          console.log(\"성공\");\n          down_url(uploadTask.snapshot.ref).then(url => {\n            console.log(\"downUrl : \" + url);\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      } // pushImgData();\n\n    }\n\n    if (msg.trim() !== \"\") {\n      try {\n        await sendChat(roomName, {\n          uid: authService.currentUser.uid,\n          email: authService.currentUser.email,\n          message: msg,\n          timestamp: Date.now()\n        }).then(() => {\n          setMsg(\"\");\n        });\n        sendChatTime(roomName, authService.currentUser.uid);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const escFunction = useCallback(event => {\n    if (event.keyCode === 27) {\n      setSrc(\"\");\n      document.getElementById(\"input-image\").style.display = \"none\";\n    }\n  }, []); // const getImgPath = (img) => {\n  //   console.log(\"getImgPath()\");\n  //   // const img = file.files[0];\n  //   setImgPath(img);\n  //   console.log(imgPath);\n  // }\n  // USE EFFECT  ---------------------------------------\n\n  useEffect(() => {\n    const themeInfoTmp = getCommonInfo(\"themeInfo\");\n    setThemeInfo({\n      theme: themeInfoTmp.theme,\n      themeTxt: themeInfoTmp.themeTxt\n    });\n    getAddedChats(roomName, setChatUI);\n    document.addEventListener(\"keydown\", escFunction, false);\n    return () => {\n      isMount = false;\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  }, []); // HANDLE  -------------------------------------------\n\n  const handleSendMsg = async e => {\n    sendMsg(e, msg);\n  };\n\n  const handleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOnChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const handleKeyPress = async e => {\n    console.log(e.key);\n    console.log(e.shiftKey);\n\n    if (e.key == 'Enter') {\n      if (!e.shiftKey) {\n        sendMsg(e, msg);\n      }\n    }\n  };\n\n  const handleTheme = e => {\n    const modeBtn = document.getElementById(\"modeBtn\");\n    const themeData = getThemeData();\n    const chatWrap = themeData.chatWrap;\n    const theme = themeData.theme;\n\n    if (theme == \"light\") {\n      chatWrap.removeAttribute(\"data-theme\", \"light\");\n      chatWrap.setAttribute(\"data-theme\", \"dark\");\n      modeBtn.innerText = \"LIGHT\";\n      setCommonInfo(\"themeInfo\", {\n        theme: \"dark\",\n        themeTxt: \"LIGHT\"\n      });\n    } else {\n      chatWrap.removeAttribute(\"data-theme\", \"dark\");\n      chatWrap.setAttribute(\"data-theme\", \"light\");\n      modeBtn.innerText = \"DARK\";\n      setCommonInfo(\"themeInfo\", {\n        theme: \"light\",\n        themeTxt: \"DARK\"\n      });\n    }\n\n    setChatUI(chatList);\n  };\n\n  const handleOnPaste = e => {\n    console.log({\n      event\n    });\n    const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n    console.log(\"items: \", JSON.stringify(items));\n    let blob = null;\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].type.indexOf(\"image\") === 0) {\n        blob = items[i].getAsFile();\n      }\n    }\n\n    if (blob !== null) {\n      // console.log({ blob });\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        // console.log(event.target.result); // data url!\n        // console.log(event.target);\n        setSrc(event.target.result);\n        document.getElementById(\"input-image\").style.display = \"block\";\n      };\n\n      reader.readAsDataURL(blob);\n      var file = new File([blob], Date.now() + Math.floor(Math.random() * 100));\n      setImgFile(file);\n      console.log(imgFile);\n      console.log({\n        reader\n      });\n    }\n  }; // ETC ----------------------------------------------\n\n\n  let query = useQuery();\n  const roomName = query.get(\"room\");\n  const messageRef = useRef();\n\n  const scrollToBottom = () => {\n    messageRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  };\n\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  };\n\n  const toDate = timestamp => {\n    //let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\n    let date = new Intl.DateTimeFormat('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    }).format(timestamp);\n    return date;\n  }; // --------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_wrap\",\n    \"data-theme\": themeInfo.theme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode\",\n        type: \"button\",\n        id: \"modeBtn\",\n        value: \"\",\n        onClick: handleTheme,\n        children: themeInfo.themeTxt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        type: \"button\",\n        onClick: handleLogOut,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [chats, /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"input-image\",\n        className: \"input-image\",\n        src: src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        value: percent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      onKeyPress: handleKeyPress,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-msg\",\n        value: msg,\n        placeholder: \"Message Here.\",\n        onChange: handleOnChange,\n        onPaste: handleOnPaste\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send\",\n        type: \"button\",\n        onClick: handleSendMsg,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Chat, \"r1ac+JQfXMH4jDopEKNlA1LZWAY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/MyDocuments/workspaces/atom_workspace/sesh-chatchat/src/pages/Chat.js"],"names":["React","useState","useHistory","useEffect","useRef","useCallback","useLocation","logout","authService","database","database_ref","storage","storage_ref","upload_byte","down_url","sendChat","sendChatTime","getChats","getAddedChats","offRef","getCommonInfo","setCommonInfo","useNotification","useQuery","search","query","useMemo","URLSearchParams","Chat","isMount","startAdd","msg","setMsg","chatList","setChatList","chats","setChats","themeInfo","setThemeInfo","theme","themeTxt","src","setSrc","imgFile","setImgFile","percent","setPercent","setChatUI","isInitEnd","themeData","getThemeData","myList","list","map","chat","index","uid","currentUser","toDate","timestamp","createItem","email","message","split","line","focused","document","hasFocus","notify","setTimeout","scrollToBottom","chatWrap","querySelector","getAttribute","console","log","length","res","body","roomName","sendMsg","e","fileName","Date","now","Math","floor","random","storageRef","name","then","snapshot","perc","round","bytesTransferred","totalBytes","error","uploadTask","ref","url","trim","escFunction","event","keyCode","getElementById","style","display","themeInfoTmp","addEventListener","removeEventListener","handleSendMsg","handleLogOut","handleOnChange","target","value","handleKeyPress","key","shiftKey","handleTheme","modeBtn","removeAttribute","setAttribute","innerText","handleOnPaste","items","clipboardData","originalEvent","JSON","stringify","blob","i","type","indexOf","getAsFile","reader","FileReader","onload","result","readAsDataURL","file","File","get","messageRef","current","scrollIntoView","behavior","block","itemId","text","date","Intl","DateTimeFormat","hour","minute","second","hour12","format"],"mappings":"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","sourcesContent":["import React, { useState, useHistory, useEffect, useRef, useCallback } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { authService, database, database_ref, storage, storage_ref, upload_byte, down_url } from \"../services/firebase\";\r\nimport { sendChat, sendChatTime, getChats, getAddedChats, offRef, getCommonInfo, setCommonInfo } from \"../helpers/database\";\r\nimport { useNotification } from \"../helpers/useNotification\";\r\nimport \"../chat.css\";\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n  const query = React.useMemo(() => new URLSearchParams(search), [search]);\r\n  return query;\r\n}\r\n\r\nfunction Chat() {\r\n\r\n  let isMount = true;\r\n  let startAdd = false;\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chatList, setChatList] = useState(\"\");\r\n  const [chats, setChats] = useState(\"\");\r\n  const [themeInfo, setThemeInfo] = useState({theme:\"\", themeTxt:\"\"});\r\n  const [src, setSrc] = useState(\"\");\r\n  const [imgFile, setImgFile] = useState();\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  const setChatUI = (chatList, isInitEnd) => {\r\n    const themeData = getThemeData();\r\n    const myList = () => {\r\n      if(themeData.theme == \"light\") {\r\n        const list = chatList.map((chat, index) => (\r\n          <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n            <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)}</span></div>\r\n            <div key={createItem(index+\"sender\")} className = \"sender\"><span>{chat.email}</span></div>\r\n            <div key={createItem(index+\"message\")} className = \"message\">\r\n              {chat.message.split('\\n').map( line => {\r\n                return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n               })}\r\n            </div>\r\n          </li>\r\n        ));\r\n        return <ul>{list}</ul>;\r\n      }else {\r\n        const list = chatList.map((chat, index) => (\r\n          <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n            <div key={createItem(index+\"sender\")} className = \"sender\"><span>{\"C:\\\\Users\\\\\"+chat.email}</span></div>\r\n            <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)+\" >\"}</span></div>\r\n            <div key={createItem(index+\"message\")} className = \"message\">\r\n              {chat.message.split('\\n').map( line => {\r\n                return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n               })}\r\n            </div>\r\n          </li>\r\n        ));\r\n        return <ul>{list}</ul>;\r\n      }\r\n    }\r\n    setChats(myList);\r\n    setChatList(chatList);\r\n\r\n    const focused = document.hasFocus();\r\n    if(!focused && startAdd && isMount) {\r\n      notify(chatList);\r\n    }\r\n    if(isInitEnd) startAdd = true;\r\n\r\n    isMount && setTimeout(()=>{ scrollToBottom() }, 200);\r\n\r\n  };\r\n\r\n  const getThemeData = () => {\r\n    if(isMount) {\r\n      const chatWrap = document.querySelector(\".chat_wrap\")\r\n      const theme = chatWrap.getAttribute(\"data-theme\");\r\n      console.log(theme)\r\n      return {'chatWrap': chatWrap, 'theme': theme};\r\n    }\r\n  };\r\n\r\n  const notify = (chatList) => {\r\n    if(chatList.length > 0) {\r\n      const chat = chatList[chatList.length-1];\r\n      if(chat.uid !== authService.currentUser.uid) {\r\n        console.log(\"NOTI > from chat\")\r\n        const res = useNotification('SESH', {\r\n          body: \"from '\"+roomName+\"'\"\r\n        });\r\n        console.log(res);\r\n        // useNotification(chat.email, {\r\n        //   body: `${chat.message}`\r\n        // });\r\n      }\r\n    }\r\n  }\r\n\r\n  const sendMsg = async (e, msg) => {\r\n    if(src !== \"\") {\r\n\r\n      try {\r\n        // const file = document.getElementById(\"input-image\").files[0];\r\n        const fileName = Date.now()+\"_\"+Math.floor(Math.random() * 100);\r\n        const storageRef = storage_ref(storage, 'test/'+fileName);\r\n\r\n        console.log(imgFile);\r\n        console.log(imgFile.name);\r\n\r\n        upload_byte(storageRef, imgFile)\r\n          .then(\r\n            (snapshot) => {\r\n              console.log(snapshot);\r\n              const perc = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              setPercent(perc);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              console.log(\"성공\");\r\n              down_url(uploadTask.snapshot.ref).then((url) => {\r\n                console.log(\"downUrl : \"+url);\r\n              });\r\n            }\r\n          );\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      // pushImgData();\r\n    }\r\n    if(msg.trim() !== \"\") {\r\n      try {\r\n\r\n        await sendChat(roomName,\r\n        {\r\n          uid: authService.currentUser.uid,\r\n          email: authService.currentUser.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }).then(() => {\r\n          setMsg(\"\");\r\n        });\r\n\r\n        sendChatTime(roomName, authService.currentUser.uid);\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  const escFunction = useCallback((event) => {\r\n    if(event.keyCode === 27) {\r\n      setSrc(\"\");\r\n      document.getElementById(\"input-image\").style.display = \"none\";\r\n    }\r\n  }, []);\r\n\r\n  // const getImgPath = (img) => {\r\n  //   console.log(\"getImgPath()\");\r\n  //   // const img = file.files[0];\r\n  //   setImgPath(img);\r\n  //   console.log(imgPath);\r\n  // }\r\n\r\n\r\n// USE EFFECT  ---------------------------------------\r\n  useEffect(() => {\r\n    const themeInfoTmp = getCommonInfo(\"themeInfo\");\r\n    setThemeInfo({theme:themeInfoTmp.theme, themeTxt:themeInfoTmp.themeTxt});\r\n    getAddedChats(roomName, setChatUI);\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n\r\n    return() => {\r\n      isMount = false;\r\n      document.removeEventListener(\"keydown\", escFunction, false);\r\n    }\r\n  }, []);\r\n\r\n\r\n// HANDLE  -------------------------------------------\r\n  const handleSendMsg = async (e) => {\r\n    sendMsg(e, msg);\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n\r\n  const handleKeyPress = async(e) => {\r\n    console.log(e.key);\r\n    console.log(e.shiftKey);\r\n    if(e.key == 'Enter') {\r\n      if(!e.shiftKey) {\r\n        sendMsg(e, msg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const handleTheme = (e) => {\r\n    const modeBtn = document.getElementById(\"modeBtn\");\r\n    const themeData = getThemeData();\r\n    const chatWrap = themeData.chatWrap;\r\n    const theme = themeData.theme;\r\n    if(theme == \"light\") {\r\n      chatWrap.removeAttribute(\"data-theme\", \"light\")\r\n      chatWrap.setAttribute(\"data-theme\", \"dark\")\r\n      modeBtn.innerText = \"LIGHT\"\r\n      setCommonInfo(\"themeInfo\", {theme:\"dark\", themeTxt:\"LIGHT\"})\r\n    }else {\r\n      chatWrap.removeAttribute(\"data-theme\", \"dark\")\r\n      chatWrap.setAttribute(\"data-theme\", \"light\")\r\n      modeBtn.innerText = \"DARK\"\r\n      setCommonInfo(\"themeInfo\", {theme:\"light\", themeTxt:\"DARK\"})\r\n    }\r\n    setChatUI(chatList);\r\n  }\r\n\r\n  const handleOnPaste = (e) => {\r\n    console.log({ event });\r\n    const items = (event.clipboardData || event.originalEvent.clipboardData)\r\n      .items;\r\n\r\n    console.log(\"items: \", JSON.stringify(items));\r\n\r\n    let blob = null;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].type.indexOf(\"image\") === 0) {\r\n        blob = items[i].getAsFile();\r\n      }\r\n    }\r\n\r\n    if (blob !== null) {\r\n      // console.log({ blob });\r\n      const reader = new FileReader();\r\n      reader.onload = function (event) {\r\n        // console.log(event.target.result); // data url!\r\n        // console.log(event.target);\r\n        setSrc(event.target.result);\r\n        document.getElementById(\"input-image\").style.display = \"block\";\r\n      };\r\n      reader.readAsDataURL(blob);\r\n\r\n      var file = new File([blob], Date.now()+Math.floor(Math.random()*100));\r\n      setImgFile(file);\r\n      console.log(imgFile);\r\n\r\n      console.log({ reader });\r\n    }\r\n  }\r\n\r\n\r\n// ETC ----------------------------------------------\r\n  let query = useQuery();\r\n  const roomName = query.get(\"room\");\r\n\r\n  const messageRef = useRef();\r\n  const scrollToBottom = () => {\r\n    messageRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' })\r\n  }\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const toDate = (timestamp) => {\r\n    //let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\r\n    let date = new Intl.DateTimeFormat('ko-KR', {  hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }).format(timestamp);\r\n    return date;\r\n  }\r\n\r\n// --------------------------------------------------\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"chat_wrap\" data-theme={themeInfo.theme}>\r\n      <div className=\"header\">\r\n        <button\r\n          className=\"mode\"\r\n          type=\"button\"\r\n          id=\"modeBtn\"\r\n          value=\"\"\r\n          onClick={handleTheme}>\r\n          {themeInfo.themeTxt}\r\n        </button>\r\n        <div className=\"title\">{roomName}</div>\r\n        <button\r\n          className=\"logout\"\r\n          type=\"button\"\r\n          onClick={handleLogOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"chat\">\r\n        {chats}\r\n        <div ref={messageRef} />\r\n        <img id=\"input-image\"\r\n             className=\"input-image\"\r\n             src={src} />\r\n        <p value={percent} />\r\n      </div>\r\n      <div className=\"input-div\" onKeyPress={handleKeyPress}>\r\n        <textarea\r\n          className=\"input-msg\"\r\n          value={msg}\r\n          placeholder=\"Message Here.\"\r\n          onChange={handleOnChange}\r\n          onPaste={handleOnPaste}\r\n        >\r\n        </textarea>\r\n        <button\r\n          className=\"send\"\r\n          type=\"button\"\r\n          onClick={handleSendMsg}>\r\n          SEND\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}