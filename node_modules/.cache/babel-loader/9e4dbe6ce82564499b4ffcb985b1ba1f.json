{"ast":null,"code":"import { useRef } from 'react';\nconst notificationRef = null;\n\nconst useNotification = (title, option) => {\n  // const notificationRef = useRef(null);\n  if (!(\"Notification\" in window)) {\n    return;\n  }\n\n  if (Notification.permission !== \"granted\") {\n    try {\n      Notification.requestPermission().then(permission => {\n        if (permission !== 'granted') return;\n      });\n    } catch (error) {\n      if (error instanceof TypeError) {\n        Notification.requestPermission(permission => {\n          if (permission !== 'granted') return;\n        });\n      } else {\n        console.error(error);\n      }\n    }\n  } else {\n    notificationRef = new Notification(title, option);\n    setNotificationClickEvent();\n  }\n};\n\nconst setNotificationClickEvent = () => {\n  notificationRef.onclick = event => {\n    event.preventDefault();\n    window.focus();\n    notificationRef.close();\n  };\n};\n\nexport default useNotification;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/useNotification.js"],"names":["useRef","notificationRef","useNotification","title","option","window","Notification","permission","requestPermission","then","error","TypeError","console","setNotificationClickEvent","onclick","event","preventDefault","focus","close"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AAEA,MAAMC,eAAe,GAAG,IAAxB;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEzC;AAEA,MAAI,EAAE,kBAAkBC,MAApB,CAAJ,EAAiC;AAC/B;AACD;;AAED,MAAIC,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,QAAI;AACFD,MAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,YAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,OAFD;AAGD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd,UAAIA,KAAK,YAAYC,SAArB,EAAgC;AAC9BL,QAAAA,YAAY,CAACE,iBAAb,CAAgCD,UAAD,IAAgB;AAC7C,cAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,SAFD;AAGD,OAJD,MAIO;AACLK,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF;AACF,GAdD,MAcM;AACJT,IAAAA,eAAe,GAAG,IAAIK,YAAJ,CAAiBH,KAAjB,EAAwBC,MAAxB,CAAlB;AACAS,IAAAA,yBAAyB;AAC1B;AAEF,CA3BD;;AA6BA,MAAMA,yBAAyB,GAAG,MAAM;AACtCZ,EAAAA,eAAe,CAACa,OAAhB,GAA2BC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACAX,IAAAA,MAAM,CAACY,KAAP;AACAhB,IAAAA,eAAe,CAACiB,KAAhB;AACD,GAJD;AAKD,CAND;;AAQA,eAAehB,eAAf","sourcesContent":["import { useRef } from 'react';\r\n\r\nconst notificationRef = null;\r\nconst useNotification = (title, option) => {\r\n\r\n  // const notificationRef = useRef(null);\r\n\r\n  if (!(\"Notification\" in window)) {\r\n    return;\r\n  }\r\n\r\n  if (Notification.permission !== \"granted\") {\r\n    try {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission !== 'granted') return;\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof TypeError) {\r\n        Notification.requestPermission((permission) => {\r\n          if (permission !== 'granted') return;\r\n        });\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }else {\r\n    notificationRef = new Notification(title, option);\r\n    setNotificationClickEvent();\r\n  }\r\n\r\n};\r\n\r\nconst setNotificationClickEvent = () => {\r\n  notificationRef.onclick = (event) => {\r\n    event.preventDefault();\r\n    window.focus();\r\n    notificationRef.close();\r\n  };\r\n};\r\n\r\nexport default useNotification;\r\n"]},"metadata":{},"sourceType":"module"}