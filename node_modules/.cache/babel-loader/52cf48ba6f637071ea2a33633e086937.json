{"ast":null,"code":"import{database,database_set,database_ref,database_on_value}from\"../services/firebase\";import{onChildAdded,onValue,query,orderByKey,orderByChild,limitToLast,startAt}from\"firebase/database\";export function getRooms(callback){var roomRef=database_ref(database,\"chats/rooms\");onValue(roomRef,function(snapshot){callback(snapshot.val());});}export function getRoomsAuth(roomName,callback){var roomAuthRef=query(database_ref(database,'chats/'+roomName+\"/members\"),limitToLast(10));onValue(roomAuthRef,function(snapshot){callback(snapshot.val());});}export function sendChat(roomName,data){var date=new Date();var today=date.getFullYear()+\"\"+(\"0\"+(date.getMonth()+1)).slice(-2)+\"\"+(\"0\"+date.getDate()).slice(-2);return database_set(database_ref(database,'chats/'+roomName+\"/messages/\"+today+\"/\"+data.timestamp),{message:data.message,timestamp:data.timestamp,email:data.email,uid:data.uid});}export function getAddedChats(roomName,callback){var date=new Date();var today=date.getFullYear()+\"\"+(\"0\"+(date.getMonth()+1)).slice(-2)+\"\"+(\"0\"+date.getDate()).slice(-2);;var chatList=[];var chatRef=query(database_ref(database,'chats/'+roomName+\"/messages/\"+today),limitToLast(10));onChildAdded(chatRef,function(snapshot){if(snapshot.val().hasOwnProperty(\"uid\")){chatList.push(snapshot.val());}callback(chatList);});callback(chatList,true);}/*\r\nexport function getChats(roomName, callback) {\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  },[]);\r\n  callback(chatList);\r\n}\r\n*/","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/database.js"],"names":["database","database_set","database_ref","database_on_value","onChildAdded","onValue","query","orderByKey","orderByChild","limitToLast","startAt","getRooms","callback","roomRef","snapshot","val","getRoomsAuth","roomName","roomAuthRef","sendChat","data","date","Date","today","getFullYear","getMonth","slice","getDate","timestamp","message","email","uid","getAddedChats","chatList","chatRef","hasOwnProperty","push"],"mappings":"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","sourcesContent":["import { database, database_set, database_ref, database_on_value } from \"../services/firebase\";\r\nimport { onChildAdded, onValue, query, orderByKey, orderByChild, limitToLast, startAt } from \"firebase/database\";\r\n\r\nexport function getRooms(callback) {\r\n  const roomRef = database_ref(database, \"chats/rooms\");\r\n  onValue(roomRef, (snapshot) => {\r\n    callback(snapshot.val());\r\n  });\r\n}\r\n\r\nexport function getRoomsAuth(roomName, callback) {\r\n  const roomAuthRef = query(database_ref(database, 'chats/'+roomName+\"/members\"), limitToLast(10));\r\n  onValue(roomAuthRef, (snapshot) => {\r\n    callback(snapshot.val());\r\n  });\r\n}\r\n\r\nexport function sendChat(roomName, data) {\r\n  const date = new Date();\r\n  const today = date.getFullYear()+\"\"+(\"0\" + (date.getMonth() + 1)).slice(-2)+\"\"+(\"0\" + date.getDate()).slice(-2);\r\n  return database_set(database_ref(database, 'chats/'+roomName+\"/messages/\"+today+\"/\"+data.timestamp), {\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    email: data.email,\r\n    uid: data.uid\r\n  });\r\n}\r\n\r\nexport function getAddedChats(roomName, callback) {\r\n  const date = new Date();\r\n  const today = date.getFullYear()+\"\"+(\"0\" + (date.getMonth() + 1)).slice(-2)+\"\"+(\"0\" + date.getDate()).slice(-2);;\r\n  let chatList = [];\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName+\"/messages/\"+today), limitToLast(10));\r\n  onChildAdded(chatRef, (snapshot) => {\r\n    if(snapshot.val().hasOwnProperty(\"uid\")) {\r\n      chatList.push(snapshot.val());\r\n    }\r\n    callback(chatList);\r\n  });\r\n  callback(chatList, true);\r\n}\r\n\r\n/*\r\nexport function getChats(roomName, callback) {\r\n  let chatList = [];\r\n  const date = new Date();\r\n  const today = (new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0)).getTime();\r\n  const chatRef = query(database_ref(database, 'chats/'+roomName), orderByKey(), startAt(today.toString()), limitToLast(10));\r\n  const chatRef2 = database_ref(database);\r\n  get(child(chatRef2, 'chats/'+roomName), limitToLast(10)).then((snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chatList.push(row.val());\r\n    });\r\n  },[]);\r\n  callback(chatList);\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}