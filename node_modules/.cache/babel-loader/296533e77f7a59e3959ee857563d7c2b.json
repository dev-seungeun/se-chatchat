{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyDocuments\\\\workspaces\\\\atom_workspace\\\\sesh-chatchat\\\\src\\\\pages\\\\Chat.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useHistory, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { logout } from \"../helpers/auth\";\nimport { authService, database, database_ref } from \"../services/firebase\";\nimport { sendChat, sendChatTime, getChats, getAddedChats, offRef, getCommonInfo, setCommonInfo } from \"../helpers/database\";\nimport { useNotification } from \"../helpers/useNotification\";\nimport \"../chat.css\";\nimport axios from \"axios\";\nimport MockAdapter from \"axios-mock-adapter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  const query = React.useMemo(() => new URLSearchParams(search), [search]);\n  return query;\n}\n\n_s(useQuery, \"oEpefbUBhGKQodgjMPdMiKsuhFE=\", false, function () {\n  return [useLocation];\n});\n\nfunction Chat() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  let isMount = true;\n  let startAdd = false;\n  const [msg, setMsg] = useState(\"\");\n  const [chatList, setChatList] = useState(\"\");\n  const [chats, setChats] = useState(\"\");\n  const [themeInfo, setThemeInfo] = useState({\n    theme: \"\",\n    themeTxt: \"\"\n  });\n\n  const setChatUI = (chatList, isInitEnd) => {\n    const themeData = getThemeData();\n\n    const myList = () => {\n      if (themeData.theme == \"light\") {\n        const list = chatList.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: toDate(chat.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 68\n            }, this)\n          }, createItem(index + \"time\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: chat.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 72\n            }, this)\n          }, createItem(index + \"sender\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: chat.message.split('\\n').map(line => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 68\n                }, this)]\n              }, createItem(index + \"span\"), true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 25\n              }, this);\n            })\n          }, createItem(index + \"message\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, createItem(index + \"li\"), true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this);\n      } else {\n        const list = chatList.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: chat.uid === authService.currentUser.uid ? \"right\" : \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"C:\\\\Users\\\\\" + chat.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 72\n            }, this)\n          }, createItem(index + \"sender\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: toDate(chat.timestamp) + \" >\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 68\n            }, this)\n          }, createItem(index + \"time\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: chat.message.split('\\n').map(line => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 68\n                }, this)]\n              }, createItem(index + \"span\"), true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 25\n              }, this);\n            })\n          }, createItem(index + \"message\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, createItem(index + \"li\"), true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this));\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    setChats(myList);\n    setChatList(chatList);\n    const focused = document.hasFocus();\n\n    if (!focused && startAdd && isMount) {\n      notify(chatList);\n    }\n\n    if (isInitEnd) startAdd = true;\n    isMount && setTimeout(() => {\n      scrollToBottom();\n    }, 200);\n  };\n\n  const getThemeData = () => {\n    if (isMount) {\n      const chatWrap = document.querySelector(\".chat_wrap\");\n      const theme = chatWrap.getAttribute(\"data-theme\");\n      console.log(theme);\n      return {\n        'chatWrap': chatWrap,\n        'theme': theme\n      };\n    }\n  };\n\n  const notify = chatList => {\n    _s2();\n\n    if (chatList.length > 0) {\n      const chat = chatList[chatList.length - 1];\n\n      if (chat.uid !== authService.currentUser.uid) {\n        console.log(\"NOTI > from chat\");\n        const res = useNotification('SESH', {\n          body: \"from '\" + roomName + \"'\"\n        });\n        console.log(res); // useNotification(chat.email, {\n        //   body: `${chat.message}`\n        // });\n      }\n    }\n  };\n\n  _s2(notify, \"1f5oqaShrgpqzmMOLHKUPFa+cro=\", false, function () {\n    return [useNotification];\n  });\n\n  const sendMsg = async (e, msg) => {\n    if (msg.trim() !== \"\") {\n      try {\n        await sendChat(roomName, {\n          uid: authService.currentUser.uid,\n          email: authService.currentUser.email,\n          message: msg,\n          timestamp: Date.now()\n        }).then(() => {\n          setMsg(\"\");\n        });\n        sendChatTime(roomName, authService.currentUser.uid);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }; // USE EFFECT  ---------------------------------------\n\n\n  useEffect(() => {\n    const themeInfoTmp = getCommonInfo(\"themeInfo\");\n    setThemeInfo({\n      theme: themeInfoTmp.theme,\n      themeTxt: themeInfoTmp.themeTxt\n    });\n    getAddedChats(roomName, setChatUI);\n    return () => {\n      isMount = false;\n    };\n  }, []); // HANDLE  -------------------------------------------\n\n  const handleSendMsg = async e => {\n    sendMsg(e, msg);\n  };\n\n  const handleLogOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOnChange = e => {\n    setMsg(e.target.value);\n  };\n\n  const handleKeyPress = async e => {\n    if (e.key == 'Enter') {\n      if (!e.shiftKey) {\n        sendMsg(e, msg);\n      }\n    }\n  };\n\n  const handleTheme = e => {\n    const modeBtn = document.getElementById(\"modeBtn\");\n    const themeData = getThemeData();\n    const chatWrap = themeData.chatWrap;\n    const theme = themeData.theme;\n\n    if (theme == \"light\") {\n      chatWrap.removeAttribute(\"data-theme\", \"light\");\n      chatWrap.setAttribute(\"data-theme\", \"dark\");\n      modeBtn.innerText = \"LIGHT\";\n      setCommonInfo(\"themeInfo\", {\n        theme: \"dark\",\n        themeTxt: \"LIGHT\"\n      });\n    } else {\n      chatWrap.removeAttribute(\"data-theme\", \"dark\");\n      chatWrap.setAttribute(\"data-theme\", \"light\");\n      modeBtn.innerText = \"DARK\";\n      setCommonInfo(\"themeInfo\", {\n        theme: \"light\",\n        themeTxt: \"DARK\"\n      });\n    }\n\n    setChatUI(chatList);\n  };\n\n  const handelAttachFile = e => {\n    $('#dnModal').modal('open');\n    var files = event.target.files;\n    var filesLength = files.length;\n    var progressBar = document.getElementById('dvProgressBar');\n    var fileName = files[0].name;\n    var path = FirebaseChat.yyyyMMddHHmmsss().substr(0, 8) + '/' + this.roomId + '/' + this.auth.currentUser.uid + '/' + fileName;\n    var uploadTask = firebase.storage().ref().child(path).put(files[0]);\n\n    var cbProgress = function (snapshot) {\n      // 진행 과정\n      var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      progressBar.style.width = progress + '%';\n    };\n\n    var cbError = function (error) {\n      // 에러발생\n      console.log(error);\n      $('#dnModal').modal('close');\n      alert('업로드 중 에러가 발생하였습니다.');\n    };\n\n    var cbComplete = function () {\n      // 완료\n      //프로그레스바 닫기\n      $('#dnModal').modal('close'); //완료 다운로드 링크 메세지 보내기\n\n      this.saveMessages(null, uploadTask.snapshot.downloadURL, fileName); //files 리셋\n\n      event.target.value = '';\n    }; //프로그레스바\n\n\n    uploadTask.on('state_changed', cbProgress.bind(this), cbError.bind(this), cbComplete.bind(this));\n  }; // ETC ----------------------------------------------\n\n\n  let query = useQuery();\n  const roomName = query.get(\"room\");\n  const messageRef = useRef();\n\n  const scrollToBottom = () => {\n    messageRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  };\n\n  let itemId = 1;\n\n  const createItem = text => {\n    return itemId++ + text;\n  };\n\n  const toDate = timestamp => {\n    //let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\n    let date = new Intl.DateTimeFormat('ko-KR', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    }).format(timestamp);\n    return date;\n  }; // FILE ----------------------------------------------\n\n\n  const comment = React.useRef();\n\n  const buildImageHtml = seq => `<img src=\"https://lahuman.github.io/assets/img/logo.png\" width=\"100%\"/>`;\n\n  const fileUpload = async blob => {\n    const formData = new FormData();\n    formData.append(\"file\", blob);\n    const {\n      data: fileInfo\n    } = await axios.post(`/fileupload`, formData);\n    return fileInfo;\n  };\n\n  const focusMoveWithFile = () => {\n    comment.current.focus();\n\n    if (typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\n      const range = document.createRange();\n      range.selectNodeContents(comment.current);\n      range.collapse(false);\n      const sel = window.getSelection();\n      if (!sel) return;\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  }; // --------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_wrap\",\n    \"data-theme\": themeInfo.theme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode\",\n        type: \"button\",\n        id: \"modeBtn\",\n        value: \"\",\n        onClick: handleTheme,\n        children: themeInfo.themeTxt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        type: \"button\",\n        onClick: handleLogOut,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [chats, /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      onKeyPress: handleKeyPress,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-msg\",\n        value: msg,\n        placeholder: \"Message Here.\",\n        onChange: handleOnChange,\n        ref: comment,\n        contentEditable: \"true\",\n        className: \"comment\",\n        suppressContentEditableWarning: true,\n        onPaste: async event => {\n          // event.preventDefault(); 이 없을 경우 upload와 상관 없이 이미지가 붙음\n          event.preventDefault();\n          const item = event.clipboardData.items[0];\n\n          if (item.type.indexOf(\"image\") === 0) {\n            const blob = item.getAsFile();\n            const {\n              seq\n            } = await fileUpload(blob);\n            const text = `${comment.current.innerHTML}${buildImageHtml(seq)}`;\n            comment.current.innerHTML = text;\n            focusMoveWithFile();\n          } else {\n            // 이미지가 아닐 경우 text로 처리\n            const paste = event.clipboardData.getData(\"text\");\n\n            if (paste) {\n              const selection = window.getSelection();\n              if (!selection) return;\n              if (selection && !selection.rangeCount) return;\n              selection === null || selection === void 0 ? void 0 : selection.deleteFromDocument();\n              selection === null || selection === void 0 ? void 0 : selection.getRangeAt(0).insertNode(document.createTextNode(paste));\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send\",\n        type: \"button\",\n        onClick: handleSendMsg,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: comment,\n      contentEditable: \"true\",\n      className: \"comment\",\n      suppressContentEditableWarning: true,\n      onPaste: async event => {\n        // event.preventDefault(); 이 없을 경우 upload와 상관 없이 이미지가 붙음\n        event.preventDefault();\n        const item = event.clipboardData.items[0];\n\n        if (item.type.indexOf(\"image\") === 0) {\n          const blob = item.getAsFile();\n          const {\n            seq\n          } = await fileUpload(blob);\n          const text = `${comment.current.innerHTML}${buildImageHtml(seq)}`;\n          comment.current.innerHTML = text;\n          focusMoveWithFile();\n        } else {\n          // 이미지가 아닐 경우 text로 처리\n          const paste = event.clipboardData.getData(\"text\");\n\n          if (paste) {\n            const selection = window.getSelection();\n            if (!selection) return;\n            if (selection && !selection.rangeCount) return;\n            selection === null || selection === void 0 ? void 0 : selection.deleteFromDocument();\n            selection === null || selection === void 0 ? void 0 : selection.getRangeAt(0).insertNode(document.createTextNode(paste));\n          }\n        }\n      },\n      placeholder: \"\\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694 (\\uAE00 \\uC791\\uC131 \\uAFC0\\uD301 : \\uC5EC\\uAE30\\uC5D0 \\uC774\\uBBF8\\uC9C0\\uB97C Ctrl+C, Ctrl+V\\uB85C \\uBC14\\uB85C \\uBD99\\uC5EC\\uB123\\uAE30 \\uD560 \\uC218 \\uC788\\uC5B4\\uC694!)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Chat, \"d3Vt6efc3vCiquGo1C0rl8jhJd4=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/MyDocuments/workspaces/atom_workspace/sesh-chatchat/src/pages/Chat.js"],"names":["React","useState","useHistory","useEffect","useRef","useLocation","logout","authService","database","database_ref","sendChat","sendChatTime","getChats","getAddedChats","offRef","getCommonInfo","setCommonInfo","useNotification","axios","MockAdapter","useQuery","search","query","useMemo","URLSearchParams","Chat","isMount","startAdd","msg","setMsg","chatList","setChatList","chats","setChats","themeInfo","setThemeInfo","theme","themeTxt","setChatUI","isInitEnd","themeData","getThemeData","myList","list","map","chat","index","uid","currentUser","toDate","timestamp","createItem","email","message","split","line","focused","document","hasFocus","notify","setTimeout","scrollToBottom","chatWrap","querySelector","getAttribute","console","log","length","res","body","roomName","sendMsg","e","trim","Date","now","then","error","themeInfoTmp","handleSendMsg","handleLogOut","handleOnChange","target","value","handleKeyPress","key","shiftKey","handleTheme","modeBtn","getElementById","removeAttribute","setAttribute","innerText","handelAttachFile","$","modal","files","event","filesLength","progressBar","fileName","name","path","FirebaseChat","yyyyMMddHHmmsss","substr","roomId","auth","uploadTask","firebase","storage","ref","child","put","cbProgress","snapshot","progress","bytesTransferred","totalBytes","style","width","cbError","alert","cbComplete","saveMessages","downloadURL","on","bind","get","messageRef","current","scrollIntoView","behavior","block","itemId","text","date","Intl","DateTimeFormat","hour","minute","second","hour12","format","comment","buildImageHtml","seq","fileUpload","blob","formData","FormData","append","data","fileInfo","post","focusMoveWithFile","focus","window","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","preventDefault","item","clipboardData","items","type","indexOf","getAsFile","innerHTML","paste","getData","selection","rangeCount","deleteFromDocument","getRangeAt","insertNode","createTextNode"],"mappings":"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","sourcesContent":["import React, { useState, useHistory, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { authService, database, database_ref } from \"../services/firebase\";\r\nimport { sendChat, sendChatTime, getChats, getAddedChats, offRef, getCommonInfo, setCommonInfo } from \"../helpers/database\";\r\nimport { useNotification } from \"../helpers/useNotification\";\r\nimport \"../chat.css\";\r\nimport axios from \"axios\";\r\nimport MockAdapter from \"axios-mock-adapter\";\r\n\r\nfunction useQuery() {\r\n  const { search } = useLocation();\r\n  const query = React.useMemo(() => new URLSearchParams(search), [search]);\r\n  return query;\r\n}\r\n\r\nfunction Chat() {\r\n\r\n  let isMount = true;\r\n  let startAdd = false;\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chatList, setChatList] = useState(\"\");\r\n  const [chats, setChats] = useState(\"\");\r\n  const [themeInfo, setThemeInfo] = useState({theme:\"\", themeTxt:\"\"});\r\n\r\n  const setChatUI = (chatList, isInitEnd) => {\r\n    const themeData = getThemeData();\r\n    const myList = () => {\r\n      if(themeData.theme == \"light\") {\r\n        const list = chatList.map((chat, index) => (\r\n          <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n            <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)}</span></div>\r\n            <div key={createItem(index+\"sender\")} className = \"sender\"><span>{chat.email}</span></div>\r\n            <div key={createItem(index+\"message\")} className = \"message\">\r\n              {chat.message.split('\\n').map( line => {\r\n                return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n               })}\r\n            </div>\r\n          </li>\r\n        ));\r\n        return <ul>{list}</ul>;\r\n      }else {\r\n        const list = chatList.map((chat, index) => (\r\n          <li key={createItem(index+\"li\")} className={chat.uid === authService.currentUser.uid ? \"right\" : \"left\"}>\r\n            <div key={createItem(index+\"sender\")} className = \"sender\"><span>{\"C:\\\\Users\\\\\"+chat.email}</span></div>\r\n            <div key={createItem(index+\"time\")} className = \"time\"><span>{toDate(chat.timestamp)+\" >\"}</span></div>\r\n            <div key={createItem(index+\"message\")} className = \"message\">\r\n              {chat.message.split('\\n').map( line => {\r\n                return (<span key={createItem(index+\"span\")}>{line}<br/></span>)\r\n               })}\r\n            </div>\r\n          </li>\r\n        ));\r\n        return <ul>{list}</ul>;\r\n      }\r\n    }\r\n    setChats(myList);\r\n    setChatList(chatList);\r\n\r\n    const focused = document.hasFocus();\r\n    if(!focused && startAdd && isMount) {\r\n      notify(chatList);\r\n    }\r\n    if(isInitEnd) startAdd = true;\r\n\r\n    isMount && setTimeout(()=>{ scrollToBottom() }, 200);\r\n\r\n  };\r\n\r\n  const getThemeData = () => {\r\n    if(isMount) {\r\n      const chatWrap = document.querySelector(\".chat_wrap\")\r\n      const theme = chatWrap.getAttribute(\"data-theme\");\r\n      console.log(theme)\r\n      return {'chatWrap': chatWrap, 'theme': theme};\r\n    }\r\n  };\r\n\r\n  const notify = (chatList) => {\r\n    if(chatList.length > 0) {\r\n      const chat = chatList[chatList.length-1];\r\n      if(chat.uid !== authService.currentUser.uid) {\r\n        console.log(\"NOTI > from chat\")\r\n        const res = useNotification('SESH', {\r\n          body: \"from '\"+roomName+\"'\"\r\n        });\r\n        console.log(res);\r\n        // useNotification(chat.email, {\r\n        //   body: `${chat.message}`\r\n        // });\r\n      }\r\n    }\r\n  }\r\n\r\n  const sendMsg = async (e, msg) => {\r\n    if(msg.trim() !== \"\") {\r\n      try {\r\n\r\n        await sendChat(roomName,\r\n        {\r\n          uid: authService.currentUser.uid,\r\n          email: authService.currentUser.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }).then(() => {\r\n          setMsg(\"\");\r\n        });\r\n\r\n        sendChatTime(roomName, authService.currentUser.uid);\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n// USE EFFECT  ---------------------------------------\r\n  useEffect(() => {\r\n    const themeInfoTmp = getCommonInfo(\"themeInfo\");\r\n    setThemeInfo({theme:themeInfoTmp.theme, themeTxt:themeInfoTmp.themeTxt});\r\n    getAddedChats(roomName, setChatUI);\r\n    return() => {\r\n      isMount = false;\r\n    }\r\n  }, []);\r\n\r\n\r\n// HANDLE  -------------------------------------------\r\n  const handleSendMsg = async (e) => {\r\n    sendMsg(e, msg);\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n     console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n\r\n  const handleKeyPress = async(e) => {\r\n    if(e.key == 'Enter') {\r\n      if(!e.shiftKey) {\r\n        sendMsg(e, msg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const handleTheme = (e) => {\r\n    const modeBtn = document.getElementById(\"modeBtn\");\r\n    const themeData = getThemeData();\r\n    const chatWrap = themeData.chatWrap;\r\n    const theme = themeData.theme;\r\n    if(theme == \"light\") {\r\n      chatWrap.removeAttribute(\"data-theme\", \"light\")\r\n      chatWrap.setAttribute(\"data-theme\", \"dark\")\r\n      modeBtn.innerText = \"LIGHT\"\r\n      setCommonInfo(\"themeInfo\", {theme:\"dark\", themeTxt:\"LIGHT\"})\r\n    }else {\r\n      chatWrap.removeAttribute(\"data-theme\", \"dark\")\r\n      chatWrap.setAttribute(\"data-theme\", \"light\")\r\n      modeBtn.innerText = \"DARK\"\r\n      setCommonInfo(\"themeInfo\", {theme:\"light\", themeTxt:\"DARK\"})\r\n    }\r\n    setChatUI(chatList);\r\n  }\r\n\r\n  const handelAttachFile = (e) => {\r\n      $('#dnModal').modal('open');\r\n      var files = event.target.files;\r\n      var filesLength = files.length;\r\n      var progressBar = document.getElementById('dvProgressBar');\r\n      var fileName = files[0].name;\r\n      var path = FirebaseChat.yyyyMMddHHmmsss().substr(0, 8) +'/'+this.roomId + '/' + this.auth.currentUser.uid + '/' + fileName;\r\n      var uploadTask = firebase.storage().ref().child(path).put(files[0]);\r\n\r\n      var cbProgress = function(snapshot){ // 진행 과정\r\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          progressBar.style.width = progress+'%';\r\n      }\r\n\r\n      var cbError = function(error) { // 에러발생\r\n          console.log(error);\r\n          $('#dnModal').modal('close');\r\n          alert('업로드 중 에러가 발생하였습니다.');\r\n      }\r\n      var cbComplete = function() { // 완료\r\n          //프로그레스바 닫기\r\n          $('#dnModal').modal('close');\r\n\r\n          //완료 다운로드 링크 메세지 보내기\r\n          this.saveMessages(null, uploadTask.snapshot.downloadURL, fileName);\r\n\r\n          //files 리셋\r\n          event.target.value='';\r\n      }\r\n      //프로그레스바\r\n      uploadTask.on('state_changed', cbProgress.bind(this) , cbError.bind(this), cbComplete.bind(this));\r\n  }\r\n\r\n\r\n// ETC ----------------------------------------------\r\n  let query = useQuery();\r\n  const roomName = query.get(\"room\");\r\n\r\n  const messageRef = useRef();\r\n  const scrollToBottom = () => {\r\n    messageRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' })\r\n  }\r\n\r\n  let itemId = 1;\r\n  const createItem = (text) => {\r\n    return (itemId++) + text;\r\n  }\r\n\r\n  const toDate = (timestamp) => {\r\n    //let date = new Intl.DateTimeFormat('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\r\n    let date = new Intl.DateTimeFormat('ko-KR', {  hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }).format(timestamp);\r\n    return date;\r\n  }\r\n\r\n\r\n// FILE ----------------------------------------------\r\n  const comment = React.useRef();\r\n\r\n  const buildImageHtml = (seq) =>\r\n  `<img src=\"https://lahuman.github.io/assets/img/logo.png\" width=\"100%\"/>`;\r\n\r\n  const fileUpload = async (blob) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", blob);\r\n    const { data: fileInfo } = await axios.post(`/fileupload`, formData);\r\n    return fileInfo;\r\n  };\r\n\r\n  const focusMoveWithFile = () => {\r\n    comment.current.focus();\r\n    if (\r\n      typeof window.getSelection !== \"undefined\" &&\r\n      typeof document.createRange !== \"undefined\"\r\n    ) {\r\n      const range = document.createRange();\r\n      range.selectNodeContents(comment.current);\r\n      range.collapse(false);\r\n      const sel = window.getSelection();\r\n      if (!sel) return;\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n    }\r\n  };\r\n// --------------------------------------------------\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"chat_wrap\" data-theme={themeInfo.theme}>\r\n      <div className=\"header\">\r\n        <button\r\n          className=\"mode\"\r\n          type=\"button\"\r\n          id=\"modeBtn\"\r\n          value=\"\"\r\n          onClick={handleTheme}>\r\n          {themeInfo.themeTxt}\r\n        </button>\r\n        <div className=\"title\">{roomName}</div>\r\n        <button\r\n          className=\"logout\"\r\n          type=\"button\"\r\n          onClick={handleLogOut}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n      <div className=\"chat\">\r\n        {chats}\r\n        <div ref={messageRef} />\r\n      </div>\r\n      <div className=\"input-div\" onKeyPress={handleKeyPress}>\r\n        <textarea\r\n          className=\"input-msg\"\r\n          value={msg}\r\n          placeholder=\"Message Here.\"\r\n          onChange={handleOnChange}\r\n\r\n          ref={comment}\r\n          contentEditable=\"true\"\r\n          className=\"comment\"\r\n          suppressContentEditableWarning\r\n          onPaste={async (event) => {\r\n            // event.preventDefault(); 이 없을 경우 upload와 상관 없이 이미지가 붙음\r\n            event.preventDefault();\r\n            const item = event.clipboardData.items[0];\r\n            if (item.type.indexOf(\"image\") === 0) {\r\n              const blob = item.getAsFile();\r\n              const { seq } = await fileUpload(blob);\r\n              const text = `${comment.current.innerHTML}${buildImageHtml(seq)}`;\r\n              comment.current.innerHTML = text;\r\n              focusMoveWithFile();\r\n            } else {\r\n              // 이미지가 아닐 경우 text로 처리\r\n              const paste = event.clipboardData.getData(\"text\");\r\n              if (paste) {\r\n                const selection = window.getSelection();\r\n                if (!selection) return;\r\n                if (selection && !selection.rangeCount) return;\r\n                selection?.deleteFromDocument();\r\n                selection?.getRangeAt(0).insertNode(document.createTextNode(paste));\r\n              }\r\n            }\r\n          }}\r\n        >\r\n        </textarea>\r\n        <button\r\n          className=\"send\"\r\n          type=\"button\"\r\n          onClick={handleSendMsg}>\r\n          SEND\r\n        </button>\r\n      </div>\r\n      <div\r\n        ref={comment}\r\n        contentEditable=\"true\"\r\n        className=\"comment\"\r\n        suppressContentEditableWarning\r\n        onPaste={async (event) => {\r\n          // event.preventDefault(); 이 없을 경우 upload와 상관 없이 이미지가 붙음\r\n          event.preventDefault();\r\n          const item = event.clipboardData.items[0];\r\n          if (item.type.indexOf(\"image\") === 0) {\r\n            const blob = item.getAsFile();\r\n            const { seq } = await fileUpload(blob);\r\n            const text = `${comment.current.innerHTML}${buildImageHtml(seq)}`;\r\n            comment.current.innerHTML = text;\r\n            focusMoveWithFile();\r\n          } else {\r\n            // 이미지가 아닐 경우 text로 처리\r\n            const paste = event.clipboardData.getData(\"text\");\r\n            if (paste) {\r\n              const selection = window.getSelection();\r\n              if (!selection) return;\r\n              if (selection && !selection.rangeCount) return;\r\n              selection?.deleteFromDocument();\r\n              selection?.getRangeAt(0).insertNode(document.createTextNode(paste));\r\n            }\r\n          }\r\n        }}\r\n        placeholder=\"글을 작성해주세요 (글 작성 꿀팁 : 여기에 이미지를 Ctrl+C, Ctrl+V로 바로 붙여넣기 할 수 있어요!)\"\r\n      />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}