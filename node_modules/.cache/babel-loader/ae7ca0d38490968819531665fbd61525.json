{"ast":null,"code":"const useNotification = (title, option) => {\n  if (!(\"Notification\" in window)) {\n    return;\n  }\n\n  if (Notification.permission !== \"granted\") {\n    try {\n      Notification.requestPermission().then(permission => {\n        if (permission !== 'granted') return;\n      });\n    } catch (error) {\n      if (error instanceof TypeError) {\n        Notification.requestPermission(permission => {\n          if (permission !== 'granted') return;\n        });\n      } else {\n        console.error(error);\n      }\n    }\n  } else {\n    var notification = new Notification(title, option);\n\n    notification.onclick = function (event) {\n      event.notification.close();\n      event.waitUntil(clients.matchAll({\n        type: \"window\"\n      }).then(function (clientList) {\n        //실행된 브라우저가 있으면 Focus\n        for (var i = 0; i < clientList.length; i++) {\n          var client = clientList[i];\n          if (client.url == '/' && 'focus' in client) return client.focus();\n        } //실행된 브라우저가 없으면 Open\n\n\n        if (clients.openWindow) return clients.openWindow('https://localhost:3000/');\n      }));\n    };\n  }\n};\n\nexport default useNotification;","map":{"version":3,"sources":["C:/workspaces/atom_workspace/sesh-chatchat/src/helpers/useNotification.js"],"names":["useNotification","title","option","window","Notification","permission","requestPermission","then","error","TypeError","console","notification","onclick","event","close","waitUntil","clients","matchAll","type","clientList","i","length","client","url","focus","openWindow"],"mappings":"AACA,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEzC,MAAI,EAAE,kBAAkBC,MAApB,CAAJ,EAAiC;AAC/B;AACD;;AAED,MAAIC,YAAY,CAACC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,QAAI;AACFD,MAAAA,YAAY,CAACE,iBAAb,GAAiCC,IAAjC,CAAuCF,UAAD,IAAgB;AACpD,YAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,OAFD;AAGD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd,UAAIA,KAAK,YAAYC,SAArB,EAAgC;AAC9BL,QAAAA,YAAY,CAACE,iBAAb,CAAgCD,UAAD,IAAgB;AAC7C,cAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC/B,SAFD;AAGD,OAJD,MAIO;AACLK,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF;AACF,GAdD,MAcM;AACJ,QAAIG,YAAY,GAAG,IAAIP,YAAJ,CAAiBH,KAAjB,EAAwBC,MAAxB,CAAnB;;AACAS,IAAAA,YAAY,CAACC,OAAb,GAAuB,UAASC,KAAT,EAAgB;AACrCA,MAAAA,KAAK,CAACF,YAAN,CAAmBG,KAAnB;AACAD,MAAAA,KAAK,CAACE,SAAN,CACEC,OAAO,CAACC,QAAR,CAAiB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAjB,EACKX,IADL,CACU,UAAUY,UAAV,EACN;AACI;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EACA;AACI,cAAIE,MAAM,GAAGH,UAAU,CAACC,CAAD,CAAvB;AACA,cAAIE,MAAM,CAACC,GAAP,IAAc,GAAd,IAAqB,WAAWD,MAApC,EACI,OAAOA,MAAM,CAACE,KAAP,EAAP;AACP,SAPL,CAQI;;;AACA,YAAIR,OAAO,CAACS,UAAZ,EACI,OAAOT,OAAO,CAACS,UAAR,CAAmB,yBAAnB,CAAP;AACP,OAbL,CADF;AAgBD,KAlBD;AAmBD;AAEF,CA3CD;;AA6CA,eAAezB,eAAf","sourcesContent":["\r\nconst useNotification = (title, option) => {\r\n\r\n  if (!(\"Notification\" in window)) {\r\n    return;\r\n  }\r\n\r\n  if (Notification.permission !== \"granted\") {\r\n    try {\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission !== 'granted') return;\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof TypeError) {\r\n        Notification.requestPermission((permission) => {\r\n          if (permission !== 'granted') return;\r\n        });\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }else {\r\n    var notification = new Notification(title, option);\r\n    notification.onclick = function(event) {\r\n      event.notification.close();\r\n      event.waitUntil(\r\n        clients.matchAll({ type: \"window\" })\r\n            .then(function (clientList)\r\n            {\r\n                //실행된 브라우저가 있으면 Focus\r\n                for (var i = 0; i < clientList.length; i++)\r\n                {\r\n                    var client = clientList[i];\r\n                    if (client.url == '/' && 'focus' in client)\r\n                        return client.focus();\r\n                }\r\n                //실행된 브라우저가 없으면 Open\r\n                if (clients.openWindow)\r\n                    return clients.openWindow('https://localhost:3000/');\r\n            })\r\n       );\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default useNotification;\r\n"]},"metadata":{},"sourceType":"module"}